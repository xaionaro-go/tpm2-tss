// License: CC-0

// WARNING: This file has automatically been generated on Sun, 18 Apr 2021 12:55:04 IST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package cgo_tpm2_tss

/*
#cgo pkg-config: tss2-tcti-mssim tss2-tcti-device tss2-mu tss2-tctildr tss2-rc tss2-sys tss2-esys
#cgo CFLAGS: -I ../c/include
#include "tss2/tss2_common.h"
#include "tss2/tss2_esys.h"
#include "tss2/tss2_mu.h"
#include "tss2/tss2_rc.h"
#include "tss2/tss2_sys.h"
#include "tss2/tss2_tcti_device.h"
#include "tss2/tss2_tcti.h"
#include "tss2/tss2_tctildr.h"
#include "tss2/tss2_tcti_mssim.h"
#include "tss2/tss2_tcti_tbs.h"
#include "tss2/tss2_tpm2_types.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// EsysInitialize function as declared in tss2/tss2_esys.h:73
func EsysInitialize(esysContext **EsysContext, tcti *Tss2TctiContext, abiversion *Tss2AbiVersion) Tss2Rc {
	cesysContext, cesysContextAllocMap := (**C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	ctcti, ctctiAllocMap := (*C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcti)), cgoAllocsUnknown
	cabiversion, cabiversionAllocMap := abiversion.PassRef()
	__ret := C.Esys_Initialize(cesysContext, ctcti, cabiversion)
	runtime.KeepAlive(cabiversionAllocMap)
	runtime.KeepAlive(ctctiAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFinalize function as declared in tss2/tss2_esys.h:79
func EsysFinalize(context **EsysContext) {
	ccontext, ccontextAllocMap := (**C.ESYS_CONTEXT)(unsafe.Pointer(context)), cgoAllocsUnknown
	C.Esys_Finalize(ccontext)
	runtime.KeepAlive(ccontextAllocMap)
}

// EsysGettcti function as declared in tss2/tss2_esys.h:83
func EsysGettcti(esysContext *EsysContext, tcti **Tss2TctiContext) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	ctcti, ctctiAllocMap := (**C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcti)), cgoAllocsUnknown
	__ret := C.Esys_GetTcti(cesysContext, ctcti)
	runtime.KeepAlive(ctctiAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysGetpollhandles function as declared in tss2/tss2_esys.h:88
func EsysGetpollhandles(esysContext *EsysContext, handles **Tss2TctiPollHandle, count *SizeT) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	chandles, chandlesAllocMap := (*C.TSS2_TCTI_POLL_HANDLE)(unsafe.Pointer(handles)), cgoAllocsUnknown
	ccount, ccountAllocMap := (*C.size_t)(unsafe.Pointer(count)), cgoAllocsUnknown
	__ret := C.Esys_GetPollHandles(cesysContext, (**C.TSS2_TCTI_POLL_HANDLE)(unsafe.Pointer(chandles)), ccount)
	runtime.KeepAlive(ccountAllocMap)
	runtime.KeepAlive(chandlesAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSettimeout function as declared in tss2/tss2_esys.h:94
func EsysSettimeout(esysContext *EsysContext, timeout Int32T) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := (C.int32_t)(timeout), cgoAllocsUnknown
	__ret := C.Esys_SetTimeout(cesysContext, ctimeout)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrSerialize function as declared in tss2/tss2_esys.h:99
func EsysTrSerialize(esysContext *EsysContext, object EsysTr, buffer **Uint8T, bufferSize *SizeT) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	cobject, cobjectAllocMap := (C.ESYS_TR)(object), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (**C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (*C.size_t)(unsafe.Pointer(bufferSize)), cgoAllocsUnknown
	__ret := C.Esys_TR_Serialize(cesysContext, cobject, cbuffer, cbufferSize)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cobjectAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrDeserialize function as declared in tss2/tss2_esys.h:106
func EsysTrDeserialize(esysContext *EsysContext, buffer []Uint8T, bufferSize SizeT, esysHandle *EsysTr) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	cesysHandle, cesysHandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(esysHandle)), cgoAllocsUnknown
	__ret := C.Esys_TR_Deserialize(cesysContext, cbuffer, cbufferSize, cesysHandle)
	runtime.KeepAlive(cesysHandleAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrFromtpmpublicAsync function as declared in tss2/tss2_esys.h:113
func EsysTrFromtpmpublicAsync(esyscontext *EsysContext, tpmHandle Tpm2Handle, optionalsession1 EsysTr, optionalsession2 EsysTr, optionalsession3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ctpmHandle, ctpmHandleAllocMap := (C.TPM2_HANDLE)(tpmHandle), cgoAllocsUnknown
	coptionalsession1, coptionalsession1AllocMap := (C.ESYS_TR)(optionalsession1), cgoAllocsUnknown
	coptionalsession2, coptionalsession2AllocMap := (C.ESYS_TR)(optionalsession2), cgoAllocsUnknown
	coptionalsession3, coptionalsession3AllocMap := (C.ESYS_TR)(optionalsession3), cgoAllocsUnknown
	__ret := C.Esys_TR_FromTPMPublic_Async(cesyscontext, ctpmHandle, coptionalsession1, coptionalsession2, coptionalsession3)
	runtime.KeepAlive(coptionalsession3AllocMap)
	runtime.KeepAlive(coptionalsession2AllocMap)
	runtime.KeepAlive(coptionalsession1AllocMap)
	runtime.KeepAlive(ctpmHandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrFromtpmpublicFinish function as declared in tss2/tss2_esys.h:121
func EsysTrFromtpmpublicFinish(esyscontext *EsysContext, object *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cobject, cobjectAllocMap := (*C.ESYS_TR)(unsafe.Pointer(object)), cgoAllocsUnknown
	__ret := C.Esys_TR_FromTPMPublic_Finish(cesyscontext, cobject)
	runtime.KeepAlive(cobjectAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrFromtpmpublic function as declared in tss2/tss2_esys.h:126
func EsysTrFromtpmpublic(esyscontext *EsysContext, tpmHandle Tpm2Handle, optionalsession1 EsysTr, optionalsession2 EsysTr, optionalsession3 EsysTr, object *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ctpmHandle, ctpmHandleAllocMap := (C.TPM2_HANDLE)(tpmHandle), cgoAllocsUnknown
	coptionalsession1, coptionalsession1AllocMap := (C.ESYS_TR)(optionalsession1), cgoAllocsUnknown
	coptionalsession2, coptionalsession2AllocMap := (C.ESYS_TR)(optionalsession2), cgoAllocsUnknown
	coptionalsession3, coptionalsession3AllocMap := (C.ESYS_TR)(optionalsession3), cgoAllocsUnknown
	cobject, cobjectAllocMap := (*C.ESYS_TR)(unsafe.Pointer(object)), cgoAllocsUnknown
	__ret := C.Esys_TR_FromTPMPublic(cesyscontext, ctpmHandle, coptionalsession1, coptionalsession2, coptionalsession3, cobject)
	runtime.KeepAlive(cobjectAllocMap)
	runtime.KeepAlive(coptionalsession3AllocMap)
	runtime.KeepAlive(coptionalsession2AllocMap)
	runtime.KeepAlive(coptionalsession1AllocMap)
	runtime.KeepAlive(ctpmHandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrClose function as declared in tss2/tss2_esys.h:135
func EsysTrClose(esysContext *EsysContext, rsrcHandle *EsysTr) Tss2Rc {
	cesysContext, cesysContextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esysContext)), cgoAllocsUnknown
	crsrcHandle, crsrcHandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(rsrcHandle)), cgoAllocsUnknown
	__ret := C.Esys_TR_Close(cesysContext, crsrcHandle)
	runtime.KeepAlive(crsrcHandleAllocMap)
	runtime.KeepAlive(cesysContextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrSetauth function as declared in tss2/tss2_esys.h:140
func EsysTrSetauth(esyscontext *EsysContext, handle EsysTr, authvalue *Tpm2bAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.ESYS_TR)(handle), cgoAllocsUnknown
	cauthvalue, cauthvalueAllocMap := authvalue.PassRef()
	__ret := C.Esys_TR_SetAuth(cesyscontext, chandle, cauthvalue)
	runtime.KeepAlive(cauthvalueAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrsessGetattributes function as declared in tss2/tss2_esys.h:152
func EsysTrsessGetattributes(esyscontext *EsysContext, session EsysTr, flags *TpmaSession) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csession, csessionAllocMap := (C.ESYS_TR)(session), cgoAllocsUnknown
	cflags, cflagsAllocMap := (*C.TPMA_SESSION)(unsafe.Pointer(flags)), cgoAllocsUnknown
	__ret := C.Esys_TRSess_GetAttributes(cesyscontext, csession, cflags)
	runtime.KeepAlive(cflagsAllocMap)
	runtime.KeepAlive(csessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTrsessSetattributes function as declared in tss2/tss2_esys.h:158
func EsysTrsessSetattributes(esyscontext *EsysContext, session EsysTr, flags TpmaSession, mask TpmaSession) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csession, csessionAllocMap := (C.ESYS_TR)(session), cgoAllocsUnknown
	cflags, cflagsAllocMap := (C.TPMA_SESSION)(flags), cgoAllocsUnknown
	cmask, cmaskAllocMap := (C.TPMA_SESSION)(mask), cgoAllocsUnknown
	__ret := C.Esys_TRSess_SetAttributes(cesyscontext, csession, cflags, cmask)
	runtime.KeepAlive(cmaskAllocMap)
	runtime.KeepAlive(cflagsAllocMap)
	runtime.KeepAlive(csessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartup function as declared in tss2/tss2_esys.h:173
func EsysStartup(esyscontext *EsysContext, startuptype Tpm2Su) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cstartuptype, cstartuptypeAllocMap := (C.TPM2_SU)(startuptype), cgoAllocsUnknown
	__ret := C.Esys_Startup(cesyscontext, cstartuptype)
	runtime.KeepAlive(cstartuptypeAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartupAsync function as declared in tss2/tss2_esys.h:178
func EsysStartupAsync(esyscontext *EsysContext, startuptype Tpm2Su) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cstartuptype, cstartuptypeAllocMap := (C.TPM2_SU)(startuptype), cgoAllocsUnknown
	__ret := C.Esys_Startup_Async(cesyscontext, cstartuptype)
	runtime.KeepAlive(cstartuptypeAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartupFinish function as declared in tss2/tss2_esys.h:183
func EsysStartupFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_Startup_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysShutdown function as declared in tss2/tss2_esys.h:189
func EsysShutdown(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, shutdowntype Tpm2Su) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cshutdowntype, cshutdowntypeAllocMap := (C.TPM2_SU)(shutdowntype), cgoAllocsUnknown
	__ret := C.Esys_Shutdown(cesyscontext, cshandle1, cshandle2, cshandle3, cshutdowntype)
	runtime.KeepAlive(cshutdowntypeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysShutdownAsync function as declared in tss2/tss2_esys.h:197
func EsysShutdownAsync(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, shutdowntype Tpm2Su) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cshutdowntype, cshutdowntypeAllocMap := (C.TPM2_SU)(shutdowntype), cgoAllocsUnknown
	__ret := C.Esys_Shutdown_Async(cesyscontext, cshandle1, cshandle2, cshandle3, cshutdowntype)
	runtime.KeepAlive(cshutdowntypeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysShutdownFinish function as declared in tss2/tss2_esys.h:205
func EsysShutdownFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_Shutdown_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSelftest function as declared in tss2/tss2_esys.h:211
func EsysSelftest(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, fulltest TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cfulltest, cfulltestAllocMap := (C.TPMI_YES_NO)(fulltest), cgoAllocsUnknown
	__ret := C.Esys_SelfTest(cesyscontext, cshandle1, cshandle2, cshandle3, cfulltest)
	runtime.KeepAlive(cfulltestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSelftestAsync function as declared in tss2/tss2_esys.h:219
func EsysSelftestAsync(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, fulltest TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cfulltest, cfulltestAllocMap := (C.TPMI_YES_NO)(fulltest), cgoAllocsUnknown
	__ret := C.Esys_SelfTest_Async(cesyscontext, cshandle1, cshandle2, cshandle3, cfulltest)
	runtime.KeepAlive(cfulltestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSelftestFinish function as declared in tss2/tss2_esys.h:227
func EsysSelftestFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_SelfTest_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartauthsession function as declared in tss2/tss2_esys.h:281
func EsysStartauthsession(esyscontext *EsysContext, tpmkey EsysTr, bind EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, noncecaller *Tpm2bNonce, sessiontype Tpm2Se, symmetric *TpmtSymDef, authhash TpmiAlgHash, sessionhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ctpmkey, ctpmkeyAllocMap := (C.ESYS_TR)(tpmkey), cgoAllocsUnknown
	cbind, cbindAllocMap := (C.ESYS_TR)(bind), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnoncecaller, cnoncecallerAllocMap := noncecaller.PassRef()
	csessiontype, csessiontypeAllocMap := (C.TPM2_SE)(sessiontype), cgoAllocsUnknown
	csymmetric, csymmetricAllocMap := symmetric.PassRef()
	cauthhash, cauthhashAllocMap := (C.TPMI_ALG_HASH)(authhash), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(sessionhandle)), cgoAllocsUnknown
	__ret := C.Esys_StartAuthSession(cesyscontext, ctpmkey, cbind, cshandle1, cshandle2, cshandle3, cnoncecaller, csessiontype, csymmetric, cauthhash, csessionhandle)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(cauthhashAllocMap)
	runtime.KeepAlive(csymmetricAllocMap)
	runtime.KeepAlive(csessiontypeAllocMap)
	runtime.KeepAlive(cnoncecallerAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cbindAllocMap)
	runtime.KeepAlive(ctpmkeyAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartauthsessionAsync function as declared in tss2/tss2_esys.h:295
func EsysStartauthsessionAsync(esyscontext *EsysContext, tpmkey EsysTr, bind EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, noncecaller *Tpm2bNonce, sessiontype Tpm2Se, symmetric *TpmtSymDef, authhash TpmiAlgHash) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ctpmkey, ctpmkeyAllocMap := (C.ESYS_TR)(tpmkey), cgoAllocsUnknown
	cbind, cbindAllocMap := (C.ESYS_TR)(bind), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnoncecaller, cnoncecallerAllocMap := noncecaller.PassRef()
	csessiontype, csessiontypeAllocMap := (C.TPM2_SE)(sessiontype), cgoAllocsUnknown
	csymmetric, csymmetricAllocMap := symmetric.PassRef()
	cauthhash, cauthhashAllocMap := (C.TPMI_ALG_HASH)(authhash), cgoAllocsUnknown
	__ret := C.Esys_StartAuthSession_Async(cesyscontext, ctpmkey, cbind, cshandle1, cshandle2, cshandle3, cnoncecaller, csessiontype, csymmetric, cauthhash)
	runtime.KeepAlive(cauthhashAllocMap)
	runtime.KeepAlive(csymmetricAllocMap)
	runtime.KeepAlive(csessiontypeAllocMap)
	runtime.KeepAlive(cnoncecallerAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cbindAllocMap)
	runtime.KeepAlive(ctpmkeyAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStartauthsessionFinish function as declared in tss2/tss2_esys.h:308
func EsysStartauthsessionFinish(esyscontext *EsysContext, sessionhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(sessionhandle)), cgoAllocsUnknown
	__ret := C.Esys_StartAuthSession_Finish(cesyscontext, csessionhandle)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyrestart function as declared in tss2/tss2_esys.h:315
func EsysPolicyrestart(esyscontext *EsysContext, sessionhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.ESYS_TR)(sessionhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyRestart(cesyscontext, csessionhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyrestartAsync function as declared in tss2/tss2_esys.h:323
func EsysPolicyrestartAsync(esyscontext *EsysContext, sessionhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.ESYS_TR)(sessionhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyRestart_Async(cesyscontext, csessionhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyrestartFinish function as declared in tss2/tss2_esys.h:331
func EsysPolicyrestartFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyRestart_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoad function as declared in tss2/tss2_esys.h:377
func EsysLoad(esyscontext *EsysContext, parenthandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, inprivate *Tpm2bPrivate, inpublic *Tpm2bPublic, objecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.ESYS_TR)(parenthandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	cobjecthandle, cobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	__ret := C.Esys_Load(cesyscontext, cparenthandle, cshandle1, cshandle2, cshandle3, cinprivate, cinpublic, cobjecthandle)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoadAsync function as declared in tss2/tss2_esys.h:388
func EsysLoadAsync(esyscontext *EsysContext, parenthandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, inprivate *Tpm2bPrivate, inpublic *Tpm2bPublic) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.ESYS_TR)(parenthandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	__ret := C.Esys_Load_Async(cesyscontext, cparenthandle, cshandle1, cshandle2, cshandle3, cinprivate, cinpublic)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoadFinish function as declared in tss2/tss2_esys.h:398
func EsysLoadFinish(esyscontext *EsysContext, objecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	__ret := C.Esys_Load_Finish(cesyscontext, cobjecthandle)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoadexternal function as declared in tss2/tss2_esys.h:405
func EsysLoadexternal(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, inprivate *Tpm2bSensitive, inpublic *Tpm2bPublic, hierarchy TpmiRhHierarchy, objecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	__ret := C.Esys_LoadExternal(cesyscontext, cshandle1, cshandle2, cshandle3, cinprivate, cinpublic, chierarchy, cobjecthandle)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoadexternalAsync function as declared in tss2/tss2_esys.h:416
func EsysLoadexternalAsync(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, inprivate *Tpm2bSensitive, inpublic *Tpm2bPublic, hierarchy TpmiRhHierarchy) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	__ret := C.Esys_LoadExternal_Async(cesyscontext, cshandle1, cshandle2, cshandle3, cinprivate, cinpublic, chierarchy)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysLoadexternalFinish function as declared in tss2/tss2_esys.h:426
func EsysLoadexternalFinish(esyscontext *EsysContext, objecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	__ret := C.Esys_LoadExternal_Finish(cesyscontext, cobjecthandle)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStirrandom function as declared in tss2/tss2_esys.h:1027
func EsysStirrandom(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, indata *Tpm2bSensitiveData) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cindata, cindataAllocMap := indata.PassRef()
	__ret := C.Esys_StirRandom(cesyscontext, cshandle1, cshandle2, cshandle3, cindata)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStirrandomAsync function as declared in tss2/tss2_esys.h:1035
func EsysStirrandomAsync(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, indata *Tpm2bSensitiveData) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cindata, cindataAllocMap := indata.PassRef()
	__ret := C.Esys_StirRandom_Async(cesyscontext, cshandle1, cshandle2, cshandle3, cindata)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysStirrandomFinish function as declared in tss2/tss2_esys.h:1043
func EsysStirrandomFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_StirRandom_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSequenceupdate function as declared in tss2/tss2_esys.h:1103
func EsysSequenceupdate(esyscontext *EsysContext, sequencehandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, buffer *Tpm2bMaxBuffer) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.ESYS_TR)(sequencehandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	__ret := C.Esys_SequenceUpdate(cesyscontext, csequencehandle, cshandle1, cshandle2, cshandle3, cbuffer)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSequenceupdateAsync function as declared in tss2/tss2_esys.h:1112
func EsysSequenceupdateAsync(esyscontext *EsysContext, sequencehandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, buffer *Tpm2bMaxBuffer) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.ESYS_TR)(sequencehandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	__ret := C.Esys_SequenceUpdate_Async(cesyscontext, csequencehandle, cshandle1, cshandle2, cshandle3, cbuffer)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSequenceupdateFinish function as declared in tss2/tss2_esys.h:1121
func EsysSequenceupdateFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_SequenceUpdate_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetcommandcodeauditstatus function as declared in tss2/tss2_esys.h:1503
func EsysSetcommandcodeauditstatus(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auditalg TpmiAlgHash, setlist *TpmlCc, clearlist []TpmlCc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauditalg, cauditalgAllocMap := (C.TPMI_ALG_HASH)(auditalg), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := unpackArgSTpmlCc(clearlist)
	__ret := C.Esys_SetCommandCodeAuditStatus(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cauditalg, csetlist, cclearlist)
	packSTpmlCc(clearlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cauditalgAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetcommandcodeauditstatusAsync function as declared in tss2/tss2_esys.h:1514
func EsysSetcommandcodeauditstatusAsync(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auditalg TpmiAlgHash, setlist *TpmlCc, clearlist *TpmlCc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauditalg, cauditalgAllocMap := (C.TPMI_ALG_HASH)(auditalg), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	__ret := C.Esys_SetCommandCodeAuditStatus_Async(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cauditalg, csetlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cauditalgAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetcommandcodeauditstatusFinish function as declared in tss2/tss2_esys.h:1525
func EsysSetcommandcodeauditstatusFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_SetCommandCodeAuditStatus_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrExtend function as declared in tss2/tss2_esys.h:1531
func EsysPcrExtend(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, digests []TpmlDigestValues) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdigests, cdigestsAllocMap := unpackArgSTpmlDigestValues(digests)
	__ret := C.Esys_PCR_Extend(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3, cdigests)
	packSTpmlDigestValues(digests, cdigests)
	runtime.KeepAlive(cdigestsAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrExtendAsync function as declared in tss2/tss2_esys.h:1540
func EsysPcrExtendAsync(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, digests []TpmlDigestValues) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdigests, cdigestsAllocMap := unpackArgSTpmlDigestValues(digests)
	__ret := C.Esys_PCR_Extend_Async(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3, cdigests)
	packSTpmlDigestValues(digests, cdigests)
	runtime.KeepAlive(cdigestsAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrExtendFinish function as declared in tss2/tss2_esys.h:1549
func EsysPcrExtendFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PCR_Extend_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrAllocate function as declared in tss2/tss2_esys.h:1609
func EsysPcrAllocate(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, pcrallocation *TpmlPcrSelection, allocationsuccess *TpmiYesNo, maxpcr *Uint32, sizeneeded *Uint32, sizeavailable *Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpcrallocation, cpcrallocationAllocMap := pcrallocation.PassRef()
	callocationsuccess, callocationsuccessAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(allocationsuccess)), cgoAllocsUnknown
	cmaxpcr, cmaxpcrAllocMap := (*C.UINT32)(unsafe.Pointer(maxpcr)), cgoAllocsUnknown
	csizeneeded, csizeneededAllocMap := (*C.UINT32)(unsafe.Pointer(sizeneeded)), cgoAllocsUnknown
	csizeavailable, csizeavailableAllocMap := (*C.UINT32)(unsafe.Pointer(sizeavailable)), cgoAllocsUnknown
	__ret := C.Esys_PCR_Allocate(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cpcrallocation, callocationsuccess, cmaxpcr, csizeneeded, csizeavailable)
	runtime.KeepAlive(csizeavailableAllocMap)
	runtime.KeepAlive(csizeneededAllocMap)
	runtime.KeepAlive(cmaxpcrAllocMap)
	runtime.KeepAlive(callocationsuccessAllocMap)
	runtime.KeepAlive(cpcrallocationAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrAllocateAsync function as declared in tss2/tss2_esys.h:1622
func EsysPcrAllocateAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, pcrallocation *TpmlPcrSelection) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpcrallocation, cpcrallocationAllocMap := pcrallocation.PassRef()
	__ret := C.Esys_PCR_Allocate_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cpcrallocation)
	runtime.KeepAlive(cpcrallocationAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrAllocateFinish function as declared in tss2/tss2_esys.h:1631
func EsysPcrAllocateFinish(esyscontext *EsysContext, allocationsuccess *TpmiYesNo, maxpcr *Uint32, sizeneeded *Uint32, sizeavailable *Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	callocationsuccess, callocationsuccessAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(allocationsuccess)), cgoAllocsUnknown
	cmaxpcr, cmaxpcrAllocMap := (*C.UINT32)(unsafe.Pointer(maxpcr)), cgoAllocsUnknown
	csizeneeded, csizeneededAllocMap := (*C.UINT32)(unsafe.Pointer(sizeneeded)), cgoAllocsUnknown
	csizeavailable, csizeavailableAllocMap := (*C.UINT32)(unsafe.Pointer(sizeavailable)), cgoAllocsUnknown
	__ret := C.Esys_PCR_Allocate_Finish(cesyscontext, callocationsuccess, cmaxpcr, csizeneeded, csizeavailable)
	runtime.KeepAlive(csizeavailableAllocMap)
	runtime.KeepAlive(csizeneededAllocMap)
	runtime.KeepAlive(cmaxpcrAllocMap)
	runtime.KeepAlive(callocationsuccessAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthpolicy function as declared in tss2/tss2_esys.h:1641
func EsysPcrSetauthpolicy(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash, pcrnum TpmiDhPcr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	cpcrnum, cpcrnumAllocMap := (C.TPMI_DH_PCR)(pcrnum), cgoAllocsUnknown
	__ret := C.Esys_PCR_SetAuthPolicy(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauthpolicy, chashalg, cpcrnum)
	runtime.KeepAlive(cpcrnumAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthpolicyAsync function as declared in tss2/tss2_esys.h:1652
func EsysPcrSetauthpolicyAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash, pcrnum TpmiDhPcr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	cpcrnum, cpcrnumAllocMap := (C.TPMI_DH_PCR)(pcrnum), cgoAllocsUnknown
	__ret := C.Esys_PCR_SetAuthPolicy_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauthpolicy, chashalg, cpcrnum)
	runtime.KeepAlive(cpcrnumAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthpolicyFinish function as declared in tss2/tss2_esys.h:1663
func EsysPcrSetauthpolicyFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PCR_SetAuthPolicy_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthvalue function as declared in tss2/tss2_esys.h:1669
func EsysPcrSetauthvalue(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auth *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	__ret := C.Esys_PCR_SetAuthValue(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3, cauth)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthvalueAsync function as declared in tss2/tss2_esys.h:1678
func EsysPcrSetauthvalueAsync(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auth *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	__ret := C.Esys_PCR_SetAuthValue_Async(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3, cauth)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrSetauthvalueFinish function as declared in tss2/tss2_esys.h:1687
func EsysPcrSetauthvalueFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PCR_SetAuthValue_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrReset function as declared in tss2/tss2_esys.h:1693
func EsysPcrReset(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PCR_Reset(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrResetAsync function as declared in tss2/tss2_esys.h:1701
func EsysPcrResetAsync(esyscontext *EsysContext, pcrhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.ESYS_TR)(pcrhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PCR_Reset_Async(cesyscontext, cpcrhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPcrResetFinish function as declared in tss2/tss2_esys.h:1709
func EsysPcrResetFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PCR_Reset_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyticket function as declared in tss2/tss2_esys.h:1789
func EsysPolicyticket(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, timeout *Tpm2bTimeout, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, authname *Tpm2bName, ticket *TpmtTkAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cauthname, cauthnameAllocMap := authname.PassRef()
	cticket, cticketAllocMap := ticket.PassRef()
	__ret := C.Esys_PolicyTicket(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ctimeout, ccphasha, cpolicyref, cauthname, cticket)
	runtime.KeepAlive(cticketAllocMap)
	runtime.KeepAlive(cauthnameAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyticketAsync function as declared in tss2/tss2_esys.h:1802
func EsysPolicyticketAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, timeout *Tpm2bTimeout, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, authname *Tpm2bName, ticket *TpmtTkAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cauthname, cauthnameAllocMap := authname.PassRef()
	cticket, cticketAllocMap := ticket.PassRef()
	__ret := C.Esys_PolicyTicket_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ctimeout, ccphasha, cpolicyref, cauthname, cticket)
	runtime.KeepAlive(cticketAllocMap)
	runtime.KeepAlive(cauthnameAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyticketFinish function as declared in tss2/tss2_esys.h:1815
func EsysPolicyticketFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyTicket_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyor function as declared in tss2/tss2_esys.h:1821
func EsysPolicyor(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, phashlist *TpmlDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cphashlist, cphashlistAllocMap := phashlist.PassRef()
	__ret := C.Esys_PolicyOR(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cphashlist)
	runtime.KeepAlive(cphashlistAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyorAsync function as declared in tss2/tss2_esys.h:1830
func EsysPolicyorAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, phashlist *TpmlDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cphashlist, cphashlistAllocMap := phashlist.PassRef()
	__ret := C.Esys_PolicyOR_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cphashlist)
	runtime.KeepAlive(cphashlistAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyorFinish function as declared in tss2/tss2_esys.h:1839
func EsysPolicyorFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyOR_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypcr function as declared in tss2/tss2_esys.h:1845
func EsysPolicypcr(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, pcrdigest *Tpm2bDigest, pcrs *TpmlPcrSelection) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpcrdigest, cpcrdigestAllocMap := pcrdigest.PassRef()
	cpcrs, cpcrsAllocMap := pcrs.PassRef()
	__ret := C.Esys_PolicyPCR(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cpcrdigest, cpcrs)
	runtime.KeepAlive(cpcrsAllocMap)
	runtime.KeepAlive(cpcrdigestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypcrAsync function as declared in tss2/tss2_esys.h:1855
func EsysPolicypcrAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, pcrdigest *Tpm2bDigest, pcrs *TpmlPcrSelection) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpcrdigest, cpcrdigestAllocMap := pcrdigest.PassRef()
	cpcrs, cpcrsAllocMap := pcrs.PassRef()
	__ret := C.Esys_PolicyPCR_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cpcrdigest, cpcrs)
	runtime.KeepAlive(cpcrsAllocMap)
	runtime.KeepAlive(cpcrdigestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypcrFinish function as declared in tss2/tss2_esys.h:1865
func EsysPolicypcrFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyPCR_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicylocality function as declared in tss2/tss2_esys.h:1871
func EsysPolicylocality(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, locality TpmaLocality) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	clocality, clocalityAllocMap := (C.TPMA_LOCALITY)(locality), cgoAllocsUnknown
	__ret := C.Esys_PolicyLocality(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, clocality)
	runtime.KeepAlive(clocalityAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicylocalityAsync function as declared in tss2/tss2_esys.h:1880
func EsysPolicylocalityAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, locality TpmaLocality) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	clocality, clocalityAllocMap := (C.TPMA_LOCALITY)(locality), cgoAllocsUnknown
	__ret := C.Esys_PolicyLocality_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, clocality)
	runtime.KeepAlive(clocalityAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicylocalityFinish function as declared in tss2/tss2_esys.h:1889
func EsysPolicylocalityFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyLocality_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynv function as declared in tss2/tss2_esys.h:1895
func EsysPolicynv(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Esys_PolicyNV(cesyscontext, cauthhandle, cnvindex, cpolicysession, cshandle1, cshandle2, cshandle3, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynvAsync function as declared in tss2/tss2_esys.h:1908
func EsysPolicynvAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Esys_PolicyNV_Async(cesyscontext, cauthhandle, cnvindex, cpolicysession, cshandle1, cshandle2, cshandle3, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynvFinish function as declared in tss2/tss2_esys.h:1921
func EsysPolicynvFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyNV_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycountertimer function as declared in tss2/tss2_esys.h:1927
func EsysPolicycountertimer(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Esys_PolicyCounterTimer(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycountertimerAsync function as declared in tss2/tss2_esys.h:1938
func EsysPolicycountertimerAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Esys_PolicyCounterTimer_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycountertimerFinish function as declared in tss2/tss2_esys.h:1949
func EsysPolicycountertimerFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyCounterTimer_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycommandcode function as declared in tss2/tss2_esys.h:1955
func EsysPolicycommandcode(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, code Tpm2Cc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ccode, ccodeAllocMap := (C.TPM2_CC)(code), cgoAllocsUnknown
	__ret := C.Esys_PolicyCommandCode(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ccode)
	runtime.KeepAlive(ccodeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycommandcodeAsync function as declared in tss2/tss2_esys.h:1964
func EsysPolicycommandcodeAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, code Tpm2Cc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ccode, ccodeAllocMap := (C.TPM2_CC)(code), cgoAllocsUnknown
	__ret := C.Esys_PolicyCommandCode_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ccode)
	runtime.KeepAlive(ccodeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycommandcodeFinish function as declared in tss2/tss2_esys.h:1973
func EsysPolicycommandcodeFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyCommandCode_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyphysicalpresence function as declared in tss2/tss2_esys.h:1979
func EsysPolicyphysicalpresence(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyPhysicalPresence(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyphysicalpresenceAsync function as declared in tss2/tss2_esys.h:1987
func EsysPolicyphysicalpresenceAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyPhysicalPresence_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyphysicalpresenceFinish function as declared in tss2/tss2_esys.h:1995
func EsysPolicyphysicalpresenceFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyPhysicalPresence_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycphash function as declared in tss2/tss2_esys.h:2001
func EsysPolicycphash(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, cphasha *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	__ret := C.Esys_PolicyCpHash(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ccphasha)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycphashAsync function as declared in tss2/tss2_esys.h:2010
func EsysPolicycphashAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, cphasha *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	__ret := C.Esys_PolicyCpHash_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ccphasha)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicycphashFinish function as declared in tss2/tss2_esys.h:2019
func EsysPolicycphashFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyCpHash_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynamehash function as declared in tss2/tss2_esys.h:2025
func EsysPolicynamehash(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, namehash *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnamehash, cnamehashAllocMap := namehash.PassRef()
	__ret := C.Esys_PolicyNameHash(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cnamehash)
	runtime.KeepAlive(cnamehashAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynamehashAsync function as declared in tss2/tss2_esys.h:2034
func EsysPolicynamehashAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, namehash *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnamehash, cnamehashAllocMap := namehash.PassRef()
	__ret := C.Esys_PolicyNameHash_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cnamehash)
	runtime.KeepAlive(cnamehashAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynamehashFinish function as declared in tss2/tss2_esys.h:2043
func EsysPolicynamehashFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyNameHash_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyduplicationselect function as declared in tss2/tss2_esys.h:2049
func EsysPolicyduplicationselect(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, objectname *Tpm2bName, newparentname *Tpm2bName, includeobject TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cnewparentname, cnewparentnameAllocMap := newparentname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	__ret := C.Esys_PolicyDuplicationSelect(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cobjectname, cnewparentname, cincludeobject)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cnewparentnameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyduplicationselectAsync function as declared in tss2/tss2_esys.h:2060
func EsysPolicyduplicationselectAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, objectname *Tpm2bName, newparentname *Tpm2bName, includeobject TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cnewparentname, cnewparentnameAllocMap := newparentname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	__ret := C.Esys_PolicyDuplicationSelect_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cobjectname, cnewparentname, cincludeobject)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cnewparentnameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyduplicationselectFinish function as declared in tss2/tss2_esys.h:2071
func EsysPolicyduplicationselectFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyDuplicationSelect_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorize function as declared in tss2/tss2_esys.h:2077
func EsysPolicyauthorize(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, approvedpolicy *Tpm2bDigest, policyref *Tpm2bNonce, keysign *Tpm2bName, checkticket *TpmtTkVerified) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	capprovedpolicy, capprovedpolicyAllocMap := approvedpolicy.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	ckeysign, ckeysignAllocMap := keysign.PassRef()
	ccheckticket, ccheckticketAllocMap := checkticket.PassRef()
	__ret := C.Esys_PolicyAuthorize(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, capprovedpolicy, cpolicyref, ckeysign, ccheckticket)
	runtime.KeepAlive(ccheckticketAllocMap)
	runtime.KeepAlive(ckeysignAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(capprovedpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorizeAsync function as declared in tss2/tss2_esys.h:2089
func EsysPolicyauthorizeAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, approvedpolicy *Tpm2bDigest, policyref *Tpm2bNonce, keysign *Tpm2bName, checkticket *TpmtTkVerified) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	capprovedpolicy, capprovedpolicyAllocMap := approvedpolicy.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	ckeysign, ckeysignAllocMap := keysign.PassRef()
	ccheckticket, ccheckticketAllocMap := checkticket.PassRef()
	__ret := C.Esys_PolicyAuthorize_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, capprovedpolicy, cpolicyref, ckeysign, ccheckticket)
	runtime.KeepAlive(ccheckticketAllocMap)
	runtime.KeepAlive(ckeysignAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(capprovedpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorizeFinish function as declared in tss2/tss2_esys.h:2101
func EsysPolicyauthorizeFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthorize_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthvalue function as declared in tss2/tss2_esys.h:2107
func EsysPolicyauthvalue(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthValue(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthvalueAsync function as declared in tss2/tss2_esys.h:2115
func EsysPolicyauthvalueAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthValue_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthvalueFinish function as declared in tss2/tss2_esys.h:2123
func EsysPolicyauthvalueFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthValue_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypassword function as declared in tss2/tss2_esys.h:2129
func EsysPolicypassword(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyPassword(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypasswordAsync function as declared in tss2/tss2_esys.h:2137
func EsysPolicypasswordAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyPassword_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicypasswordFinish function as declared in tss2/tss2_esys.h:2145
func EsysPolicypasswordFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyPassword_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynvwritten function as declared in tss2/tss2_esys.h:2175
func EsysPolicynvwritten(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, writtenset TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cwrittenset, cwrittensetAllocMap := (C.TPMI_YES_NO)(writtenset), cgoAllocsUnknown
	__ret := C.Esys_PolicyNvWritten(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cwrittenset)
	runtime.KeepAlive(cwrittensetAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynvwrittenAsync function as declared in tss2/tss2_esys.h:2184
func EsysPolicynvwrittenAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, writtenset TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cwrittenset, cwrittensetAllocMap := (C.TPMI_YES_NO)(writtenset), cgoAllocsUnknown
	__ret := C.Esys_PolicyNvWritten_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, cwrittenset)
	runtime.KeepAlive(cwrittensetAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicynvwrittenFinish function as declared in tss2/tss2_esys.h:2193
func EsysPolicynvwrittenFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyNvWritten_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicytemplate function as declared in tss2/tss2_esys.h:2199
func EsysPolicytemplate(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, templatehash *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ctemplatehash, ctemplatehashAllocMap := templatehash.PassRef()
	__ret := C.Esys_PolicyTemplate(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ctemplatehash)
	runtime.KeepAlive(ctemplatehashAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicytemplateAsync function as declared in tss2/tss2_esys.h:2208
func EsysPolicytemplateAsync(esyscontext *EsysContext, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, templatehash *Tpm2bDigest) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	ctemplatehash, ctemplatehashAllocMap := templatehash.PassRef()
	__ret := C.Esys_PolicyTemplate_Async(cesyscontext, cpolicysession, cshandle1, cshandle2, cshandle3, ctemplatehash)
	runtime.KeepAlive(ctemplatehashAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicytemplateFinish function as declared in tss2/tss2_esys.h:2217
func EsysPolicytemplateFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyTemplate_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorizenv function as declared in tss2/tss2_esys.h:2223
func EsysPolicyauthorizenv(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthorizeNV(cesyscontext, cauthhandle, cnvindex, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorizenvAsync function as declared in tss2/tss2_esys.h:2233
func EsysPolicyauthorizenvAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, policysession EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.ESYS_TR)(policysession), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthorizeNV_Async(cesyscontext, cauthhandle, cnvindex, cpolicysession, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPolicyauthorizenvFinish function as declared in tss2/tss2_esys.h:2243
func EsysPolicyauthorizenvFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PolicyAuthorizeNV_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchycontrol function as declared in tss2/tss2_esys.h:2289
func EsysHierarchycontrol(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, enable TpmiRhEnables, state TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cenable, cenableAllocMap := (C.TPMI_RH_ENABLES)(enable), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.TPMI_YES_NO)(state), cgoAllocsUnknown
	__ret := C.Esys_HierarchyControl(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cenable, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cenableAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchycontrolAsync function as declared in tss2/tss2_esys.h:2299
func EsysHierarchycontrolAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, enable TpmiRhEnables, state TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cenable, cenableAllocMap := (C.TPMI_RH_ENABLES)(enable), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.TPMI_YES_NO)(state), cgoAllocsUnknown
	__ret := C.Esys_HierarchyControl_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cenable, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cenableAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchycontrolFinish function as declared in tss2/tss2_esys.h:2309
func EsysHierarchycontrolFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_HierarchyControl_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetprimarypolicy function as declared in tss2/tss2_esys.h:2315
func EsysSetprimarypolicy(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Esys_SetPrimaryPolicy(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauthpolicy, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetprimarypolicyAsync function as declared in tss2/tss2_esys.h:2325
func EsysSetprimarypolicyAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Esys_SetPrimaryPolicy_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauthpolicy, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetprimarypolicyFinish function as declared in tss2/tss2_esys.h:2335
func EsysSetprimarypolicyFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_SetPrimaryPolicy_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangepps function as declared in tss2/tss2_esys.h:2341
func EsysChangepps(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_ChangePPS(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangeppsAsync function as declared in tss2/tss2_esys.h:2349
func EsysChangeppsAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_ChangePPS_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangeppsFinish function as declared in tss2/tss2_esys.h:2357
func EsysChangeppsFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_ChangePPS_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangeeps function as declared in tss2/tss2_esys.h:2363
func EsysChangeeps(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_ChangeEPS(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangeepsAsync function as declared in tss2/tss2_esys.h:2371
func EsysChangeepsAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_ChangeEPS_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysChangeepsFinish function as declared in tss2/tss2_esys.h:2379
func EsysChangeepsFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_ChangeEPS_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClear function as declared in tss2/tss2_esys.h:2385
func EsysClear(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_Clear(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClearAsync function as declared in tss2/tss2_esys.h:2393
func EsysClearAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_Clear_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClearFinish function as declared in tss2/tss2_esys.h:2401
func EsysClearFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_Clear_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClearcontrol function as declared in tss2/tss2_esys.h:2407
func EsysClearcontrol(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, disable TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdisable, cdisableAllocMap := (C.TPMI_YES_NO)(disable), cgoAllocsUnknown
	__ret := C.Esys_ClearControl(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cdisable)
	runtime.KeepAlive(cdisableAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClearcontrolAsync function as declared in tss2/tss2_esys.h:2416
func EsysClearcontrolAsync(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, disable TpmiYesNo) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdisable, cdisableAllocMap := (C.TPMI_YES_NO)(disable), cgoAllocsUnknown
	__ret := C.Esys_ClearControl_Async(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cdisable)
	runtime.KeepAlive(cdisableAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClearcontrolFinish function as declared in tss2/tss2_esys.h:2425
func EsysClearcontrolFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_ClearControl_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchychangeauth function as declared in tss2/tss2_esys.h:2431
func EsysHierarchychangeauth(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newauth *Tpm2bAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Esys_HierarchyChangeAuth(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchychangeauthAsync function as declared in tss2/tss2_esys.h:2440
func EsysHierarchychangeauthAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newauth *Tpm2bAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Esys_HierarchyChangeAuth_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysHierarchychangeauthFinish function as declared in tss2/tss2_esys.h:2449
func EsysHierarchychangeauthFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_HierarchyChangeAuth_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattacklockreset function as declared in tss2/tss2_esys.h:2455
func EsysDictionaryattacklockreset(esyscontext *EsysContext, lockhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.ESYS_TR)(lockhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackLockReset(cesyscontext, clockhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattacklockresetAsync function as declared in tss2/tss2_esys.h:2463
func EsysDictionaryattacklockresetAsync(esyscontext *EsysContext, lockhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.ESYS_TR)(lockhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackLockReset_Async(cesyscontext, clockhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattacklockresetFinish function as declared in tss2/tss2_esys.h:2471
func EsysDictionaryattacklockresetFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackLockReset_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattackparameters function as declared in tss2/tss2_esys.h:2477
func EsysDictionaryattackparameters(esyscontext *EsysContext, lockhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newmaxtries Uint32, newrecoverytime Uint32, lockoutrecovery Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.ESYS_TR)(lockhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewmaxtries, cnewmaxtriesAllocMap := (C.UINT32)(newmaxtries), cgoAllocsUnknown
	cnewrecoverytime, cnewrecoverytimeAllocMap := (C.UINT32)(newrecoverytime), cgoAllocsUnknown
	clockoutrecovery, clockoutrecoveryAllocMap := (C.UINT32)(lockoutrecovery), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackParameters(cesyscontext, clockhandle, cshandle1, cshandle2, cshandle3, cnewmaxtries, cnewrecoverytime, clockoutrecovery)
	runtime.KeepAlive(clockoutrecoveryAllocMap)
	runtime.KeepAlive(cnewrecoverytimeAllocMap)
	runtime.KeepAlive(cnewmaxtriesAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattackparametersAsync function as declared in tss2/tss2_esys.h:2488
func EsysDictionaryattackparametersAsync(esyscontext *EsysContext, lockhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newmaxtries Uint32, newrecoverytime Uint32, lockoutrecovery Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.ESYS_TR)(lockhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewmaxtries, cnewmaxtriesAllocMap := (C.UINT32)(newmaxtries), cgoAllocsUnknown
	cnewrecoverytime, cnewrecoverytimeAllocMap := (C.UINT32)(newrecoverytime), cgoAllocsUnknown
	clockoutrecovery, clockoutrecoveryAllocMap := (C.UINT32)(lockoutrecovery), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackParameters_Async(cesyscontext, clockhandle, cshandle1, cshandle2, cshandle3, cnewmaxtries, cnewrecoverytime, clockoutrecovery)
	runtime.KeepAlive(clockoutrecoveryAllocMap)
	runtime.KeepAlive(cnewrecoverytimeAllocMap)
	runtime.KeepAlive(cnewmaxtriesAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysDictionaryattackparametersFinish function as declared in tss2/tss2_esys.h:2499
func EsysDictionaryattackparametersFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_DictionaryAttackParameters_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPpCommands function as declared in tss2/tss2_esys.h:2505
func EsysPpCommands(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, setlist *TpmlCc, clearlist *TpmlCc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	__ret := C.Esys_PP_Commands(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, csetlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPpCommandsAsync function as declared in tss2/tss2_esys.h:2515
func EsysPpCommandsAsync(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, setlist *TpmlCc, clearlist *TpmlCc) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	__ret := C.Esys_PP_Commands_Async(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, csetlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysPpCommandsFinish function as declared in tss2/tss2_esys.h:2525
func EsysPpCommandsFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_PP_Commands_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetalgorithmset function as declared in tss2/tss2_esys.h:2531
func EsysSetalgorithmset(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, algorithmset Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	calgorithmset, calgorithmsetAllocMap := (C.UINT32)(algorithmset), cgoAllocsUnknown
	__ret := C.Esys_SetAlgorithmSet(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, calgorithmset)
	runtime.KeepAlive(calgorithmsetAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetalgorithmsetAsync function as declared in tss2/tss2_esys.h:2540
func EsysSetalgorithmsetAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, algorithmset Uint32) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	calgorithmset, calgorithmsetAllocMap := (C.UINT32)(algorithmset), cgoAllocsUnknown
	__ret := C.Esys_SetAlgorithmSet_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, calgorithmset)
	runtime.KeepAlive(calgorithmsetAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysSetalgorithmsetFinish function as declared in tss2/tss2_esys.h:2549
func EsysSetalgorithmsetFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_SetAlgorithmSet_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFieldupgradestart function as declared in tss2/tss2_esys.h:2555
func EsysFieldupgradestart(esyscontext *EsysContext, authorization EsysTr, keyhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, fudigest *Tpm2bDigest, manifestsignature *TpmtSignature) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthorization, cauthorizationAllocMap := (C.ESYS_TR)(authorization), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.ESYS_TR)(keyhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cfudigest, cfudigestAllocMap := fudigest.PassRef()
	cmanifestsignature, cmanifestsignatureAllocMap := manifestsignature.PassRef()
	__ret := C.Esys_FieldUpgradeStart(cesyscontext, cauthorization, ckeyhandle, cshandle1, cshandle2, cshandle3, cfudigest, cmanifestsignature)
	runtime.KeepAlive(cmanifestsignatureAllocMap)
	runtime.KeepAlive(cfudigestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cauthorizationAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFieldupgradestartAsync function as declared in tss2/tss2_esys.h:2566
func EsysFieldupgradestartAsync(esyscontext *EsysContext, authorization EsysTr, keyhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, fudigest *Tpm2bDigest, manifestsignature *TpmtSignature) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthorization, cauthorizationAllocMap := (C.ESYS_TR)(authorization), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.ESYS_TR)(keyhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cfudigest, cfudigestAllocMap := fudigest.PassRef()
	cmanifestsignature, cmanifestsignatureAllocMap := manifestsignature.PassRef()
	__ret := C.Esys_FieldUpgradeStart_Async(cesyscontext, cauthorization, ckeyhandle, cshandle1, cshandle2, cshandle3, cfudigest, cmanifestsignature)
	runtime.KeepAlive(cmanifestsignatureAllocMap)
	runtime.KeepAlive(cfudigestAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cauthorizationAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFieldupgradestartFinish function as declared in tss2/tss2_esys.h:2577
func EsysFieldupgradestartFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_FieldUpgradeStart_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysContextload function as declared in tss2/tss2_esys.h:2651
func EsysContextload(esyscontext *EsysContext, context *TpmsContext, loadedhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ccontext, ccontextAllocMap := context.PassRef()
	cloadedhandle, cloadedhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(loadedhandle)), cgoAllocsUnknown
	__ret := C.Esys_ContextLoad(cesyscontext, ccontext, cloadedhandle)
	runtime.KeepAlive(cloadedhandleAllocMap)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysContextloadAsync function as declared in tss2/tss2_esys.h:2657
func EsysContextloadAsync(esyscontext *EsysContext, context *TpmsContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	ccontext, ccontextAllocMap := context.PassRef()
	__ret := C.Esys_ContextLoad_Async(cesyscontext, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysContextloadFinish function as declared in tss2/tss2_esys.h:2662
func EsysContextloadFinish(esyscontext *EsysContext, loadedhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cloadedhandle, cloadedhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(loadedhandle)), cgoAllocsUnknown
	__ret := C.Esys_ContextLoad_Finish(cesyscontext, cloadedhandle)
	runtime.KeepAlive(cloadedhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFlushcontext function as declared in tss2/tss2_esys.h:2669
func EsysFlushcontext(esyscontext *EsysContext, flushhandle EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cflushhandle, cflushhandleAllocMap := (C.ESYS_TR)(flushhandle), cgoAllocsUnknown
	__ret := C.Esys_FlushContext(cesyscontext, cflushhandle)
	runtime.KeepAlive(cflushhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFlushcontextAsync function as declared in tss2/tss2_esys.h:2674
func EsysFlushcontextAsync(esyscontext *EsysContext, flushhandle EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cflushhandle, cflushhandleAllocMap := (C.ESYS_TR)(flushhandle), cgoAllocsUnknown
	__ret := C.Esys_FlushContext_Async(cesyscontext, cflushhandle)
	runtime.KeepAlive(cflushhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFlushcontextFinish function as declared in tss2/tss2_esys.h:2679
func EsysFlushcontextFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_FlushContext_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysEvictcontrol function as declared in tss2/tss2_esys.h:2685
func EsysEvictcontrol(esyscontext *EsysContext, auth EsysTr, objecthandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, persistenthandle TpmiDhPersistent, newobjecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.ESYS_TR)(objecthandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpersistenthandle, cpersistenthandleAllocMap := (C.TPMI_DH_PERSISTENT)(persistenthandle), cgoAllocsUnknown
	cnewobjecthandle, cnewobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(newobjecthandle)), cgoAllocsUnknown
	__ret := C.Esys_EvictControl(cesyscontext, cauth, cobjecthandle, cshandle1, cshandle2, cshandle3, cpersistenthandle, cnewobjecthandle)
	runtime.KeepAlive(cnewobjecthandleAllocMap)
	runtime.KeepAlive(cpersistenthandleAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysEvictcontrolAsync function as declared in tss2/tss2_esys.h:2696
func EsysEvictcontrolAsync(esyscontext *EsysContext, auth EsysTr, objecthandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, persistenthandle TpmiDhPersistent) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.ESYS_TR)(objecthandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cpersistenthandle, cpersistenthandleAllocMap := (C.TPMI_DH_PERSISTENT)(persistenthandle), cgoAllocsUnknown
	__ret := C.Esys_EvictControl_Async(cesyscontext, cauth, cobjecthandle, cshandle1, cshandle2, cshandle3, cpersistenthandle)
	runtime.KeepAlive(cpersistenthandleAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysEvictcontrolFinish function as declared in tss2/tss2_esys.h:2706
func EsysEvictcontrolFinish(esyscontext *EsysContext, newobjecthandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnewobjecthandle, cnewobjecthandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(newobjecthandle)), cgoAllocsUnknown
	__ret := C.Esys_EvictControl_Finish(cesyscontext, cnewobjecthandle)
	runtime.KeepAlive(cnewobjecthandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClockset function as declared in tss2/tss2_esys.h:2735
func EsysClockset(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newtime Uint64) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewtime, cnewtimeAllocMap := (C.UINT64)(newtime), cgoAllocsUnknown
	__ret := C.Esys_ClockSet(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cnewtime)
	runtime.KeepAlive(cnewtimeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClocksetAsync function as declared in tss2/tss2_esys.h:2744
func EsysClocksetAsync(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newtime Uint64) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewtime, cnewtimeAllocMap := (C.UINT64)(newtime), cgoAllocsUnknown
	__ret := C.Esys_ClockSet_Async(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, cnewtime)
	runtime.KeepAlive(cnewtimeAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClocksetFinish function as declared in tss2/tss2_esys.h:2753
func EsysClocksetFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_ClockSet_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClockrateadjust function as declared in tss2/tss2_esys.h:2759
func EsysClockrateadjust(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, rateadjust Tpm2ClockAdjust) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	crateadjust, crateadjustAllocMap := (C.TPM2_CLOCK_ADJUST)(rateadjust), cgoAllocsUnknown
	__ret := C.Esys_ClockRateAdjust(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, crateadjust)
	runtime.KeepAlive(crateadjustAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClockrateadjustAsync function as declared in tss2/tss2_esys.h:2768
func EsysClockrateadjustAsync(esyscontext *EsysContext, auth EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, rateadjust Tpm2ClockAdjust) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.ESYS_TR)(auth), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	crateadjust, crateadjustAllocMap := (C.TPM2_CLOCK_ADJUST)(rateadjust), cgoAllocsUnknown
	__ret := C.Esys_ClockRateAdjust_Async(cesyscontext, cauth, cshandle1, cshandle2, cshandle3, crateadjust)
	runtime.KeepAlive(crateadjustAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysClockrateadjustFinish function as declared in tss2/tss2_esys.h:2777
func EsysClockrateadjustFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_ClockRateAdjust_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTestparms function as declared in tss2/tss2_esys.h:2813
func EsysTestparms(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, parameters *TpmtPublicParms) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cparameters, cparametersAllocMap := parameters.PassRef()
	__ret := C.Esys_TestParms(cesyscontext, cshandle1, cshandle2, cshandle3, cparameters)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTestparmsAsync function as declared in tss2/tss2_esys.h:2821
func EsysTestparmsAsync(esyscontext *EsysContext, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, parameters *TpmtPublicParms) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cparameters, cparametersAllocMap := parameters.PassRef()
	__ret := C.Esys_TestParms_Async(cesyscontext, cshandle1, cshandle2, cshandle3, cparameters)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysTestparmsFinish function as declared in tss2/tss2_esys.h:2829
func EsysTestparmsFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_TestParms_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvDefinespace function as declared in tss2/tss2_esys.h:2835
func EsysNvDefinespace(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auth *Tpm2bAuth, publicinfo *Tpm2bNvPublic, nvhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	cpublicinfo, cpublicinfoAllocMap := publicinfo.PassRef()
	cnvhandle, cnvhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(nvhandle)), cgoAllocsUnknown
	__ret := C.Esys_NV_DefineSpace(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauth, cpublicinfo, cnvhandle)
	runtime.KeepAlive(cnvhandleAllocMap)
	runtime.KeepAlive(cpublicinfoAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvDefinespaceAsync function as declared in tss2/tss2_esys.h:2846
func EsysNvDefinespaceAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, auth *Tpm2bAuth, publicinfo *Tpm2bNvPublic) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	cpublicinfo, cpublicinfoAllocMap := publicinfo.PassRef()
	__ret := C.Esys_NV_DefineSpace_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3, cauth, cpublicinfo)
	runtime.KeepAlive(cpublicinfoAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvDefinespaceFinish function as declared in tss2/tss2_esys.h:2856
func EsysNvDefinespaceFinish(esyscontext *EsysContext, nvhandle *EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnvhandle, cnvhandleAllocMap := (*C.ESYS_TR)(unsafe.Pointer(nvhandle)), cgoAllocsUnknown
	__ret := C.Esys_NV_DefineSpace_Finish(cesyscontext, cnvhandle)
	runtime.KeepAlive(cnvhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespace function as declared in tss2/tss2_esys.h:2863
func EsysNvUndefinespace(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpace(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespaceAsync function as declared in tss2/tss2_esys.h:2872
func EsysNvUndefinespaceAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpace_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespaceFinish function as declared in tss2/tss2_esys.h:2881
func EsysNvUndefinespaceFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpace_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespacespecial function as declared in tss2/tss2_esys.h:2887
func EsysNvUndefinespacespecial(esyscontext *EsysContext, nvindex EsysTr, platform EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cplatform, cplatformAllocMap := (C.ESYS_TR)(platform), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpaceSpecial(cesyscontext, cnvindex, cplatform, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cplatformAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespacespecialAsync function as declared in tss2/tss2_esys.h:2896
func EsysNvUndefinespacespecialAsync(esyscontext *EsysContext, nvindex EsysTr, platform EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cplatform, cplatformAllocMap := (C.ESYS_TR)(platform), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpaceSpecial_Async(cesyscontext, cnvindex, cplatform, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cplatformAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvUndefinespacespecialFinish function as declared in tss2/tss2_esys.h:2905
func EsysNvUndefinespacespecialFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_UndefineSpaceSpecial_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWrite function as declared in tss2/tss2_esys.h:2937
func EsysNvWrite(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, data *Tpm2bMaxNvBuffer, offset Uint16) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdata, cdataAllocMap := data.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	__ret := C.Esys_NV_Write(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cdata, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWriteAsync function as declared in tss2/tss2_esys.h:2948
func EsysNvWriteAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, data *Tpm2bMaxNvBuffer, offset Uint16) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdata, cdataAllocMap := data.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	__ret := C.Esys_NV_Write_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cdata, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWriteFinish function as declared in tss2/tss2_esys.h:2959
func EsysNvWriteFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_Write_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvIncrement function as declared in tss2/tss2_esys.h:2965
func EsysNvIncrement(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_Increment(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvIncrementAsync function as declared in tss2/tss2_esys.h:2974
func EsysNvIncrementAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_Increment_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvIncrementFinish function as declared in tss2/tss2_esys.h:2983
func EsysNvIncrementFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_Increment_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvExtend function as declared in tss2/tss2_esys.h:2989
func EsysNvExtend(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, data []Tpm2bMaxNvBuffer) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdata, cdataAllocMap := unpackArgSTpm2bMaxNvBuffer(data)
	__ret := C.Esys_NV_Extend(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cdata)
	packSTpm2bMaxNvBuffer(data, cdata)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvExtendAsync function as declared in tss2/tss2_esys.h:2999
func EsysNvExtendAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, data []Tpm2bMaxNvBuffer) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cdata, cdataAllocMap := unpackArgSTpm2bMaxNvBuffer(data)
	__ret := C.Esys_NV_Extend_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cdata)
	packSTpm2bMaxNvBuffer(data, cdata)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvExtendFinish function as declared in tss2/tss2_esys.h:3009
func EsysNvExtendFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_Extend_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvSetbits function as declared in tss2/tss2_esys.h:3015
func EsysNvSetbits(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, bits Uint64) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cbits, cbitsAllocMap := (C.UINT64)(bits), cgoAllocsUnknown
	__ret := C.Esys_NV_SetBits(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cbits)
	runtime.KeepAlive(cbitsAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvSetbitsAsync function as declared in tss2/tss2_esys.h:3025
func EsysNvSetbitsAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, bits Uint64) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cbits, cbitsAllocMap := (C.UINT64)(bits), cgoAllocsUnknown
	__ret := C.Esys_NV_SetBits_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3, cbits)
	runtime.KeepAlive(cbitsAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvSetbitsFinish function as declared in tss2/tss2_esys.h:3035
func EsysNvSetbitsFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_SetBits_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWritelock function as declared in tss2/tss2_esys.h:3041
func EsysNvWritelock(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_WriteLock(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWritelockAsync function as declared in tss2/tss2_esys.h:3050
func EsysNvWritelockAsync(esyscontext *EsysContext, authhandle EsysTr, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_WriteLock_Async(cesyscontext, cauthhandle, cnvindex, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvWritelockFinish function as declared in tss2/tss2_esys.h:3059
func EsysNvWritelockFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_WriteLock_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvGlobalwritelock function as declared in tss2/tss2_esys.h:3065
func EsysNvGlobalwritelock(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_GlobalWriteLock(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvGlobalwritelockAsync function as declared in tss2/tss2_esys.h:3073
func EsysNvGlobalwritelockAsync(esyscontext *EsysContext, authhandle EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.ESYS_TR)(authhandle), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	__ret := C.Esys_NV_GlobalWriteLock_Async(cesyscontext, cauthhandle, cshandle1, cshandle2, cshandle3)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvGlobalwritelockFinish function as declared in tss2/tss2_esys.h:3081
func EsysNvGlobalwritelockFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_GlobalWriteLock_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvChangeauth function as declared in tss2/tss2_esys.h:3141
func EsysNvChangeauth(esyscontext *EsysContext, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newauth *Tpm2bAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Esys_NV_ChangeAuth(cesyscontext, cnvindex, cshandle1, cshandle2, cshandle3, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvChangeauthAsync function as declared in tss2/tss2_esys.h:3150
func EsysNvChangeauthAsync(esyscontext *EsysContext, nvindex EsysTr, shandle1 EsysTr, shandle2 EsysTr, shandle3 EsysTr, newauth *Tpm2bAuth) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.ESYS_TR)(nvindex), cgoAllocsUnknown
	cshandle1, cshandle1AllocMap := (C.ESYS_TR)(shandle1), cgoAllocsUnknown
	cshandle2, cshandle2AllocMap := (C.ESYS_TR)(shandle2), cgoAllocsUnknown
	cshandle3, cshandle3AllocMap := (C.ESYS_TR)(shandle3), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Esys_NV_ChangeAuth_Async(cesyscontext, cnvindex, cshandle1, cshandle2, cshandle3, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cshandle3AllocMap)
	runtime.KeepAlive(cshandle2AllocMap)
	runtime.KeepAlive(cshandle1AllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysNvChangeauthFinish function as declared in tss2/tss2_esys.h:3159
func EsysNvChangeauthFinish(esyscontext *EsysContext) Tss2Rc {
	cesyscontext, cesyscontextAllocMap := (*C.ESYS_CONTEXT)(unsafe.Pointer(esyscontext)), cgoAllocsUnknown
	__ret := C.Esys_NV_ChangeAuth_Finish(cesyscontext)
	runtime.KeepAlive(cesyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// EsysFree function as declared in tss2/tss2_esys.h:3228
func EsysFree(_Ptr unsafe.Pointer) {
	c_Ptr, c_PtrAllocMap := _Ptr, cgoAllocsUnknown
	C.Esys_Free(c_Ptr)
	runtime.KeepAlive(c_PtrAllocMap)
}

// Tss2SysGetcontextsize function as declared in tss2/tss2_sys.h:41
func Tss2SysGetcontextsize(maxcommandresponsesize SizeT) SizeT {
	cmaxcommandresponsesize, cmaxcommandresponsesizeAllocMap := (C.size_t)(maxcommandresponsesize), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetContextSize(cmaxcommandresponsesize)
	runtime.KeepAlive(cmaxcommandresponsesizeAllocMap)
	__v := (SizeT)(__ret)
	return __v
}

// Tss2SysInitialize function as declared in tss2/tss2_sys.h:44
func Tss2SysInitialize(syscontext *Tss2SysContext, contextsize SizeT, tcticontext *Tss2TctiContext, abiversion *Tss2AbiVersion) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccontextsize, ccontextsizeAllocMap := (C.size_t)(contextsize), cgoAllocsUnknown
	ctcticontext, ctcticontextAllocMap := (*C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcticontext)), cgoAllocsUnknown
	cabiversion, cabiversionAllocMap := abiversion.PassRef()
	__ret := C.Tss2_Sys_Initialize(csyscontext, ccontextsize, ctcticontext, cabiversion)
	runtime.KeepAlive(cabiversionAllocMap)
	runtime.KeepAlive(ctcticontextAllocMap)
	runtime.KeepAlive(ccontextsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFinalize function as declared in tss2/tss2_sys.h:50
func Tss2SysFinalize(syscontext *Tss2SysContext) {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	C.Tss2_Sys_Finalize(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
}

// Tss2SysGettcticontext function as declared in tss2/tss2_sys.h:53
func Tss2SysGettcticontext(syscontext *Tss2SysContext, tcticontext **Tss2TctiContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctcticontext, ctcticontextAllocMap := (**C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcticontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetTctiContext(csyscontext, ctcticontext)
	runtime.KeepAlive(ctcticontextAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetdecryptparam function as declared in tss2/tss2_sys.h:58
func Tss2SysGetdecryptparam(syscontext *Tss2SysContext, decryptparamsize *SizeT, decryptparambuffer **Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cdecryptparamsize, cdecryptparamsizeAllocMap := (*C.size_t)(unsafe.Pointer(decryptparamsize)), cgoAllocsUnknown
	cdecryptparambuffer, cdecryptparambufferAllocMap := (**C.uint8_t)(unsafe.Pointer(decryptparambuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetDecryptParam(csyscontext, cdecryptparamsize, cdecryptparambuffer)
	runtime.KeepAlive(cdecryptparambufferAllocMap)
	runtime.KeepAlive(cdecryptparamsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetdecryptparam function as declared in tss2/tss2_sys.h:63
func Tss2SysSetdecryptparam(syscontext *Tss2SysContext, decryptparamsize SizeT, decryptparambuffer *Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cdecryptparamsize, cdecryptparamsizeAllocMap := (C.size_t)(decryptparamsize), cgoAllocsUnknown
	cdecryptparambuffer, cdecryptparambufferAllocMap := (*C.uint8_t)(unsafe.Pointer(decryptparambuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetDecryptParam(csyscontext, cdecryptparamsize, cdecryptparambuffer)
	runtime.KeepAlive(cdecryptparambufferAllocMap)
	runtime.KeepAlive(cdecryptparamsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcpbuffer function as declared in tss2/tss2_sys.h:68
func Tss2SysGetcpbuffer(syscontext *Tss2SysContext, cpbufferusedsize *SizeT, cpbuffer **Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccpbufferusedsize, ccpbufferusedsizeAllocMap := (*C.size_t)(unsafe.Pointer(cpbufferusedsize)), cgoAllocsUnknown
	ccpbuffer, ccpbufferAllocMap := (**C.uint8_t)(unsafe.Pointer(cpbuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetCpBuffer(csyscontext, ccpbufferusedsize, ccpbuffer)
	runtime.KeepAlive(ccpbufferAllocMap)
	runtime.KeepAlive(ccpbufferusedsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetcmdauths function as declared in tss2/tss2_sys.h:73
func Tss2SysSetcmdauths(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	__ret := C.Tss2_Sys_SetCmdAuths(csyscontext, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysExecuteasync function as declared in tss2/tss2_sys.h:78
func Tss2SysExecuteasync(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ExecuteAsync(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysExecutefinish function as declared in tss2/tss2_sys.h:81
func Tss2SysExecutefinish(syscontext *Tss2SysContext, timeout Int32T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := (C.int32_t)(timeout), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ExecuteFinish(csyscontext, ctimeout)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysExecute function as declared in tss2/tss2_sys.h:85
func Tss2SysExecute(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Execute(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcommandcode function as declared in tss2/tss2_sys.h:89
func Tss2SysGetcommandcode(syscontext *Tss2SysContext, commandcode *Uint8) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccommandcode, ccommandcodeAllocMap := (*C.UINT8)(unsafe.Pointer(commandcode)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetCommandCode(csyscontext, ccommandcode)
	runtime.KeepAlive(ccommandcodeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetrspauths function as declared in tss2/tss2_sys.h:93
func Tss2SysGetrspauths(syscontext *Tss2SysContext, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetRspAuths(csyscontext, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetencryptparam function as declared in tss2/tss2_sys.h:97
func Tss2SysGetencryptparam(syscontext *Tss2SysContext, encryptparamsize *SizeT, encryptparambuffer **Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cencryptparamsize, cencryptparamsizeAllocMap := (*C.size_t)(unsafe.Pointer(encryptparamsize)), cgoAllocsUnknown
	cencryptparambuffer, cencryptparambufferAllocMap := (**C.uint8_t)(unsafe.Pointer(encryptparambuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetEncryptParam(csyscontext, cencryptparamsize, cencryptparambuffer)
	runtime.KeepAlive(cencryptparambufferAllocMap)
	runtime.KeepAlive(cencryptparamsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetencryptparam function as declared in tss2/tss2_sys.h:102
func Tss2SysSetencryptparam(syscontext *Tss2SysContext, encryptparamsize SizeT, encryptparambuffer *Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cencryptparamsize, cencryptparamsizeAllocMap := (C.size_t)(encryptparamsize), cgoAllocsUnknown
	cencryptparambuffer, cencryptparambufferAllocMap := (*C.uint8_t)(unsafe.Pointer(encryptparambuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetEncryptParam(csyscontext, cencryptparamsize, cencryptparambuffer)
	runtime.KeepAlive(cencryptparambufferAllocMap)
	runtime.KeepAlive(cencryptparamsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetrpbuffer function as declared in tss2/tss2_sys.h:107
func Tss2SysGetrpbuffer(syscontext *Tss2SysContext, rpbufferusedsize *SizeT, rpbuffer **Uint8T) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	crpbufferusedsize, crpbufferusedsizeAllocMap := (*C.size_t)(unsafe.Pointer(rpbufferusedsize)), cgoAllocsUnknown
	crpbuffer, crpbufferAllocMap := (**C.uint8_t)(unsafe.Pointer(rpbuffer)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetRpBuffer(csyscontext, crpbufferusedsize, crpbuffer)
	runtime.KeepAlive(crpbufferAllocMap)
	runtime.KeepAlive(crpbufferusedsizeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartupPrepare function as declared in tss2/tss2_sys.h:112
func Tss2SysStartupPrepare(syscontext *Tss2SysContext, startuptype Tpm2Su) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cstartuptype, cstartuptypeAllocMap := (C.TPM2_SU)(startuptype), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Startup_Prepare(csyscontext, cstartuptype)
	runtime.KeepAlive(cstartuptypeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartupComplete function as declared in tss2/tss2_sys.h:116
func Tss2SysStartupComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Startup_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartup function as declared in tss2/tss2_sys.h:119
func Tss2SysStartup(syscontext *Tss2SysContext, startuptype Tpm2Su) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cstartuptype, cstartuptypeAllocMap := (C.TPM2_SU)(startuptype), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Startup(csyscontext, cstartuptype)
	runtime.KeepAlive(cstartuptypeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysShutdownPrepare function as declared in tss2/tss2_sys.h:123
func Tss2SysShutdownPrepare(syscontext *Tss2SysContext, shutdowntype Tpm2Su) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cshutdowntype, cshutdowntypeAllocMap := (C.TPM2_SU)(shutdowntype), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Shutdown_Prepare(csyscontext, cshutdowntype)
	runtime.KeepAlive(cshutdowntypeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysShutdownComplete function as declared in tss2/tss2_sys.h:127
func Tss2SysShutdownComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Shutdown_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysShutdown function as declared in tss2/tss2_sys.h:130
func Tss2SysShutdown(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, shutdowntype Tpm2Su, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cshutdowntype, cshutdowntypeAllocMap := (C.TPM2_SU)(shutdowntype), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Shutdown(csyscontext, ccmdauthsarray, cshutdowntype, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cshutdowntypeAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSelftestPrepare function as declared in tss2/tss2_sys.h:136
func Tss2SysSelftestPrepare(syscontext *Tss2SysContext, fulltest TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cfulltest, cfulltestAllocMap := (C.TPMI_YES_NO)(fulltest), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SelfTest_Prepare(csyscontext, cfulltest)
	runtime.KeepAlive(cfulltestAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSelftestComplete function as declared in tss2/tss2_sys.h:140
func Tss2SysSelftestComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SelfTest_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSelftest function as declared in tss2/tss2_sys.h:143
func Tss2SysSelftest(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, fulltest TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cfulltest, cfulltestAllocMap := (C.TPMI_YES_NO)(fulltest), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SelfTest(csyscontext, ccmdauthsarray, cfulltest, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cfulltestAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysIncrementalselftestPrepare function as declared in tss2/tss2_sys.h:149
func Tss2SysIncrementalselftestPrepare(syscontext *Tss2SysContext, totest *TpmlAlg) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctotest, ctotestAllocMap := (*C.TPML_ALG)(unsafe.Pointer(totest)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_IncrementalSelfTest_Prepare(csyscontext, ctotest)
	runtime.KeepAlive(ctotestAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysIncrementalselftestComplete function as declared in tss2/tss2_sys.h:153
func Tss2SysIncrementalselftestComplete(syscontext *Tss2SysContext, todolist *TpmlAlg) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctodolist, ctodolistAllocMap := (*C.TPML_ALG)(unsafe.Pointer(todolist)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_IncrementalSelfTest_Complete(csyscontext, ctodolist)
	runtime.KeepAlive(ctodolistAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysIncrementalselftest function as declared in tss2/tss2_sys.h:157
func Tss2SysIncrementalselftest(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, totest *TpmlAlg, todolist *TpmlAlg, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ctotest, ctotestAllocMap := (*C.TPML_ALG)(unsafe.Pointer(totest)), cgoAllocsUnknown
	ctodolist, ctodolistAllocMap := (*C.TPML_ALG)(unsafe.Pointer(todolist)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_IncrementalSelfTest(csyscontext, ccmdauthsarray, ctotest, ctodolist, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ctodolistAllocMap)
	runtime.KeepAlive(ctotestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettestresultPrepare function as declared in tss2/tss2_sys.h:164
func Tss2SysGettestresultPrepare(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetTestResult_Prepare(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettestresultComplete function as declared in tss2/tss2_sys.h:167
func Tss2SysGettestresultComplete(syscontext *Tss2SysContext, outdata *Tpm2bMaxBuffer, testresult *Tpm2Rc) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutdata, coutdataAllocMap := outdata.PassRef()
	ctestresult, ctestresultAllocMap := (*C.TPM2_RC)(unsafe.Pointer(testresult)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetTestResult_Complete(csyscontext, coutdata, ctestresult)
	runtime.KeepAlive(ctestresultAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettestresult function as declared in tss2/tss2_sys.h:172
func Tss2SysGettestresult(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, outdata *Tpm2bMaxBuffer, testresult *Tpm2Rc, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	coutdata, coutdataAllocMap := outdata.PassRef()
	ctestresult, ctestresultAllocMap := (*C.TPM2_RC)(unsafe.Pointer(testresult)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetTestResult(csyscontext, ccmdauthsarray, coutdata, ctestresult, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ctestresultAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartauthsessionPrepare function as declared in tss2/tss2_sys.h:179
func Tss2SysStartauthsessionPrepare(syscontext *Tss2SysContext, tpmkey TpmiDhObject, bind TpmiDhEntity, noncecaller *Tpm2bNonce, encryptedsalt *Tpm2bEncryptedSecret, sessiontype Tpm2Se, symmetric *TpmtSymDef, authhash TpmiAlgHash) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctpmkey, ctpmkeyAllocMap := (C.TPMI_DH_OBJECT)(tpmkey), cgoAllocsUnknown
	cbind, cbindAllocMap := (C.TPMI_DH_ENTITY)(bind), cgoAllocsUnknown
	cnoncecaller, cnoncecallerAllocMap := noncecaller.PassRef()
	cencryptedsalt, cencryptedsaltAllocMap := encryptedsalt.PassRef()
	csessiontype, csessiontypeAllocMap := (C.TPM2_SE)(sessiontype), cgoAllocsUnknown
	csymmetric, csymmetricAllocMap := symmetric.PassRef()
	cauthhash, cauthhashAllocMap := (C.TPMI_ALG_HASH)(authhash), cgoAllocsUnknown
	__ret := C.Tss2_Sys_StartAuthSession_Prepare(csyscontext, ctpmkey, cbind, cnoncecaller, cencryptedsalt, csessiontype, csymmetric, cauthhash)
	runtime.KeepAlive(cauthhashAllocMap)
	runtime.KeepAlive(csymmetricAllocMap)
	runtime.KeepAlive(csessiontypeAllocMap)
	runtime.KeepAlive(cencryptedsaltAllocMap)
	runtime.KeepAlive(cnoncecallerAllocMap)
	runtime.KeepAlive(cbindAllocMap)
	runtime.KeepAlive(ctpmkeyAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartauthsessionComplete function as declared in tss2/tss2_sys.h:189
func Tss2SysStartauthsessionComplete(syscontext *Tss2SysContext, sessionhandle []TpmiShAuthSession, noncetpm *Tpm2bNonce) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := copyPTpmiShAuthSessionBytes((*sliceHeader)(unsafe.Pointer(&sessionhandle)))
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	__ret := C.Tss2_Sys_StartAuthSession_Complete(csyscontext, csessionhandle, cnoncetpm)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStartauthsession function as declared in tss2/tss2_sys.h:194
func Tss2SysStartauthsession(syscontext *Tss2SysContext, tpmkey TpmiDhObject, bind TpmiDhEntity, cmdauthsarray *Tss2lSysAuthCommand, noncecaller *Tpm2bNonce, encryptedsalt *Tpm2bEncryptedSecret, sessiontype Tpm2Se, symmetric *TpmtSymDef, authhash TpmiAlgHash, sessionhandle *TpmiShAuthSession, noncetpm *Tpm2bNonce, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctpmkey, ctpmkeyAllocMap := (C.TPMI_DH_OBJECT)(tpmkey), cgoAllocsUnknown
	cbind, cbindAllocMap := (C.TPMI_DH_ENTITY)(bind), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnoncecaller, cnoncecallerAllocMap := noncecaller.PassRef()
	cencryptedsalt, cencryptedsaltAllocMap := encryptedsalt.PassRef()
	csessiontype, csessiontypeAllocMap := (C.TPM2_SE)(sessiontype), cgoAllocsUnknown
	csymmetric, csymmetricAllocMap := symmetric.PassRef()
	cauthhash, cauthhashAllocMap := (C.TPMI_ALG_HASH)(authhash), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (*C.TPMI_SH_AUTH_SESSION)(unsafe.Pointer(sessionhandle)), cgoAllocsUnknown
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_StartAuthSession(csyscontext, ctpmkey, cbind, ccmdauthsarray, cnoncecaller, cencryptedsalt, csessiontype, csymmetric, cauthhash, csessionhandle, cnoncetpm, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(cauthhashAllocMap)
	runtime.KeepAlive(csymmetricAllocMap)
	runtime.KeepAlive(csessiontypeAllocMap)
	runtime.KeepAlive(cencryptedsaltAllocMap)
	runtime.KeepAlive(cnoncecallerAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cbindAllocMap)
	runtime.KeepAlive(ctpmkeyAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyrestartPrepare function as declared in tss2/tss2_sys.h:208
func Tss2SysPolicyrestartPrepare(syscontext *Tss2SysContext, sessionhandle TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.TPMI_SH_POLICY)(sessionhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyRestart_Prepare(csyscontext, csessionhandle)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyrestartComplete function as declared in tss2/tss2_sys.h:212
func Tss2SysPolicyrestartComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyRestart_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyrestart function as declared in tss2/tss2_sys.h:215
func Tss2SysPolicyrestart(syscontext *Tss2SysContext, sessionhandle TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.TPMI_SH_POLICY)(sessionhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyRestart(csyscontext, csessionhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreatePrepare function as declared in tss2/tss2_sys.h:221
func Tss2SysCreatePrepare(syscontext *Tss2SysContext, parenthandle TpmiDhObject, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bPublic, outsideinfo *Tpm2bData, creationpcr *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	coutsideinfo, coutsideinfoAllocMap := outsideinfo.PassRef()
	ccreationpcr, ccreationpcrAllocMap := creationpcr.PassRef()
	__ret := C.Tss2_Sys_Create_Prepare(csyscontext, cparenthandle, cinsensitive, cinpublic, coutsideinfo, ccreationpcr)
	runtime.KeepAlive(ccreationpcrAllocMap)
	runtime.KeepAlive(coutsideinfoAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateComplete function as declared in tss2/tss2_sys.h:229
func Tss2SysCreateComplete(syscontext *Tss2SysContext, outprivate *Tpm2bPrivate, outpublic *Tpm2bPublic, creationdata *Tpm2bCreationData, creationhash *Tpm2bDigest, creationticket *TpmtTkCreation) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	ccreationdata, ccreationdataAllocMap := creationdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	__ret := C.Tss2_Sys_Create_Complete(csyscontext, coutprivate, coutpublic, ccreationdata, ccreationhash, ccreationticket)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(ccreationdataAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreate function as declared in tss2/tss2_sys.h:237
func Tss2SysCreate(syscontext *Tss2SysContext, parenthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bPublic, outsideinfo *Tpm2bData, creationpcr *TpmlPcrSelection, outprivate *Tpm2bPrivate, outpublic *Tpm2bPublic, creationdata *Tpm2bCreationData, creationhash *Tpm2bDigest, creationticket *TpmtTkCreation, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	coutsideinfo, coutsideinfoAllocMap := outsideinfo.PassRef()
	ccreationpcr, ccreationpcrAllocMap := creationpcr.PassRef()
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	ccreationdata, ccreationdataAllocMap := creationdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Create(csyscontext, cparenthandle, ccmdauthsarray, cinsensitive, cinpublic, coutsideinfo, ccreationpcr, coutprivate, coutpublic, ccreationdata, ccreationhash, ccreationticket, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(ccreationdataAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(ccreationpcrAllocMap)
	runtime.KeepAlive(coutsideinfoAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoadPrepare function as declared in tss2/tss2_sys.h:253
func Tss2SysLoadPrepare(syscontext *Tss2SysContext, parenthandle TpmiDhObject, inprivate *Tpm2bPrivate, inpublic *Tpm2bPublic) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	__ret := C.Tss2_Sys_Load_Prepare(csyscontext, cparenthandle, cinprivate, cinpublic)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoadComplete function as declared in tss2/tss2_sys.h:260
func Tss2SysLoadComplete(syscontext *Tss2SysContext, objecthandle *Tpm2Handle, name *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	cname, cnameAllocMap := name.PassRef()
	__ret := C.Tss2_Sys_Load_Complete(csyscontext, cobjecthandle, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoad function as declared in tss2/tss2_sys.h:266
func Tss2SysLoad(syscontext *Tss2SysContext, parenthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, inprivate *Tpm2bPrivate, inpublic *Tpm2bPublic, objecthandle *Tpm2Handle, name *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	cname, cnameAllocMap := name.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Load(csyscontext, cparenthandle, ccmdauthsarray, cinprivate, cinpublic, cobjecthandle, cname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoadexternalPrepare function as declared in tss2/tss2_sys.h:277
func Tss2SysLoadexternalPrepare(syscontext *Tss2SysContext, inprivate *Tpm2bSensitive, inpublic *Tpm2bPublic, hierarchy TpmiRhHierarchy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	__ret := C.Tss2_Sys_LoadExternal_Prepare(csyscontext, cinprivate, cinpublic, chierarchy)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoadexternalComplete function as declared in tss2/tss2_sys.h:283
func Tss2SysLoadexternalComplete(syscontext *Tss2SysContext, objecthandle *Tpm2Handle, name *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	cname, cnameAllocMap := name.PassRef()
	__ret := C.Tss2_Sys_LoadExternal_Complete(csyscontext, cobjecthandle, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysLoadexternal function as declared in tss2/tss2_sys.h:288
func Tss2SysLoadexternal(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, inprivate *Tpm2bSensitive, inpublic *Tpm2bPublic, hierarchy TpmiRhHierarchy, objecthandle *Tpm2Handle, name *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinprivate, cinprivateAllocMap := inprivate.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	cname, cnameAllocMap := name.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_LoadExternal(csyscontext, ccmdauthsarray, cinprivate, cinpublic, chierarchy, cobjecthandle, cname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinprivateAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadpublicPrepare function as declared in tss2/tss2_sys.h:298
func Tss2SysReadpublicPrepare(syscontext *Tss2SysContext, objecthandle TpmiDhObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ReadPublic_Prepare(csyscontext, cobjecthandle)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadpublicComplete function as declared in tss2/tss2_sys.h:302
func Tss2SysReadpublicComplete(syscontext *Tss2SysContext, outpublic *Tpm2bPublic, name *Tpm2bName, qualifiedname *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	cname, cnameAllocMap := name.PassRef()
	cqualifiedname, cqualifiednameAllocMap := qualifiedname.PassRef()
	__ret := C.Tss2_Sys_ReadPublic_Complete(csyscontext, coutpublic, cname, cqualifiedname)
	runtime.KeepAlive(cqualifiednameAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadpublic function as declared in tss2/tss2_sys.h:308
func Tss2SysReadpublic(syscontext *Tss2SysContext, objecthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, outpublic *Tpm2bPublic, name *Tpm2bName, qualifiedname *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	cname, cnameAllocMap := name.PassRef()
	cqualifiedname, cqualifiednameAllocMap := qualifiedname.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ReadPublic(csyscontext, cobjecthandle, ccmdauthsarray, coutpublic, cname, cqualifiedname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cqualifiednameAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysActivatecredentialPrepare function as declared in tss2/tss2_sys.h:317
func Tss2SysActivatecredentialPrepare(syscontext *Tss2SysContext, activatehandle TpmiDhObject, keyhandle TpmiDhObject, credentialblob *Tpm2bIdObject, secret *Tpm2bEncryptedSecret) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cactivatehandle, cactivatehandleAllocMap := (C.TPMI_DH_OBJECT)(activatehandle), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccredentialblob, ccredentialblobAllocMap := credentialblob.PassRef()
	csecret, csecretAllocMap := secret.PassRef()
	__ret := C.Tss2_Sys_ActivateCredential_Prepare(csyscontext, cactivatehandle, ckeyhandle, ccredentialblob, csecret)
	runtime.KeepAlive(csecretAllocMap)
	runtime.KeepAlive(ccredentialblobAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cactivatehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysActivatecredentialComplete function as declared in tss2/tss2_sys.h:324
func Tss2SysActivatecredentialComplete(syscontext *Tss2SysContext, certinfo *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccertinfo, ccertinfoAllocMap := certinfo.PassRef()
	__ret := C.Tss2_Sys_ActivateCredential_Complete(csyscontext, ccertinfo)
	runtime.KeepAlive(ccertinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysActivatecredential function as declared in tss2/tss2_sys.h:328
func Tss2SysActivatecredential(syscontext *Tss2SysContext, activatehandle TpmiDhObject, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, credentialblob *Tpm2bIdObject, secret *Tpm2bEncryptedSecret, certinfo *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cactivatehandle, cactivatehandleAllocMap := (C.TPMI_DH_OBJECT)(activatehandle), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccredentialblob, ccredentialblobAllocMap := credentialblob.PassRef()
	csecret, csecretAllocMap := secret.PassRef()
	ccertinfo, ccertinfoAllocMap := certinfo.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ActivateCredential(csyscontext, cactivatehandle, ckeyhandle, ccmdauthsarray, ccredentialblob, csecret, ccertinfo, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccertinfoAllocMap)
	runtime.KeepAlive(csecretAllocMap)
	runtime.KeepAlive(ccredentialblobAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cactivatehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysMakecredentialPrepare function as declared in tss2/tss2_sys.h:338
func Tss2SysMakecredentialPrepare(syscontext *Tss2SysContext, handle TpmiDhObject, credential *Tpm2bDigest, objectname *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	ccredential, ccredentialAllocMap := credential.PassRef()
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	__ret := C.Tss2_Sys_MakeCredential_Prepare(csyscontext, chandle, ccredential, cobjectname)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(ccredentialAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysMakecredentialComplete function as declared in tss2/tss2_sys.h:344
func Tss2SysMakecredentialComplete(syscontext *Tss2SysContext, credentialblob *Tpm2bIdObject, secret *Tpm2bEncryptedSecret) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccredentialblob, ccredentialblobAllocMap := credentialblob.PassRef()
	csecret, csecretAllocMap := secret.PassRef()
	__ret := C.Tss2_Sys_MakeCredential_Complete(csyscontext, ccredentialblob, csecret)
	runtime.KeepAlive(csecretAllocMap)
	runtime.KeepAlive(ccredentialblobAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysMakecredential function as declared in tss2/tss2_sys.h:349
func Tss2SysMakecredential(syscontext *Tss2SysContext, handle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, credential *Tpm2bDigest, objectname *Tpm2bName, credentialblob *Tpm2bIdObject, secret *Tpm2bEncryptedSecret, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccredential, ccredentialAllocMap := credential.PassRef()
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	ccredentialblob, ccredentialblobAllocMap := credentialblob.PassRef()
	csecret, csecretAllocMap := secret.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_MakeCredential(csyscontext, chandle, ccmdauthsarray, ccredential, cobjectname, ccredentialblob, csecret, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csecretAllocMap)
	runtime.KeepAlive(ccredentialblobAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(ccredentialAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysUnsealPrepare function as declared in tss2/tss2_sys.h:359
func Tss2SysUnsealPrepare(syscontext *Tss2SysContext, itemhandle TpmiDhObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	citemhandle, citemhandleAllocMap := (C.TPMI_DH_OBJECT)(itemhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Unseal_Prepare(csyscontext, citemhandle)
	runtime.KeepAlive(citemhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysUnsealComplete function as declared in tss2/tss2_sys.h:363
func Tss2SysUnsealComplete(syscontext *Tss2SysContext, outdata *Tpm2bSensitiveData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutdata, coutdataAllocMap := outdata.PassRef()
	__ret := C.Tss2_Sys_Unseal_Complete(csyscontext, coutdata)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysUnseal function as declared in tss2/tss2_sys.h:367
func Tss2SysUnseal(syscontext *Tss2SysContext, itemhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, outdata *Tpm2bSensitiveData, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	citemhandle, citemhandleAllocMap := (C.TPMI_DH_OBJECT)(itemhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	coutdata, coutdataAllocMap := outdata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Unseal(csyscontext, citemhandle, ccmdauthsarray, coutdata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(citemhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysObjectchangeauthPrepare function as declared in tss2/tss2_sys.h:374
func Tss2SysObjectchangeauthPrepare(syscontext *Tss2SysContext, objecthandle TpmiDhObject, parenthandle TpmiDhObject, newauth *Tpm2bAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Tss2_Sys_ObjectChangeAuth_Prepare(csyscontext, cobjecthandle, cparenthandle, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysObjectchangeauthComplete function as declared in tss2/tss2_sys.h:380
func Tss2SysObjectchangeauthComplete(syscontext *Tss2SysContext, outprivate *Tpm2bPrivate) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	__ret := C.Tss2_Sys_ObjectChangeAuth_Complete(csyscontext, coutprivate)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysObjectchangeauth function as declared in tss2/tss2_sys.h:384
func Tss2SysObjectchangeauth(syscontext *Tss2SysContext, objecthandle TpmiDhObject, parenthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, newauth *Tpm2bAuth, outprivate *Tpm2bPrivate, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ObjectChangeAuth(csyscontext, cobjecthandle, cparenthandle, ccmdauthsarray, cnewauth, coutprivate, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDuplicatePrepare function as declared in tss2/tss2_sys.h:393
func Tss2SysDuplicatePrepare(syscontext *Tss2SysContext, objecthandle TpmiDhObject, newparenthandle TpmiDhObject, encryptionkeyin *Tpm2bData, symmetricalg *TpmtSymDefObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cnewparenthandle, cnewparenthandleAllocMap := (C.TPMI_DH_OBJECT)(newparenthandle), cgoAllocsUnknown
	cencryptionkeyin, cencryptionkeyinAllocMap := encryptionkeyin.PassRef()
	csymmetricalg, csymmetricalgAllocMap := symmetricalg.PassRef()
	__ret := C.Tss2_Sys_Duplicate_Prepare(csyscontext, cobjecthandle, cnewparenthandle, cencryptionkeyin, csymmetricalg)
	runtime.KeepAlive(csymmetricalgAllocMap)
	runtime.KeepAlive(cencryptionkeyinAllocMap)
	runtime.KeepAlive(cnewparenthandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDuplicateComplete function as declared in tss2/tss2_sys.h:400
func Tss2SysDuplicateComplete(syscontext *Tss2SysContext, encryptionkeyout *Tpm2bData, duplicate *Tpm2bPrivate, outsymseed *Tpm2bEncryptedSecret) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cencryptionkeyout, cencryptionkeyoutAllocMap := encryptionkeyout.PassRef()
	cduplicate, cduplicateAllocMap := duplicate.PassRef()
	coutsymseed, coutsymseedAllocMap := outsymseed.PassRef()
	__ret := C.Tss2_Sys_Duplicate_Complete(csyscontext, cencryptionkeyout, cduplicate, coutsymseed)
	runtime.KeepAlive(coutsymseedAllocMap)
	runtime.KeepAlive(cduplicateAllocMap)
	runtime.KeepAlive(cencryptionkeyoutAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDuplicate function as declared in tss2/tss2_sys.h:406
func Tss2SysDuplicate(syscontext *Tss2SysContext, objecthandle TpmiDhObject, newparenthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, encryptionkeyin *Tpm2bData, symmetricalg *TpmtSymDefObject, encryptionkeyout *Tpm2bData, duplicate *Tpm2bPrivate, outsymseed *Tpm2bEncryptedSecret, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cnewparenthandle, cnewparenthandleAllocMap := (C.TPMI_DH_OBJECT)(newparenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cencryptionkeyin, cencryptionkeyinAllocMap := encryptionkeyin.PassRef()
	csymmetricalg, csymmetricalgAllocMap := symmetricalg.PassRef()
	cencryptionkeyout, cencryptionkeyoutAllocMap := encryptionkeyout.PassRef()
	cduplicate, cduplicateAllocMap := duplicate.PassRef()
	coutsymseed, coutsymseedAllocMap := outsymseed.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Duplicate(csyscontext, cobjecthandle, cnewparenthandle, ccmdauthsarray, cencryptionkeyin, csymmetricalg, cencryptionkeyout, cduplicate, coutsymseed, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutsymseedAllocMap)
	runtime.KeepAlive(cduplicateAllocMap)
	runtime.KeepAlive(cencryptionkeyoutAllocMap)
	runtime.KeepAlive(csymmetricalgAllocMap)
	runtime.KeepAlive(cencryptionkeyinAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnewparenthandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRewrapPrepare function as declared in tss2/tss2_sys.h:418
func Tss2SysRewrapPrepare(syscontext *Tss2SysContext, oldparent TpmiDhObject, newparent TpmiDhObject, induplicate *Tpm2bPrivate, name *Tpm2bName, insymseed *Tpm2bEncryptedSecret) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coldparent, coldparentAllocMap := (C.TPMI_DH_OBJECT)(oldparent), cgoAllocsUnknown
	cnewparent, cnewparentAllocMap := (C.TPMI_DH_OBJECT)(newparent), cgoAllocsUnknown
	cinduplicate, cinduplicateAllocMap := induplicate.PassRef()
	cname, cnameAllocMap := name.PassRef()
	cinsymseed, cinsymseedAllocMap := insymseed.PassRef()
	__ret := C.Tss2_Sys_Rewrap_Prepare(csyscontext, coldparent, cnewparent, cinduplicate, cname, cinsymseed)
	runtime.KeepAlive(cinsymseedAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cinduplicateAllocMap)
	runtime.KeepAlive(cnewparentAllocMap)
	runtime.KeepAlive(coldparentAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRewrapComplete function as declared in tss2/tss2_sys.h:426
func Tss2SysRewrapComplete(syscontext *Tss2SysContext, outduplicate *Tpm2bPrivate, outsymseed *Tpm2bEncryptedSecret) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutduplicate, coutduplicateAllocMap := outduplicate.PassRef()
	coutsymseed, coutsymseedAllocMap := outsymseed.PassRef()
	__ret := C.Tss2_Sys_Rewrap_Complete(csyscontext, coutduplicate, coutsymseed)
	runtime.KeepAlive(coutsymseedAllocMap)
	runtime.KeepAlive(coutduplicateAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRewrap function as declared in tss2/tss2_sys.h:431
func Tss2SysRewrap(syscontext *Tss2SysContext, oldparent TpmiDhObject, newparent TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, induplicate *Tpm2bPrivate, name *Tpm2bName, insymseed *Tpm2bEncryptedSecret, outduplicate *Tpm2bPrivate, outsymseed *Tpm2bEncryptedSecret, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coldparent, coldparentAllocMap := (C.TPMI_DH_OBJECT)(oldparent), cgoAllocsUnknown
	cnewparent, cnewparentAllocMap := (C.TPMI_DH_OBJECT)(newparent), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinduplicate, cinduplicateAllocMap := induplicate.PassRef()
	cname, cnameAllocMap := name.PassRef()
	cinsymseed, cinsymseedAllocMap := insymseed.PassRef()
	coutduplicate, coutduplicateAllocMap := outduplicate.PassRef()
	coutsymseed, coutsymseedAllocMap := outsymseed.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Rewrap(csyscontext, coldparent, cnewparent, ccmdauthsarray, cinduplicate, cname, cinsymseed, coutduplicate, coutsymseed, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutsymseedAllocMap)
	runtime.KeepAlive(coutduplicateAllocMap)
	runtime.KeepAlive(cinsymseedAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cinduplicateAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnewparentAllocMap)
	runtime.KeepAlive(coldparentAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysImportPrepare function as declared in tss2/tss2_sys.h:443
func Tss2SysImportPrepare(syscontext *Tss2SysContext, parenthandle TpmiDhObject, encryptionkey *Tpm2bData, objectpublic *Tpm2bPublic, duplicate *Tpm2bPrivate, insymseed *Tpm2bEncryptedSecret, symmetricalg *TpmtSymDefObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	cencryptionkey, cencryptionkeyAllocMap := encryptionkey.PassRef()
	cobjectpublic, cobjectpublicAllocMap := objectpublic.PassRef()
	cduplicate, cduplicateAllocMap := duplicate.PassRef()
	cinsymseed, cinsymseedAllocMap := insymseed.PassRef()
	csymmetricalg, csymmetricalgAllocMap := symmetricalg.PassRef()
	__ret := C.Tss2_Sys_Import_Prepare(csyscontext, cparenthandle, cencryptionkey, cobjectpublic, cduplicate, cinsymseed, csymmetricalg)
	runtime.KeepAlive(csymmetricalgAllocMap)
	runtime.KeepAlive(cinsymseedAllocMap)
	runtime.KeepAlive(cduplicateAllocMap)
	runtime.KeepAlive(cobjectpublicAllocMap)
	runtime.KeepAlive(cencryptionkeyAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysImportComplete function as declared in tss2/tss2_sys.h:452
func Tss2SysImportComplete(syscontext *Tss2SysContext, outprivate *Tpm2bPrivate) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	__ret := C.Tss2_Sys_Import_Complete(csyscontext, coutprivate)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysImport function as declared in tss2/tss2_sys.h:456
func Tss2SysImport(syscontext *Tss2SysContext, parenthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, encryptionkey *Tpm2bData, objectpublic *Tpm2bPublic, duplicate *Tpm2bPrivate, insymseed *Tpm2bEncryptedSecret, symmetricalg *TpmtSymDefObject, outprivate *Tpm2bPrivate, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_DH_OBJECT)(parenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cencryptionkey, cencryptionkeyAllocMap := encryptionkey.PassRef()
	cobjectpublic, cobjectpublicAllocMap := objectpublic.PassRef()
	cduplicate, cduplicateAllocMap := duplicate.PassRef()
	cinsymseed, cinsymseedAllocMap := insymseed.PassRef()
	csymmetricalg, csymmetricalgAllocMap := symmetricalg.PassRef()
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Import(csyscontext, cparenthandle, ccmdauthsarray, cencryptionkey, cobjectpublic, cduplicate, cinsymseed, csymmetricalg, coutprivate, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(csymmetricalgAllocMap)
	runtime.KeepAlive(cinsymseedAllocMap)
	runtime.KeepAlive(cduplicateAllocMap)
	runtime.KeepAlive(cobjectpublicAllocMap)
	runtime.KeepAlive(cencryptionkeyAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaEncryptPrepare function as declared in tss2/tss2_sys.h:468
func Tss2SysRsaEncryptPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, message *Tpm2bPublicKeyRsa, inscheme *TpmtRsaDecrypt, label *Tpm2bData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cmessage, cmessageAllocMap := message.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	clabel, clabelAllocMap := label.PassRef()
	__ret := C.Tss2_Sys_RSA_Encrypt_Prepare(csyscontext, ckeyhandle, cmessage, cinscheme, clabel)
	runtime.KeepAlive(clabelAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cmessageAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaEncryptComplete function as declared in tss2/tss2_sys.h:475
func Tss2SysRsaEncryptComplete(syscontext *Tss2SysContext, outdata *Tpm2bPublicKeyRsa) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutdata, coutdataAllocMap := outdata.PassRef()
	__ret := C.Tss2_Sys_RSA_Encrypt_Complete(csyscontext, coutdata)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaEncrypt function as declared in tss2/tss2_sys.h:479
func Tss2SysRsaEncrypt(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, message *Tpm2bPublicKeyRsa, inscheme *TpmtRsaDecrypt, label *Tpm2bData, outdata *Tpm2bPublicKeyRsa, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cmessage, cmessageAllocMap := message.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	clabel, clabelAllocMap := label.PassRef()
	coutdata, coutdataAllocMap := outdata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_RSA_Encrypt(csyscontext, ckeyhandle, ccmdauthsarray, cmessage, cinscheme, clabel, coutdata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(clabelAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cmessageAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaDecryptPrepare function as declared in tss2/tss2_sys.h:489
func Tss2SysRsaDecryptPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, ciphertext *Tpm2bPublicKeyRsa, inscheme *TpmtRsaDecrypt, label *Tpm2bData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cciphertext, cciphertextAllocMap := ciphertext.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	clabel, clabelAllocMap := label.PassRef()
	__ret := C.Tss2_Sys_RSA_Decrypt_Prepare(csyscontext, ckeyhandle, cciphertext, cinscheme, clabel)
	runtime.KeepAlive(clabelAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cciphertextAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaDecryptComplete function as declared in tss2/tss2_sys.h:496
func Tss2SysRsaDecryptComplete(syscontext *Tss2SysContext, message *Tpm2bPublicKeyRsa) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cmessage, cmessageAllocMap := message.PassRef()
	__ret := C.Tss2_Sys_RSA_Decrypt_Complete(csyscontext, cmessage)
	runtime.KeepAlive(cmessageAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysRsaDecrypt function as declared in tss2/tss2_sys.h:500
func Tss2SysRsaDecrypt(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, ciphertext *Tpm2bPublicKeyRsa, inscheme *TpmtRsaDecrypt, label *Tpm2bData, message *Tpm2bPublicKeyRsa, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cciphertext, cciphertextAllocMap := ciphertext.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	clabel, clabelAllocMap := label.PassRef()
	cmessage, cmessageAllocMap := message.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_RSA_Decrypt(csyscontext, ckeyhandle, ccmdauthsarray, cciphertext, cinscheme, clabel, cmessage, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cmessageAllocMap)
	runtime.KeepAlive(clabelAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cciphertextAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhKeygenPrepare function as declared in tss2/tss2_sys.h:510
func Tss2SysEcdhKeygenPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ECDH_KeyGen_Prepare(csyscontext, ckeyhandle)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhKeygenComplete function as declared in tss2/tss2_sys.h:514
func Tss2SysEcdhKeygenComplete(syscontext *Tss2SysContext, zpoint *Tpm2bEccPoint, pubpoint *Tpm2bEccPoint) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	czpoint, czpointAllocMap := zpoint.PassRef()
	cpubpoint, cpubpointAllocMap := pubpoint.PassRef()
	__ret := C.Tss2_Sys_ECDH_KeyGen_Complete(csyscontext, czpoint, cpubpoint)
	runtime.KeepAlive(cpubpointAllocMap)
	runtime.KeepAlive(czpointAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhKeygen function as declared in tss2/tss2_sys.h:519
func Tss2SysEcdhKeygen(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, zpoint *Tpm2bEccPoint, pubpoint *Tpm2bEccPoint, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	czpoint, czpointAllocMap := zpoint.PassRef()
	cpubpoint, cpubpointAllocMap := pubpoint.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ECDH_KeyGen(csyscontext, ckeyhandle, ccmdauthsarray, czpoint, cpubpoint, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpubpointAllocMap)
	runtime.KeepAlive(czpointAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhZgenPrepare function as declared in tss2/tss2_sys.h:527
func Tss2SysEcdhZgenPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, inpoint *Tpm2bEccPoint) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cinpoint, cinpointAllocMap := inpoint.PassRef()
	__ret := C.Tss2_Sys_ECDH_ZGen_Prepare(csyscontext, ckeyhandle, cinpoint)
	runtime.KeepAlive(cinpointAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhZgenComplete function as declared in tss2/tss2_sys.h:532
func Tss2SysEcdhZgenComplete(syscontext *Tss2SysContext, outpoint *Tpm2bEccPoint) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutpoint, coutpointAllocMap := outpoint.PassRef()
	__ret := C.Tss2_Sys_ECDH_ZGen_Complete(csyscontext, coutpoint)
	runtime.KeepAlive(coutpointAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcdhZgen function as declared in tss2/tss2_sys.h:536
func Tss2SysEcdhZgen(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, inpoint *Tpm2bEccPoint, outpoint *Tpm2bEccPoint, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinpoint, cinpointAllocMap := inpoint.PassRef()
	coutpoint, coutpointAllocMap := outpoint.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ECDH_ZGen(csyscontext, ckeyhandle, ccmdauthsarray, cinpoint, coutpoint, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutpointAllocMap)
	runtime.KeepAlive(cinpointAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEccParametersPrepare function as declared in tss2/tss2_sys.h:544
func Tss2SysEccParametersPrepare(syscontext *Tss2SysContext, curveid TpmiEccCurve) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccurveid, ccurveidAllocMap := (C.TPMI_ECC_CURVE)(curveid), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ECC_Parameters_Prepare(csyscontext, ccurveid)
	runtime.KeepAlive(ccurveidAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEccParametersComplete function as declared in tss2/tss2_sys.h:548
func Tss2SysEccParametersComplete(syscontext *Tss2SysContext, parameters *TpmsAlgorithmDetailEcc) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparameters, cparametersAllocMap := parameters.PassRef()
	__ret := C.Tss2_Sys_ECC_Parameters_Complete(csyscontext, cparameters)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEccParameters function as declared in tss2/tss2_sys.h:552
func Tss2SysEccParameters(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, curveid TpmiEccCurve, parameters *TpmsAlgorithmDetailEcc, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccurveid, ccurveidAllocMap := (C.TPMI_ECC_CURVE)(curveid), cgoAllocsUnknown
	cparameters, cparametersAllocMap := parameters.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ECC_Parameters(csyscontext, ccmdauthsarray, ccurveid, cparameters, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(ccurveidAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysZgen2phasePrepare function as declared in tss2/tss2_sys.h:559
func Tss2SysZgen2phasePrepare(syscontext *Tss2SysContext, keya TpmiDhObject, inqsb *Tpm2bEccPoint, inqeb *Tpm2bEccPoint, inscheme TpmiEccKeyExchange, counter Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeya, ckeyaAllocMap := (C.TPMI_DH_OBJECT)(keya), cgoAllocsUnknown
	cinqsb, cinqsbAllocMap := inqsb.PassRef()
	cinqeb, cinqebAllocMap := inqeb.PassRef()
	cinscheme, cinschemeAllocMap := (C.TPMI_ECC_KEY_EXCHANGE)(inscheme), cgoAllocsUnknown
	ccounter, ccounterAllocMap := (C.UINT16)(counter), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ZGen_2Phase_Prepare(csyscontext, ckeya, cinqsb, cinqeb, cinscheme, ccounter)
	runtime.KeepAlive(ccounterAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cinqebAllocMap)
	runtime.KeepAlive(cinqsbAllocMap)
	runtime.KeepAlive(ckeyaAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysZgen2phaseComplete function as declared in tss2/tss2_sys.h:567
func Tss2SysZgen2phaseComplete(syscontext *Tss2SysContext, outz1 *Tpm2bEccPoint, outz2 *Tpm2bEccPoint) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutz1, coutz1AllocMap := outz1.PassRef()
	coutz2, coutz2AllocMap := outz2.PassRef()
	__ret := C.Tss2_Sys_ZGen_2Phase_Complete(csyscontext, coutz1, coutz2)
	runtime.KeepAlive(coutz2AllocMap)
	runtime.KeepAlive(coutz1AllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysZgen2phase function as declared in tss2/tss2_sys.h:572
func Tss2SysZgen2phase(syscontext *Tss2SysContext, keya TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, inqsb *Tpm2bEccPoint, inqeb *Tpm2bEccPoint, inscheme TpmiEccKeyExchange, counter Uint16, outz1 *Tpm2bEccPoint, outz2 *Tpm2bEccPoint, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeya, ckeyaAllocMap := (C.TPMI_DH_OBJECT)(keya), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinqsb, cinqsbAllocMap := inqsb.PassRef()
	cinqeb, cinqebAllocMap := inqeb.PassRef()
	cinscheme, cinschemeAllocMap := (C.TPMI_ECC_KEY_EXCHANGE)(inscheme), cgoAllocsUnknown
	ccounter, ccounterAllocMap := (C.UINT16)(counter), cgoAllocsUnknown
	coutz1, coutz1AllocMap := outz1.PassRef()
	coutz2, coutz2AllocMap := outz2.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ZGen_2Phase(csyscontext, ckeya, ccmdauthsarray, cinqsb, cinqeb, cinscheme, ccounter, coutz1, coutz2, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutz2AllocMap)
	runtime.KeepAlive(coutz1AllocMap)
	runtime.KeepAlive(ccounterAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cinqebAllocMap)
	runtime.KeepAlive(cinqsbAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyaAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecryptPrepare function as declared in tss2/tss2_sys.h:584
func Tss2SysEncryptdecryptPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, decrypt TpmiYesNo, mode TpmiAlgSymMode, ivin *Tpm2bIv, indata *Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cdecrypt, cdecryptAllocMap := (C.TPMI_YES_NO)(decrypt), cgoAllocsUnknown
	cmode, cmodeAllocMap := (C.TPMI_ALG_SYM_MODE)(mode), cgoAllocsUnknown
	civin, civinAllocMap := ivin.PassRef()
	cindata, cindataAllocMap := indata.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt_Prepare(csyscontext, ckeyhandle, cdecrypt, cmode, civin, cindata)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(civinAllocMap)
	runtime.KeepAlive(cmodeAllocMap)
	runtime.KeepAlive(cdecryptAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecryptComplete function as declared in tss2/tss2_sys.h:592
func Tss2SysEncryptdecryptComplete(syscontext *Tss2SysContext, outdata *Tpm2bMaxBuffer, ivout *Tpm2bIv) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutdata, coutdataAllocMap := outdata.PassRef()
	civout, civoutAllocMap := ivout.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt_Complete(csyscontext, coutdata, civout)
	runtime.KeepAlive(civoutAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecrypt function as declared in tss2/tss2_sys.h:597
func Tss2SysEncryptdecrypt(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, decrypt TpmiYesNo, mode TpmiAlgSymMode, ivin *Tpm2bIv, indata *Tpm2bMaxBuffer, outdata *Tpm2bMaxBuffer, ivout *Tpm2bIv, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cdecrypt, cdecryptAllocMap := (C.TPMI_YES_NO)(decrypt), cgoAllocsUnknown
	cmode, cmodeAllocMap := (C.TPMI_ALG_SYM_MODE)(mode), cgoAllocsUnknown
	civin, civinAllocMap := ivin.PassRef()
	cindata, cindataAllocMap := indata.PassRef()
	coutdata, coutdataAllocMap := outdata.PassRef()
	civout, civoutAllocMap := ivout.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt(csyscontext, ckeyhandle, ccmdauthsarray, cdecrypt, cmode, civin, cindata, coutdata, civout, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(civoutAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(civinAllocMap)
	runtime.KeepAlive(cmodeAllocMap)
	runtime.KeepAlive(cdecryptAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecrypt2Prepare function as declared in tss2/tss2_sys.h:609
func Tss2SysEncryptdecrypt2Prepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, indata *Tpm2bMaxBuffer, decrypt TpmiYesNo, mode TpmiAlgSymMode, ivin *Tpm2bIv) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cindata, cindataAllocMap := indata.PassRef()
	cdecrypt, cdecryptAllocMap := (C.TPMI_YES_NO)(decrypt), cgoAllocsUnknown
	cmode, cmodeAllocMap := (C.TPMI_ALG_SYM_MODE)(mode), cgoAllocsUnknown
	civin, civinAllocMap := ivin.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt2_Prepare(csyscontext, ckeyhandle, cindata, cdecrypt, cmode, civin)
	runtime.KeepAlive(civinAllocMap)
	runtime.KeepAlive(cmodeAllocMap)
	runtime.KeepAlive(cdecryptAllocMap)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecrypt2Complete function as declared in tss2/tss2_sys.h:617
func Tss2SysEncryptdecrypt2Complete(syscontext *Tss2SysContext, outdata *Tpm2bMaxBuffer, ivout *Tpm2bIv) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutdata, coutdataAllocMap := outdata.PassRef()
	civout, civoutAllocMap := ivout.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt2_Complete(csyscontext, coutdata, civout)
	runtime.KeepAlive(civoutAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEncryptdecrypt2 function as declared in tss2/tss2_sys.h:622
func Tss2SysEncryptdecrypt2(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, indata *Tpm2bMaxBuffer, decrypt TpmiYesNo, mode TpmiAlgSymMode, ivin *Tpm2bIv, outdata *Tpm2bMaxBuffer, ivout *Tpm2bIv, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cindata, cindataAllocMap := indata.PassRef()
	cdecrypt, cdecryptAllocMap := (C.TPMI_YES_NO)(decrypt), cgoAllocsUnknown
	cmode, cmodeAllocMap := (C.TPMI_ALG_SYM_MODE)(mode), cgoAllocsUnknown
	civin, civinAllocMap := ivin.PassRef()
	coutdata, coutdataAllocMap := outdata.PassRef()
	civout, civoutAllocMap := ivout.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_EncryptDecrypt2(csyscontext, ckeyhandle, ccmdauthsarray, cindata, cdecrypt, cmode, civin, coutdata, civout, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(civoutAllocMap)
	runtime.KeepAlive(coutdataAllocMap)
	runtime.KeepAlive(civinAllocMap)
	runtime.KeepAlive(cmodeAllocMap)
	runtime.KeepAlive(cdecryptAllocMap)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHashPrepare function as declared in tss2/tss2_sys.h:634
func Tss2SysHashPrepare(syscontext *Tss2SysContext, data []Tpm2bMaxBuffer, hashalg TpmiAlgHash, hierarchy TpmiRhHierarchy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cdata, cdataAllocMap := unpackArgSTpm2bMaxBuffer(data)
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Hash_Prepare(csyscontext, cdata, chashalg, chierarchy)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	packSTpm2bMaxBuffer(data, cdata)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHashComplete function as declared in tss2/tss2_sys.h:640
func Tss2SysHashComplete(syscontext *Tss2SysContext, outhash []Tpm2bDigest, validation *TpmtTkHashcheck) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	couthash, couthashAllocMap := unpackArgSTpm2bDigest(outhash)
	cvalidation, cvalidationAllocMap := validation.PassRef()
	__ret := C.Tss2_Sys_Hash_Complete(csyscontext, couthash, cvalidation)
	runtime.KeepAlive(cvalidationAllocMap)
	packSTpm2bDigest(outhash, couthash)
	runtime.KeepAlive(couthashAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHash function as declared in tss2/tss2_sys.h:645
func Tss2SysHash(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, data *Tpm2bMaxBuffer, hashalg TpmiAlgHash, hierarchy TpmiRhHierarchy, outhash *Tpm2bDigest, validation *TpmtTkHashcheck, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cdata, cdataAllocMap := data.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	couthash, couthashAllocMap := outhash.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Hash(csyscontext, ccmdauthsarray, cdata, chashalg, chierarchy, couthash, cvalidation, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(couthashAllocMap)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmacPrepare function as declared in tss2/tss2_sys.h:655
func Tss2SysHmacPrepare(syscontext *Tss2SysContext, handle TpmiDhObject, buffer *Tpm2bMaxBuffer, hashalg TpmiAlgHash) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HMAC_Prepare(csyscontext, chandle, cbuffer, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmacComplete function as declared in tss2/tss2_sys.h:661
func Tss2SysHmacComplete(syscontext *Tss2SysContext, outhmac []Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	couthmac, couthmacAllocMap := unpackArgSTpm2bDigest(outhmac)
	__ret := C.Tss2_Sys_HMAC_Complete(csyscontext, couthmac)
	packSTpm2bDigest(outhmac, couthmac)
	runtime.KeepAlive(couthmacAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmac function as declared in tss2/tss2_sys.h:665
func Tss2SysHmac(syscontext *Tss2SysContext, handle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, buffer *Tpm2bMaxBuffer, hashalg TpmiAlgHash, outhmac *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbuffer, cbufferAllocMap := buffer.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	couthmac, couthmacAllocMap := outhmac.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_HMAC(csyscontext, chandle, ccmdauthsarray, cbuffer, chashalg, couthmac, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(couthmacAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetrandomPrepare function as declared in tss2/tss2_sys.h:674
func Tss2SysGetrandomPrepare(syscontext *Tss2SysContext, bytesrequested Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cbytesrequested, cbytesrequestedAllocMap := (C.UINT16)(bytesrequested), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetRandom_Prepare(csyscontext, cbytesrequested)
	runtime.KeepAlive(cbytesrequestedAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetrandomComplete function as declared in tss2/tss2_sys.h:678
func Tss2SysGetrandomComplete(syscontext *Tss2SysContext, randombytes *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	crandombytes, crandombytesAllocMap := randombytes.PassRef()
	__ret := C.Tss2_Sys_GetRandom_Complete(csyscontext, crandombytes)
	runtime.KeepAlive(crandombytesAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetrandom function as declared in tss2/tss2_sys.h:682
func Tss2SysGetrandom(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, bytesrequested Uint16, randombytes *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbytesrequested, cbytesrequestedAllocMap := (C.UINT16)(bytesrequested), cgoAllocsUnknown
	crandombytes, crandombytesAllocMap := randombytes.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetRandom(csyscontext, ccmdauthsarray, cbytesrequested, crandombytes, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(crandombytesAllocMap)
	runtime.KeepAlive(cbytesrequestedAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStirrandomPrepare function as declared in tss2/tss2_sys.h:689
func Tss2SysStirrandomPrepare(syscontext *Tss2SysContext, indata []Tpm2bSensitiveData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cindata, cindataAllocMap := unpackArgSTpm2bSensitiveData(indata)
	__ret := C.Tss2_Sys_StirRandom_Prepare(csyscontext, cindata)
	packSTpm2bSensitiveData(indata, cindata)
	runtime.KeepAlive(cindataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStirrandomComplete function as declared in tss2/tss2_sys.h:693
func Tss2SysStirrandomComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_StirRandom_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysStirrandom function as declared in tss2/tss2_sys.h:696
func Tss2SysStirrandom(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, indata *Tpm2bSensitiveData, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cindata, cindataAllocMap := indata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_StirRandom(csyscontext, ccmdauthsarray, cindata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cindataAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmacStartPrepare function as declared in tss2/tss2_sys.h:702
func Tss2SysHmacStartPrepare(syscontext *Tss2SysContext, handle TpmiDhObject, auth *Tpm2bAuth, hashalg TpmiAlgHash) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HMAC_Start_Prepare(csyscontext, chandle, cauth, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmacStartComplete function as declared in tss2/tss2_sys.h:708
func Tss2SysHmacStartComplete(syscontext *Tss2SysContext, sequencehandle []TpmiDhObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := copyPTpmiDhObjectBytes((*sliceHeader)(unsafe.Pointer(&sequencehandle)))
	__ret := C.Tss2_Sys_HMAC_Start_Complete(csyscontext, csequencehandle)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHmacStart function as declared in tss2/tss2_sys.h:712
func Tss2SysHmacStart(syscontext *Tss2SysContext, handle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, auth *Tpm2bAuth, hashalg TpmiAlgHash, sequencehandle *TpmiDhObject, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	chandle, chandleAllocMap := (C.TPMI_DH_OBJECT)(handle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauth, cauthAllocMap := auth.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (*C.TPMI_DH_OBJECT)(unsafe.Pointer(sequencehandle)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_HMAC_Start(csyscontext, chandle, ccmdauthsarray, cauth, chashalg, csequencehandle, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(chandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHashsequencestartPrepare function as declared in tss2/tss2_sys.h:721
func Tss2SysHashsequencestartPrepare(syscontext *Tss2SysContext, auth *Tpm2bAuth, hashalg TpmiAlgHash) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HashSequenceStart_Prepare(csyscontext, cauth, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHashsequencestartComplete function as declared in tss2/tss2_sys.h:726
func Tss2SysHashsequencestartComplete(syscontext *Tss2SysContext, sequencehandle *TpmiDhObject) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (*C.TPMI_DH_OBJECT)(unsafe.Pointer(sequencehandle)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HashSequenceStart_Complete(csyscontext, csequencehandle)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHashsequencestart function as declared in tss2/tss2_sys.h:730
func Tss2SysHashsequencestart(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, auth *Tpm2bAuth, hashalg TpmiAlgHash, sequencehandle *TpmiDhObject, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauth, cauthAllocMap := auth.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (*C.TPMI_DH_OBJECT)(unsafe.Pointer(sequencehandle)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_HashSequenceStart(csyscontext, ccmdauthsarray, cauth, chashalg, csequencehandle, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequenceupdatePrepare function as declared in tss2/tss2_sys.h:738
func Tss2SysSequenceupdatePrepare(syscontext *Tss2SysContext, sequencehandle TpmiDhObject, buffer *Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	__ret := C.Tss2_Sys_SequenceUpdate_Prepare(csyscontext, csequencehandle, cbuffer)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequenceupdateComplete function as declared in tss2/tss2_sys.h:743
func Tss2SysSequenceupdateComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SequenceUpdate_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequenceupdate function as declared in tss2/tss2_sys.h:746
func Tss2SysSequenceupdate(syscontext *Tss2SysContext, sequencehandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, buffer *Tpm2bMaxBuffer, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbuffer, cbufferAllocMap := buffer.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SequenceUpdate(csyscontext, csequencehandle, ccmdauthsarray, cbuffer, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequencecompletePrepare function as declared in tss2/tss2_sys.h:753
func Tss2SysSequencecompletePrepare(syscontext *Tss2SysContext, sequencehandle TpmiDhObject, buffer *Tpm2bMaxBuffer, hierarchy TpmiRhHierarchy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SequenceComplete_Prepare(csyscontext, csequencehandle, cbuffer, chierarchy)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequencecompleteComplete function as declared in tss2/tss2_sys.h:759
func Tss2SysSequencecompleteComplete(syscontext *Tss2SysContext, result *Tpm2bDigest, validation *TpmtTkHashcheck) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cresult, cresultAllocMap := result.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	__ret := C.Tss2_Sys_SequenceComplete_Complete(csyscontext, cresult, cvalidation)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(cresultAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSequencecomplete function as declared in tss2/tss2_sys.h:764
func Tss2SysSequencecomplete(syscontext *Tss2SysContext, sequencehandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, buffer *Tpm2bMaxBuffer, hierarchy TpmiRhHierarchy, result *Tpm2bDigest, validation *TpmtTkHashcheck, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbuffer, cbufferAllocMap := buffer.PassRef()
	chierarchy, chierarchyAllocMap := (C.TPMI_RH_HIERARCHY)(hierarchy), cgoAllocsUnknown
	cresult, cresultAllocMap := result.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SequenceComplete(csyscontext, csequencehandle, ccmdauthsarray, cbuffer, chierarchy, cresult, cvalidation, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(cresultAllocMap)
	runtime.KeepAlive(chierarchyAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEventsequencecompletePrepare function as declared in tss2/tss2_sys.h:774
func Tss2SysEventsequencecompletePrepare(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, sequencehandle TpmiDhObject, buffer *Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := buffer.PassRef()
	__ret := C.Tss2_Sys_EventSequenceComplete_Prepare(csyscontext, cpcrhandle, csequencehandle, cbuffer)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEventsequencecompleteComplete function as declared in tss2/tss2_sys.h:780
func Tss2SysEventsequencecompleteComplete(syscontext *Tss2SysContext, results *TpmlDigestValues) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cresults, cresultsAllocMap := results.PassRef()
	__ret := C.Tss2_Sys_EventSequenceComplete_Complete(csyscontext, cresults)
	runtime.KeepAlive(cresultsAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEventsequencecomplete function as declared in tss2/tss2_sys.h:784
func Tss2SysEventsequencecomplete(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, sequencehandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, buffer *Tpm2bMaxBuffer, results *TpmlDigestValues, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	csequencehandle, csequencehandleAllocMap := (C.TPMI_DH_OBJECT)(sequencehandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbuffer, cbufferAllocMap := buffer.PassRef()
	cresults, cresultsAllocMap := results.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_EventSequenceComplete(csyscontext, cpcrhandle, csequencehandle, ccmdauthsarray, cbuffer, cresults, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cresultsAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csequencehandleAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertifyPrepare function as declared in tss2/tss2_sys.h:793
func Tss2SysCertifyPrepare(syscontext *Tss2SysContext, objecthandle TpmiDhObject, signhandle TpmiDhObject, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	__ret := C.Tss2_Sys_Certify_Prepare(csyscontext, cobjecthandle, csignhandle, cqualifyingdata, cinscheme)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertifyComplete function as declared in tss2/tss2_sys.h:800
func Tss2SysCertifyComplete(syscontext *Tss2SysContext, certifyinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_Certify_Complete(csyscontext, ccertifyinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertify function as declared in tss2/tss2_sys.h:805
func Tss2SysCertify(syscontext *Tss2SysContext, objecthandle TpmiDhObject, signhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, certifyinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Certify(csyscontext, cobjecthandle, csignhandle, ccmdauthsarray, cqualifyingdata, cinscheme, ccertifyinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertifycreationPrepare function as declared in tss2/tss2_sys.h:816
func Tss2SysCertifycreationPrepare(syscontext *Tss2SysContext, signhandle TpmiDhObject, objecthandle TpmiDhObject, qualifyingdata *Tpm2bData, creationhash *Tpm2bDigest, inscheme *TpmtSigScheme, creationticket *TpmtTkCreation) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	__ret := C.Tss2_Sys_CertifyCreation_Prepare(csyscontext, csignhandle, cobjecthandle, cqualifyingdata, ccreationhash, cinscheme, ccreationticket)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertifycreationComplete function as declared in tss2/tss2_sys.h:825
func Tss2SysCertifycreationComplete(syscontext *Tss2SysContext, certifyinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_CertifyCreation_Complete(csyscontext, ccertifyinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCertifycreation function as declared in tss2/tss2_sys.h:830
func Tss2SysCertifycreation(syscontext *Tss2SysContext, signhandle TpmiDhObject, objecthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, creationhash *Tpm2bDigest, inscheme *TpmtSigScheme, creationticket *TpmtTkCreation, certifyinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_CertifyCreation(csyscontext, csignhandle, cobjecthandle, ccmdauthsarray, cqualifyingdata, ccreationhash, cinscheme, ccreationticket, ccertifyinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysQuotePrepare function as declared in tss2/tss2_sys.h:843
func Tss2SysQuotePrepare(syscontext *Tss2SysContext, signhandle TpmiDhObject, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, pcrselect *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cpcrselect, cpcrselectAllocMap := pcrselect.PassRef()
	__ret := C.Tss2_Sys_Quote_Prepare(csyscontext, csignhandle, cqualifyingdata, cinscheme, cpcrselect)
	runtime.KeepAlive(cpcrselectAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysQuoteComplete function as declared in tss2/tss2_sys.h:850
func Tss2SysQuoteComplete(syscontext *Tss2SysContext, quoted *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cquoted, cquotedAllocMap := quoted.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_Quote_Complete(csyscontext, cquoted, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cquotedAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysQuote function as declared in tss2/tss2_sys.h:855
func Tss2SysQuote(syscontext *Tss2SysContext, signhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, pcrselect *TpmlPcrSelection, quoted *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cpcrselect, cpcrselectAllocMap := pcrselect.PassRef()
	cquoted, cquotedAllocMap := quoted.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Quote(csyscontext, csignhandle, ccmdauthsarray, cqualifyingdata, cinscheme, cpcrselect, cquoted, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cquotedAllocMap)
	runtime.KeepAlive(cpcrselectAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetsessionauditdigestPrepare function as declared in tss2/tss2_sys.h:866
func Tss2SysGetsessionauditdigestPrepare(syscontext *Tss2SysContext, privacyadminhandle TpmiRhEndorsement, signhandle TpmiDhObject, sessionhandle TpmiShHmac, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyadminhandle, cprivacyadminhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyadminhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.TPMI_SH_HMAC)(sessionhandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	__ret := C.Tss2_Sys_GetSessionAuditDigest_Prepare(csyscontext, cprivacyadminhandle, csignhandle, csessionhandle, cqualifyingdata, cinscheme)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyadminhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetsessionauditdigestComplete function as declared in tss2/tss2_sys.h:874
func Tss2SysGetsessionauditdigestComplete(syscontext *Tss2SysContext, auditinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauditinfo, cauditinfoAllocMap := auditinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_GetSessionAuditDigest_Complete(csyscontext, cauditinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cauditinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetsessionauditdigest function as declared in tss2/tss2_sys.h:879
func Tss2SysGetsessionauditdigest(syscontext *Tss2SysContext, privacyadminhandle TpmiRhEndorsement, signhandle TpmiDhObject, sessionhandle TpmiShHmac, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, auditinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyadminhandle, cprivacyadminhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyadminhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	csessionhandle, csessionhandleAllocMap := (C.TPMI_SH_HMAC)(sessionhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cauditinfo, cauditinfoAllocMap := auditinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetSessionAuditDigest(csyscontext, cprivacyadminhandle, csignhandle, csessionhandle, ccmdauthsarray, cqualifyingdata, cinscheme, cauditinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cauditinfoAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csessionhandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyadminhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcommandauditdigestPrepare function as declared in tss2/tss2_sys.h:891
func Tss2SysGetcommandauditdigestPrepare(syscontext *Tss2SysContext, privacyhandle TpmiRhEndorsement, signhandle TpmiDhObject, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyhandle, cprivacyhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	__ret := C.Tss2_Sys_GetCommandAuditDigest_Prepare(csyscontext, cprivacyhandle, csignhandle, cqualifyingdata, cinscheme)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcommandauditdigestComplete function as declared in tss2/tss2_sys.h:898
func Tss2SysGetcommandauditdigestComplete(syscontext *Tss2SysContext, auditinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauditinfo, cauditinfoAllocMap := auditinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_GetCommandAuditDigest_Complete(csyscontext, cauditinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cauditinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcommandauditdigest function as declared in tss2/tss2_sys.h:903
func Tss2SysGetcommandauditdigest(syscontext *Tss2SysContext, privacyhandle TpmiRhEndorsement, signhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, auditinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyhandle, cprivacyhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cauditinfo, cauditinfoAllocMap := auditinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetCommandAuditDigest(csyscontext, cprivacyhandle, csignhandle, ccmdauthsarray, cqualifyingdata, cinscheme, cauditinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cauditinfoAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettimePrepare function as declared in tss2/tss2_sys.h:914
func Tss2SysGettimePrepare(syscontext *Tss2SysContext, privacyadminhandle TpmiRhEndorsement, signhandle TpmiDhObject, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyadminhandle, cprivacyadminhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyadminhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	__ret := C.Tss2_Sys_GetTime_Prepare(csyscontext, cprivacyadminhandle, csignhandle, cqualifyingdata, cinscheme)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyadminhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettimeComplete function as declared in tss2/tss2_sys.h:921
func Tss2SysGettimeComplete(syscontext *Tss2SysContext, timeinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctimeinfo, ctimeinfoAllocMap := timeinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_GetTime_Complete(csyscontext, ctimeinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ctimeinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGettime function as declared in tss2/tss2_sys.h:926
func Tss2SysGettime(syscontext *Tss2SysContext, privacyadminhandle TpmiRhEndorsement, signhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, timeinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprivacyadminhandle, cprivacyadminhandleAllocMap := (C.TPMI_RH_ENDORSEMENT)(privacyadminhandle), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	ctimeinfo, ctimeinfoAllocMap := timeinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetTime(csyscontext, cprivacyadminhandle, csignhandle, ccmdauthsarray, cqualifyingdata, cinscheme, ctimeinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ctimeinfoAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(cprivacyadminhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCommitPrepare function as declared in tss2/tss2_sys.h:937
func Tss2SysCommitPrepare(syscontext *Tss2SysContext, signhandle TpmiDhObject, p1 *Tpm2bEccPoint, s2 *Tpm2bSensitiveData, y2 *Tpm2bEccParameter) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cp1, cp1AllocMap := p1.PassRef()
	cs2, cs2AllocMap := s2.PassRef()
	cy2, cy2AllocMap := y2.PassRef()
	__ret := C.Tss2_Sys_Commit_Prepare(csyscontext, csignhandle, cp1, cs2, cy2)
	runtime.KeepAlive(cy2AllocMap)
	runtime.KeepAlive(cs2AllocMap)
	runtime.KeepAlive(cp1AllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCommitComplete function as declared in tss2/tss2_sys.h:944
func Tss2SysCommitComplete(syscontext *Tss2SysContext, k []Tpm2bEccPoint, l *Tpm2bEccPoint, e *Tpm2bEccPoint, counter *Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ck, ckAllocMap := unpackArgSTpm2bEccPoint(k)
	cl, clAllocMap := l.PassRef()
	ce, ceAllocMap := e.PassRef()
	ccounter, ccounterAllocMap := (*C.UINT16)(unsafe.Pointer(counter)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Commit_Complete(csyscontext, ck, cl, ce, ccounter)
	runtime.KeepAlive(ccounterAllocMap)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(clAllocMap)
	packSTpm2bEccPoint(k, ck)
	runtime.KeepAlive(ckAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCommit function as declared in tss2/tss2_sys.h:951
func Tss2SysCommit(syscontext *Tss2SysContext, signhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, p1 *Tpm2bEccPoint, s2 *Tpm2bSensitiveData, y2 *Tpm2bEccParameter, k *Tpm2bEccPoint, l *Tpm2bEccPoint, e *Tpm2bEccPoint, counter *Uint16, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cp1, cp1AllocMap := p1.PassRef()
	cs2, cs2AllocMap := s2.PassRef()
	cy2, cy2AllocMap := y2.PassRef()
	ck, ckAllocMap := k.PassRef()
	cl, clAllocMap := l.PassRef()
	ce, ceAllocMap := e.PassRef()
	ccounter, ccounterAllocMap := (*C.UINT16)(unsafe.Pointer(counter)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Commit(csyscontext, csignhandle, ccmdauthsarray, cp1, cs2, cy2, ck, cl, ce, ccounter, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccounterAllocMap)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(clAllocMap)
	runtime.KeepAlive(ckAllocMap)
	runtime.KeepAlive(cy2AllocMap)
	runtime.KeepAlive(cs2AllocMap)
	runtime.KeepAlive(cp1AllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcEphemeralPrepare function as declared in tss2/tss2_sys.h:964
func Tss2SysEcEphemeralPrepare(syscontext *Tss2SysContext, curveid TpmiEccCurve) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccurveid, ccurveidAllocMap := (C.TPMI_ECC_CURVE)(curveid), cgoAllocsUnknown
	__ret := C.Tss2_Sys_EC_Ephemeral_Prepare(csyscontext, ccurveid)
	runtime.KeepAlive(ccurveidAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcEphemeralComplete function as declared in tss2/tss2_sys.h:968
func Tss2SysEcEphemeralComplete(syscontext *Tss2SysContext, q []Tpm2bEccPoint, counter *Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cq, cqAllocMap := unpackArgSTpm2bEccPoint(q)
	ccounter, ccounterAllocMap := (*C.UINT16)(unsafe.Pointer(counter)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_EC_Ephemeral_Complete(csyscontext, cq, ccounter)
	runtime.KeepAlive(ccounterAllocMap)
	packSTpm2bEccPoint(q, cq)
	runtime.KeepAlive(cqAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEcEphemeral function as declared in tss2/tss2_sys.h:973
func Tss2SysEcEphemeral(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, curveid TpmiEccCurve, q *Tpm2bEccPoint, counter *Uint16, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	ccurveid, ccurveidAllocMap := (C.TPMI_ECC_CURVE)(curveid), cgoAllocsUnknown
	cq, cqAllocMap := q.PassRef()
	ccounter, ccounterAllocMap := (*C.UINT16)(unsafe.Pointer(counter)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_EC_Ephemeral(csyscontext, ccmdauthsarray, ccurveid, cq, ccounter, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccounterAllocMap)
	runtime.KeepAlive(cqAllocMap)
	runtime.KeepAlive(ccurveidAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVerifysignaturePrepare function as declared in tss2/tss2_sys.h:981
func Tss2SysVerifysignaturePrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, digest *Tpm2bDigest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cdigest, cdigestAllocMap := digest.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_VerifySignature_Prepare(csyscontext, ckeyhandle, cdigest, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cdigestAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVerifysignatureComplete function as declared in tss2/tss2_sys.h:987
func Tss2SysVerifysignatureComplete(syscontext *Tss2SysContext, validation *TpmtTkVerified) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cvalidation, cvalidationAllocMap := validation.PassRef()
	__ret := C.Tss2_Sys_VerifySignature_Complete(csyscontext, cvalidation)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVerifysignature function as declared in tss2/tss2_sys.h:991
func Tss2SysVerifysignature(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, digest *Tpm2bDigest, signature *TpmtSignature, validation *TpmtTkVerified, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cdigest, cdigestAllocMap := digest.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_VerifySignature(csyscontext, ckeyhandle, ccmdauthsarray, cdigest, csignature, cvalidation, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cdigestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSignPrepare function as declared in tss2/tss2_sys.h:1000
func Tss2SysSignPrepare(syscontext *Tss2SysContext, keyhandle TpmiDhObject, digest *Tpm2bDigest, inscheme *TpmtSigScheme, validation *TpmtTkHashcheck) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cdigest, cdigestAllocMap := digest.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	__ret := C.Tss2_Sys_Sign_Prepare(csyscontext, ckeyhandle, cdigest, cinscheme, cvalidation)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cdigestAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSignComplete function as declared in tss2/tss2_sys.h:1007
func Tss2SysSignComplete(syscontext *Tss2SysContext, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_Sign_Complete(csyscontext, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSign function as declared in tss2/tss2_sys.h:1011
func Tss2SysSign(syscontext *Tss2SysContext, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, digest *Tpm2bDigest, inscheme *TpmtSigScheme, validation *TpmtTkHashcheck, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cdigest, cdigestAllocMap := digest.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	cvalidation, cvalidationAllocMap := validation.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Sign(csyscontext, ckeyhandle, ccmdauthsarray, cdigest, cinscheme, cvalidation, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(cvalidationAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cdigestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetcommandcodeauditstatusPrepare function as declared in tss2/tss2_sys.h:1021
func Tss2SysSetcommandcodeauditstatusPrepare(syscontext *Tss2SysContext, auth TpmiRhProvision, auditalg TpmiAlgHash, setlist *TpmlCc, clearlist *TpmlCc) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	cauditalg, cauditalgAllocMap := (C.TPMI_ALG_HASH)(auditalg), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	__ret := C.Tss2_Sys_SetCommandCodeAuditStatus_Prepare(csyscontext, cauth, cauditalg, csetlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cauditalgAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetcommandcodeauditstatusComplete function as declared in tss2/tss2_sys.h:1028
func Tss2SysSetcommandcodeauditstatusComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetCommandCodeAuditStatus_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetcommandcodeauditstatus function as declared in tss2/tss2_sys.h:1031
func Tss2SysSetcommandcodeauditstatus(syscontext *Tss2SysContext, auth TpmiRhProvision, cmdauthsarray *Tss2lSysAuthCommand, auditalg TpmiAlgHash, setlist *TpmlCc, clearlist *TpmlCc, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauditalg, cauditalgAllocMap := (C.TPMI_ALG_HASH)(auditalg), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SetCommandCodeAuditStatus(csyscontext, cauth, ccmdauthsarray, cauditalg, csetlist, cclearlist, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cauditalgAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrExtendPrepare function as declared in tss2/tss2_sys.h:1040
func Tss2SysPcrExtendPrepare(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, digests []TpmlDigestValues) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	cdigests, cdigestsAllocMap := unpackArgSTpmlDigestValues(digests)
	__ret := C.Tss2_Sys_PCR_Extend_Prepare(csyscontext, cpcrhandle, cdigests)
	packSTpmlDigestValues(digests, cdigests)
	runtime.KeepAlive(cdigestsAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrExtendComplete function as declared in tss2/tss2_sys.h:1045
func Tss2SysPcrExtendComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_Extend_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrExtend function as declared in tss2/tss2_sys.h:1048
func Tss2SysPcrExtend(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, cmdauthsarray []Tss2lSysAuthCommand, digests []TpmlDigestValues, rspauthsarray []Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cdigests, cdigestsAllocMap := unpackArgSTpmlDigestValues(digests)
	crspauthsarray, crspauthsarrayAllocMap := unpackArgSTss2lSysAuthResponse(rspauthsarray)
	__ret := C.Tss2_Sys_PCR_Extend(csyscontext, cpcrhandle, ccmdauthsarray, cdigests, crspauthsarray)
	packSTss2lSysAuthResponse(rspauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	packSTpmlDigestValues(digests, cdigests)
	runtime.KeepAlive(cdigestsAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrEventPrepare function as declared in tss2/tss2_sys.h:1055
func Tss2SysPcrEventPrepare(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, eventdata *Tpm2bEvent) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	ceventdata, ceventdataAllocMap := eventdata.PassRef()
	__ret := C.Tss2_Sys_PCR_Event_Prepare(csyscontext, cpcrhandle, ceventdata)
	runtime.KeepAlive(ceventdataAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrEventComplete function as declared in tss2/tss2_sys.h:1060
func Tss2SysPcrEventComplete(syscontext *Tss2SysContext, digests *TpmlDigestValues) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cdigests, cdigestsAllocMap := digests.PassRef()
	__ret := C.Tss2_Sys_PCR_Event_Complete(csyscontext, cdigests)
	runtime.KeepAlive(cdigestsAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrEvent function as declared in tss2/tss2_sys.h:1064
func Tss2SysPcrEvent(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, cmdauthsarray *Tss2lSysAuthCommand, eventdata *Tpm2bEvent, digests *TpmlDigestValues, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ceventdata, ceventdataAllocMap := eventdata.PassRef()
	cdigests, cdigestsAllocMap := digests.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_Event(csyscontext, cpcrhandle, ccmdauthsarray, ceventdata, cdigests, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cdigestsAllocMap)
	runtime.KeepAlive(ceventdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrReadPrepare function as declared in tss2/tss2_sys.h:1072
func Tss2SysPcrReadPrepare(syscontext *Tss2SysContext, pcrselectionin *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrselectionin, cpcrselectioninAllocMap := pcrselectionin.PassRef()
	__ret := C.Tss2_Sys_PCR_Read_Prepare(csyscontext, cpcrselectionin)
	runtime.KeepAlive(cpcrselectioninAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrReadComplete function as declared in tss2/tss2_sys.h:1076
func Tss2SysPcrReadComplete(syscontext *Tss2SysContext, pcrupdatecounter *Uint32, pcrselectionout *TpmlPcrSelection, pcrvalues *TpmlDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrupdatecounter, cpcrupdatecounterAllocMap := (*C.UINT32)(unsafe.Pointer(pcrupdatecounter)), cgoAllocsUnknown
	cpcrselectionout, cpcrselectionoutAllocMap := pcrselectionout.PassRef()
	cpcrvalues, cpcrvaluesAllocMap := pcrvalues.PassRef()
	__ret := C.Tss2_Sys_PCR_Read_Complete(csyscontext, cpcrupdatecounter, cpcrselectionout, cpcrvalues)
	runtime.KeepAlive(cpcrvaluesAllocMap)
	runtime.KeepAlive(cpcrselectionoutAllocMap)
	runtime.KeepAlive(cpcrupdatecounterAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrRead function as declared in tss2/tss2_sys.h:1082
func Tss2SysPcrRead(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, pcrselectionin *TpmlPcrSelection, pcrupdatecounter *Uint32, pcrselectionout *TpmlPcrSelection, pcrvalues *TpmlDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cpcrselectionin, cpcrselectioninAllocMap := pcrselectionin.PassRef()
	cpcrupdatecounter, cpcrupdatecounterAllocMap := (*C.UINT32)(unsafe.Pointer(pcrupdatecounter)), cgoAllocsUnknown
	cpcrselectionout, cpcrselectionoutAllocMap := pcrselectionout.PassRef()
	cpcrvalues, cpcrvaluesAllocMap := pcrvalues.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_Read(csyscontext, ccmdauthsarray, cpcrselectionin, cpcrupdatecounter, cpcrselectionout, cpcrvalues, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpcrvaluesAllocMap)
	runtime.KeepAlive(cpcrselectionoutAllocMap)
	runtime.KeepAlive(cpcrupdatecounterAllocMap)
	runtime.KeepAlive(cpcrselectioninAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrAllocatePrepare function as declared in tss2/tss2_sys.h:1091
func Tss2SysPcrAllocatePrepare(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, pcrallocation *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	cpcrallocation, cpcrallocationAllocMap := pcrallocation.PassRef()
	__ret := C.Tss2_Sys_PCR_Allocate_Prepare(csyscontext, cauthhandle, cpcrallocation)
	runtime.KeepAlive(cpcrallocationAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrAllocateComplete function as declared in tss2/tss2_sys.h:1096
func Tss2SysPcrAllocateComplete(syscontext *Tss2SysContext, allocationsuccess []TpmiYesNo, maxpcr *Uint32, sizeneeded *Uint32, sizeavailable *Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	callocationsuccess, callocationsuccessAllocMap := copyPTpmiYesNoBytes((*sliceHeader)(unsafe.Pointer(&allocationsuccess)))
	cmaxpcr, cmaxpcrAllocMap := (*C.UINT32)(unsafe.Pointer(maxpcr)), cgoAllocsUnknown
	csizeneeded, csizeneededAllocMap := (*C.UINT32)(unsafe.Pointer(sizeneeded)), cgoAllocsUnknown
	csizeavailable, csizeavailableAllocMap := (*C.UINT32)(unsafe.Pointer(sizeavailable)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_Allocate_Complete(csyscontext, callocationsuccess, cmaxpcr, csizeneeded, csizeavailable)
	runtime.KeepAlive(csizeavailableAllocMap)
	runtime.KeepAlive(csizeneededAllocMap)
	runtime.KeepAlive(cmaxpcrAllocMap)
	runtime.KeepAlive(callocationsuccessAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrAllocate function as declared in tss2/tss2_sys.h:1103
func Tss2SysPcrAllocate(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, pcrallocation *TpmlPcrSelection, allocationsuccess *TpmiYesNo, maxpcr *Uint32, sizeneeded *Uint32, sizeavailable *Uint32, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cpcrallocation, cpcrallocationAllocMap := pcrallocation.PassRef()
	callocationsuccess, callocationsuccessAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(allocationsuccess)), cgoAllocsUnknown
	cmaxpcr, cmaxpcrAllocMap := (*C.UINT32)(unsafe.Pointer(maxpcr)), cgoAllocsUnknown
	csizeneeded, csizeneededAllocMap := (*C.UINT32)(unsafe.Pointer(sizeneeded)), cgoAllocsUnknown
	csizeavailable, csizeavailableAllocMap := (*C.UINT32)(unsafe.Pointer(sizeavailable)), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_Allocate(csyscontext, cauthhandle, ccmdauthsarray, cpcrallocation, callocationsuccess, cmaxpcr, csizeneeded, csizeavailable, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csizeavailableAllocMap)
	runtime.KeepAlive(csizeneededAllocMap)
	runtime.KeepAlive(cmaxpcrAllocMap)
	runtime.KeepAlive(callocationsuccessAllocMap)
	runtime.KeepAlive(cpcrallocationAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthpolicyPrepare function as declared in tss2/tss2_sys.h:1114
func Tss2SysPcrSetauthpolicyPrepare(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash, pcrnum TpmiDhPcr) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	cpcrnum, cpcrnumAllocMap := (C.TPMI_DH_PCR)(pcrnum), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_SetAuthPolicy_Prepare(csyscontext, cauthhandle, cauthpolicy, chashalg, cpcrnum)
	runtime.KeepAlive(cpcrnumAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthpolicyComplete function as declared in tss2/tss2_sys.h:1121
func Tss2SysPcrSetauthpolicyComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_SetAuthPolicy_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthpolicy function as declared in tss2/tss2_sys.h:1124
func Tss2SysPcrSetauthpolicy(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash, pcrnum TpmiDhPcr, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	cpcrnum, cpcrnumAllocMap := (C.TPMI_DH_PCR)(pcrnum), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_SetAuthPolicy(csyscontext, cauthhandle, ccmdauthsarray, cauthpolicy, chashalg, cpcrnum, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpcrnumAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthvaluePrepare function as declared in tss2/tss2_sys.h:1133
func Tss2SysPcrSetauthvaluePrepare(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, auth *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	__ret := C.Tss2_Sys_PCR_SetAuthValue_Prepare(csyscontext, cpcrhandle, cauth)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthvalueComplete function as declared in tss2/tss2_sys.h:1138
func Tss2SysPcrSetauthvalueComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_SetAuthValue_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrSetauthvalue function as declared in tss2/tss2_sys.h:1141
func Tss2SysPcrSetauthvalue(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, cmdauthsarray *Tss2lSysAuthCommand, auth *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauth, cauthAllocMap := auth.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_SetAuthValue(csyscontext, cpcrhandle, ccmdauthsarray, cauth, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrResetPrepare function as declared in tss2/tss2_sys.h:1148
func Tss2SysPcrResetPrepare(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_Reset_Prepare(csyscontext, cpcrhandle)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrResetComplete function as declared in tss2/tss2_sys.h:1152
func Tss2SysPcrResetComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PCR_Reset_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPcrReset function as declared in tss2/tss2_sys.h:1155
func Tss2SysPcrReset(syscontext *Tss2SysContext, pcrhandle TpmiDhPcr, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpcrhandle, cpcrhandleAllocMap := (C.TPMI_DH_PCR)(pcrhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PCR_Reset(csyscontext, cpcrhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpcrhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysignedPrepare function as declared in tss2/tss2_sys.h:1161
func Tss2SysPolicysignedPrepare(syscontext *Tss2SysContext, authobject TpmiDhObject, policysession TpmiShPolicy, noncetpm *Tpm2bNonce, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, expiration Int32, auth *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthobject, cauthobjectAllocMap := (C.TPMI_DH_OBJECT)(authobject), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cexpiration, cexpirationAllocMap := (C.INT32)(expiration), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	__ret := C.Tss2_Sys_PolicySigned_Prepare(csyscontext, cauthobject, cpolicysession, cnoncetpm, ccphasha, cpolicyref, cexpiration, cauth)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cexpirationAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cauthobjectAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysignedComplete function as declared in tss2/tss2_sys.h:1171
func Tss2SysPolicysignedComplete(syscontext *Tss2SysContext, timeout *Tpm2bTimeout, policyticket *TpmtTkAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	cpolicyticket, cpolicyticketAllocMap := policyticket.PassRef()
	__ret := C.Tss2_Sys_PolicySigned_Complete(csyscontext, ctimeout, cpolicyticket)
	runtime.KeepAlive(cpolicyticketAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysigned function as declared in tss2/tss2_sys.h:1176
func Tss2SysPolicysigned(syscontext *Tss2SysContext, authobject TpmiDhObject, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, noncetpm *Tpm2bNonce, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, expiration Int32, auth *TpmtSignature, timeout *Tpm2bTimeout, policyticket *TpmtTkAuth, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthobject, cauthobjectAllocMap := (C.TPMI_DH_OBJECT)(authobject), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cexpiration, cexpirationAllocMap := (C.INT32)(expiration), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	cpolicyticket, cpolicyticketAllocMap := policyticket.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicySigned(csyscontext, cauthobject, cpolicysession, ccmdauthsarray, cnoncetpm, ccphasha, cpolicyref, cexpiration, cauth, ctimeout, cpolicyticket, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpolicyticketAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cexpirationAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cauthobjectAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysecretPrepare function as declared in tss2/tss2_sys.h:1190
func Tss2SysPolicysecretPrepare(syscontext *Tss2SysContext, authhandle TpmiDhEntity, policysession TpmiShPolicy, noncetpm *Tpm2bNonce, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, expiration Int32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_DH_ENTITY)(authhandle), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cexpiration, cexpirationAllocMap := (C.INT32)(expiration), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicySecret_Prepare(csyscontext, cauthhandle, cpolicysession, cnoncetpm, ccphasha, cpolicyref, cexpiration)
	runtime.KeepAlive(cexpirationAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysecretComplete function as declared in tss2/tss2_sys.h:1199
func Tss2SysPolicysecretComplete(syscontext *Tss2SysContext, timeout []Tpm2bTimeout, policyticket *TpmtTkAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := unpackArgSTpm2bTimeout(timeout)
	cpolicyticket, cpolicyticketAllocMap := policyticket.PassRef()
	__ret := C.Tss2_Sys_PolicySecret_Complete(csyscontext, ctimeout, cpolicyticket)
	runtime.KeepAlive(cpolicyticketAllocMap)
	packSTpm2bTimeout(timeout, ctimeout)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicysecret function as declared in tss2/tss2_sys.h:1204
func Tss2SysPolicysecret(syscontext *Tss2SysContext, authhandle TpmiDhEntity, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, noncetpm *Tpm2bNonce, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, expiration Int32, timeout *Tpm2bTimeout, policyticket *TpmtTkAuth, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_DH_ENTITY)(authhandle), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnoncetpm, cnoncetpmAllocMap := noncetpm.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cexpiration, cexpirationAllocMap := (C.INT32)(expiration), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	cpolicyticket, cpolicyticketAllocMap := policyticket.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicySecret(csyscontext, cauthhandle, cpolicysession, ccmdauthsarray, cnoncetpm, ccphasha, cpolicyref, cexpiration, ctimeout, cpolicyticket, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpolicyticketAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cexpirationAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cnoncetpmAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyticketPrepare function as declared in tss2/tss2_sys.h:1217
func Tss2SysPolicyticketPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, timeout *Tpm2bTimeout, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, authname *Tpm2bName, ticket *TpmtTkAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cauthname, cauthnameAllocMap := authname.PassRef()
	cticket, cticketAllocMap := ticket.PassRef()
	__ret := C.Tss2_Sys_PolicyTicket_Prepare(csyscontext, cpolicysession, ctimeout, ccphasha, cpolicyref, cauthname, cticket)
	runtime.KeepAlive(cticketAllocMap)
	runtime.KeepAlive(cauthnameAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyticketComplete function as declared in tss2/tss2_sys.h:1226
func Tss2SysPolicyticketComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyTicket_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyticket function as declared in tss2/tss2_sys.h:1229
func Tss2SysPolicyticket(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, timeout *Tpm2bTimeout, cphasha *Tpm2bDigest, policyref *Tpm2bNonce, authname *Tpm2bName, ticket *TpmtTkAuth, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ctimeout, ctimeoutAllocMap := timeout.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	cauthname, cauthnameAllocMap := authname.PassRef()
	cticket, cticketAllocMap := ticket.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyTicket(csyscontext, cpolicysession, ccmdauthsarray, ctimeout, ccphasha, cpolicyref, cauthname, cticket, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cticketAllocMap)
	runtime.KeepAlive(cauthnameAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(ctimeoutAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyorPrepare function as declared in tss2/tss2_sys.h:1240
func Tss2SysPolicyorPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, phashlist *TpmlDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cphashlist, cphashlistAllocMap := phashlist.PassRef()
	__ret := C.Tss2_Sys_PolicyOR_Prepare(csyscontext, cpolicysession, cphashlist)
	runtime.KeepAlive(cphashlistAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyorComplete function as declared in tss2/tss2_sys.h:1245
func Tss2SysPolicyorComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyOR_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyor function as declared in tss2/tss2_sys.h:1248
func Tss2SysPolicyor(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, phashlist *TpmlDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cphashlist, cphashlistAllocMap := phashlist.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyOR(csyscontext, cpolicysession, ccmdauthsarray, cphashlist, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cphashlistAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypcrPrepare function as declared in tss2/tss2_sys.h:1255
func Tss2SysPolicypcrPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, pcrdigest *Tpm2bDigest, pcrs *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cpcrdigest, cpcrdigestAllocMap := pcrdigest.PassRef()
	cpcrs, cpcrsAllocMap := pcrs.PassRef()
	__ret := C.Tss2_Sys_PolicyPCR_Prepare(csyscontext, cpolicysession, cpcrdigest, cpcrs)
	runtime.KeepAlive(cpcrsAllocMap)
	runtime.KeepAlive(cpcrdigestAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypcrComplete function as declared in tss2/tss2_sys.h:1261
func Tss2SysPolicypcrComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyPCR_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypcr function as declared in tss2/tss2_sys.h:1264
func Tss2SysPolicypcr(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, pcrdigest *Tpm2bDigest, pcrs *TpmlPcrSelection, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cpcrdigest, cpcrdigestAllocMap := pcrdigest.PassRef()
	cpcrs, cpcrsAllocMap := pcrs.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyPCR(csyscontext, cpolicysession, ccmdauthsarray, cpcrdigest, cpcrs, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpcrsAllocMap)
	runtime.KeepAlive(cpcrdigestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicylocalityPrepare function as declared in tss2/tss2_sys.h:1272
func Tss2SysPolicylocalityPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, locality TpmaLocality) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	clocality, clocalityAllocMap := (C.TPMA_LOCALITY)(locality), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyLocality_Prepare(csyscontext, cpolicysession, clocality)
	runtime.KeepAlive(clocalityAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicylocalityComplete function as declared in tss2/tss2_sys.h:1277
func Tss2SysPolicylocalityComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyLocality_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicylocality function as declared in tss2/tss2_sys.h:1280
func Tss2SysPolicylocality(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, locality TpmaLocality, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	clocality, clocalityAllocMap := (C.TPMA_LOCALITY)(locality), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyLocality(csyscontext, cpolicysession, ccmdauthsarray, clocality, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(clocalityAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynvPrepare function as declared in tss2/tss2_sys.h:1287
func Tss2SysPolicynvPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, policysession TpmiShPolicy, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyNV_Prepare(csyscontext, cauthhandle, cnvindex, cpolicysession, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynvComplete function as declared in tss2/tss2_sys.h:1296
func Tss2SysPolicynvComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyNV_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynv function as declared in tss2/tss2_sys.h:1299
func Tss2SysPolicynv(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyNV(csyscontext, cauthhandle, cnvindex, cpolicysession, ccmdauthsarray, coperandb, coffset, coperation, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycountertimerPrepare function as declared in tss2/tss2_sys.h:1310
func Tss2SysPolicycountertimerPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyCounterTimer_Prepare(csyscontext, cpolicysession, coperandb, coffset, coperation)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycountertimerComplete function as declared in tss2/tss2_sys.h:1317
func Tss2SysPolicycountertimerComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyCounterTimer_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycountertimer function as declared in tss2/tss2_sys.h:1320
func Tss2SysPolicycountertimer(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, operandb *Tpm2bOperand, offset Uint16, operation Tpm2Eo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	coperandb, coperandbAllocMap := operandb.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	coperation, coperationAllocMap := (C.TPM2_EO)(operation), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyCounterTimer(csyscontext, cpolicysession, ccmdauthsarray, coperandb, coffset, coperation, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coperationAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(coperandbAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycommandcodePrepare function as declared in tss2/tss2_sys.h:1329
func Tss2SysPolicycommandcodePrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, code Tpm2Cc) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccode, ccodeAllocMap := (C.TPM2_CC)(code), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyCommandCode_Prepare(csyscontext, cpolicysession, ccode)
	runtime.KeepAlive(ccodeAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycommandcodeComplete function as declared in tss2/tss2_sys.h:1334
func Tss2SysPolicycommandcodeComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyCommandCode_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycommandcode function as declared in tss2/tss2_sys.h:1337
func Tss2SysPolicycommandcode(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, code Tpm2Cc, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccode, ccodeAllocMap := (C.TPM2_CC)(code), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyCommandCode(csyscontext, cpolicysession, ccmdauthsarray, ccode, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccodeAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyphysicalpresencePrepare function as declared in tss2/tss2_sys.h:1344
func Tss2SysPolicyphysicalpresencePrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyPhysicalPresence_Prepare(csyscontext, cpolicysession)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyphysicalpresenceComplete function as declared in tss2/tss2_sys.h:1348
func Tss2SysPolicyphysicalpresenceComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyPhysicalPresence_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyphysicalpresence function as declared in tss2/tss2_sys.h:1351
func Tss2SysPolicyphysicalpresence(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyPhysicalPresence(csyscontext, cpolicysession, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycphashPrepare function as declared in tss2/tss2_sys.h:1357
func Tss2SysPolicycphashPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, cphasha *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	__ret := C.Tss2_Sys_PolicyCpHash_Prepare(csyscontext, cpolicysession, ccphasha)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycphashComplete function as declared in tss2/tss2_sys.h:1362
func Tss2SysPolicycphashComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyCpHash_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicycphash function as declared in tss2/tss2_sys.h:1365
func Tss2SysPolicycphash(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, cphasha *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccphasha, ccphashaAllocMap := cphasha.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyCpHash(csyscontext, cpolicysession, ccmdauthsarray, ccphasha, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccphashaAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynamehashPrepare function as declared in tss2/tss2_sys.h:1372
func Tss2SysPolicynamehashPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, namehash *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cnamehash, cnamehashAllocMap := namehash.PassRef()
	__ret := C.Tss2_Sys_PolicyNameHash_Prepare(csyscontext, cpolicysession, cnamehash)
	runtime.KeepAlive(cnamehashAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynamehashComplete function as declared in tss2/tss2_sys.h:1377
func Tss2SysPolicynamehashComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyNameHash_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynamehash function as declared in tss2/tss2_sys.h:1380
func Tss2SysPolicynamehash(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, namehash *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnamehash, cnamehashAllocMap := namehash.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyNameHash(csyscontext, cpolicysession, ccmdauthsarray, cnamehash, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnamehashAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyduplicationselectPrepare function as declared in tss2/tss2_sys.h:1387
func Tss2SysPolicyduplicationselectPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, objectname *Tpm2bName, newparentname *Tpm2bName, includeobject TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cnewparentname, cnewparentnameAllocMap := newparentname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyDuplicationSelect_Prepare(csyscontext, cpolicysession, cobjectname, cnewparentname, cincludeobject)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cnewparentnameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyduplicationselectComplete function as declared in tss2/tss2_sys.h:1394
func Tss2SysPolicyduplicationselectComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyDuplicationSelect_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyduplicationselect function as declared in tss2/tss2_sys.h:1397
func Tss2SysPolicyduplicationselect(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, objectname *Tpm2bName, newparentname *Tpm2bName, includeobject TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cnewparentname, cnewparentnameAllocMap := newparentname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyDuplicationSelect(csyscontext, cpolicysession, ccmdauthsarray, cobjectname, cnewparentname, cincludeobject, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cnewparentnameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorizePrepare function as declared in tss2/tss2_sys.h:1406
func Tss2SysPolicyauthorizePrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, approvedpolicy *Tpm2bDigest, policyref *Tpm2bNonce, keysign *Tpm2bName, checkticket *TpmtTkVerified) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	capprovedpolicy, capprovedpolicyAllocMap := approvedpolicy.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	ckeysign, ckeysignAllocMap := keysign.PassRef()
	ccheckticket, ccheckticketAllocMap := checkticket.PassRef()
	__ret := C.Tss2_Sys_PolicyAuthorize_Prepare(csyscontext, cpolicysession, capprovedpolicy, cpolicyref, ckeysign, ccheckticket)
	runtime.KeepAlive(ccheckticketAllocMap)
	runtime.KeepAlive(ckeysignAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(capprovedpolicyAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorizeComplete function as declared in tss2/tss2_sys.h:1414
func Tss2SysPolicyauthorizeComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyAuthorize_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorize function as declared in tss2/tss2_sys.h:1417
func Tss2SysPolicyauthorize(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, approvedpolicy *Tpm2bDigest, policyref *Tpm2bNonce, keysign *Tpm2bName, checkticket *TpmtTkVerified, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	capprovedpolicy, capprovedpolicyAllocMap := approvedpolicy.PassRef()
	cpolicyref, cpolicyrefAllocMap := policyref.PassRef()
	ckeysign, ckeysignAllocMap := keysign.PassRef()
	ccheckticket, ccheckticketAllocMap := checkticket.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyAuthorize(csyscontext, cpolicysession, ccmdauthsarray, capprovedpolicy, cpolicyref, ckeysign, ccheckticket, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccheckticketAllocMap)
	runtime.KeepAlive(ckeysignAllocMap)
	runtime.KeepAlive(cpolicyrefAllocMap)
	runtime.KeepAlive(capprovedpolicyAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthvaluePrepare function as declared in tss2/tss2_sys.h:1427
func Tss2SysPolicyauthvaluePrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyAuthValue_Prepare(csyscontext, cpolicysession)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthvalueComplete function as declared in tss2/tss2_sys.h:1431
func Tss2SysPolicyauthvalueComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyAuthValue_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthvalue function as declared in tss2/tss2_sys.h:1434
func Tss2SysPolicyauthvalue(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyAuthValue(csyscontext, cpolicysession, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypasswordPrepare function as declared in tss2/tss2_sys.h:1440
func Tss2SysPolicypasswordPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyPassword_Prepare(csyscontext, cpolicysession)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypasswordComplete function as declared in tss2/tss2_sys.h:1444
func Tss2SysPolicypasswordComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyPassword_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicypassword function as declared in tss2/tss2_sys.h:1447
func Tss2SysPolicypassword(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyPassword(csyscontext, cpolicysession, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicygetdigestPrepare function as declared in tss2/tss2_sys.h:1453
func Tss2SysPolicygetdigestPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyGetDigest_Prepare(csyscontext, cpolicysession)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicygetdigestComplete function as declared in tss2/tss2_sys.h:1457
func Tss2SysPolicygetdigestComplete(syscontext *Tss2SysContext, policydigest *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicydigest, cpolicydigestAllocMap := policydigest.PassRef()
	__ret := C.Tss2_Sys_PolicyGetDigest_Complete(csyscontext, cpolicydigest)
	runtime.KeepAlive(cpolicydigestAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicygetdigest function as declared in tss2/tss2_sys.h:1461
func Tss2SysPolicygetdigest(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, policydigest *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cpolicydigest, cpolicydigestAllocMap := policydigest.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyGetDigest(csyscontext, cpolicysession, ccmdauthsarray, cpolicydigest, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpolicydigestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynvwrittenPrepare function as declared in tss2/tss2_sys.h:1468
func Tss2SysPolicynvwrittenPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, writtenset TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cwrittenset, cwrittensetAllocMap := (C.TPMI_YES_NO)(writtenset), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyNvWritten_Prepare(csyscontext, cpolicysession, cwrittenset)
	runtime.KeepAlive(cwrittensetAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynvwrittenComplete function as declared in tss2/tss2_sys.h:1473
func Tss2SysPolicynvwrittenComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyNvWritten_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicynvwritten function as declared in tss2/tss2_sys.h:1476
func Tss2SysPolicynvwritten(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, writtenset TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cwrittenset, cwrittensetAllocMap := (C.TPMI_YES_NO)(writtenset), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyNvWritten(csyscontext, cpolicysession, ccmdauthsarray, cwrittenset, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cwrittensetAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateprimaryPrepare function as declared in tss2/tss2_sys.h:1483
func Tss2SysCreateprimaryPrepare(syscontext *Tss2SysContext, primaryhandle TpmiRhHierarchy, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bPublic, outsideinfo *Tpm2bData, creationpcr *TpmlPcrSelection) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprimaryhandle, cprimaryhandleAllocMap := (C.TPMI_RH_HIERARCHY)(primaryhandle), cgoAllocsUnknown
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	coutsideinfo, coutsideinfoAllocMap := outsideinfo.PassRef()
	ccreationpcr, ccreationpcrAllocMap := creationpcr.PassRef()
	__ret := C.Tss2_Sys_CreatePrimary_Prepare(csyscontext, cprimaryhandle, cinsensitive, cinpublic, coutsideinfo, ccreationpcr)
	runtime.KeepAlive(ccreationpcrAllocMap)
	runtime.KeepAlive(coutsideinfoAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(cprimaryhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateprimaryComplete function as declared in tss2/tss2_sys.h:1491
func Tss2SysCreateprimaryComplete(syscontext *Tss2SysContext, objecthandle *Tpm2Handle, outpublic *Tpm2bPublic, creationdata *Tpm2bCreationData, creationhash *Tpm2bDigest, creationticket *TpmtTkCreation, name *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	ccreationdata, ccreationdataAllocMap := creationdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	cname, cnameAllocMap := name.PassRef()
	__ret := C.Tss2_Sys_CreatePrimary_Complete(csyscontext, cobjecthandle, coutpublic, ccreationdata, ccreationhash, ccreationticket, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(ccreationdataAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateprimary function as declared in tss2/tss2_sys.h:1500
func Tss2SysCreateprimary(syscontext *Tss2SysContext, primaryhandle TpmiRhHierarchy, cmdauthsarray *Tss2lSysAuthCommand, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bPublic, outsideinfo *Tpm2bData, creationpcr *TpmlPcrSelection, objecthandle *Tpm2Handle, outpublic *Tpm2bPublic, creationdata *Tpm2bCreationData, creationhash *Tpm2bDigest, creationticket *TpmtTkCreation, name *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cprimaryhandle, cprimaryhandleAllocMap := (C.TPMI_RH_HIERARCHY)(primaryhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	coutsideinfo, coutsideinfoAllocMap := outsideinfo.PassRef()
	ccreationpcr, ccreationpcrAllocMap := creationpcr.PassRef()
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	ccreationdata, ccreationdataAllocMap := creationdata.PassRef()
	ccreationhash, ccreationhashAllocMap := creationhash.PassRef()
	ccreationticket, ccreationticketAllocMap := creationticket.PassRef()
	cname, cnameAllocMap := name.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_CreatePrimary(csyscontext, cprimaryhandle, ccmdauthsarray, cinsensitive, cinpublic, coutsideinfo, ccreationpcr, cobjecthandle, coutpublic, ccreationdata, ccreationhash, ccreationticket, cname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(ccreationticketAllocMap)
	runtime.KeepAlive(ccreationhashAllocMap)
	runtime.KeepAlive(ccreationdataAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(ccreationpcrAllocMap)
	runtime.KeepAlive(coutsideinfoAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cprimaryhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchycontrolPrepare function as declared in tss2/tss2_sys.h:1516
func Tss2SysHierarchycontrolPrepare(syscontext *Tss2SysContext, authhandle TpmiRhHierarchy, enable TpmiRhEnables, state TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY)(authhandle), cgoAllocsUnknown
	cenable, cenableAllocMap := (C.TPMI_RH_ENABLES)(enable), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.TPMI_YES_NO)(state), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HierarchyControl_Prepare(csyscontext, cauthhandle, cenable, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cenableAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchycontrolComplete function as declared in tss2/tss2_sys.h:1522
func Tss2SysHierarchycontrolComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HierarchyControl_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchycontrol function as declared in tss2/tss2_sys.h:1525
func Tss2SysHierarchycontrol(syscontext *Tss2SysContext, authhandle TpmiRhHierarchy, cmdauthsarray *Tss2lSysAuthCommand, enable TpmiRhEnables, state TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cenable, cenableAllocMap := (C.TPMI_RH_ENABLES)(enable), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.TPMI_YES_NO)(state), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_HierarchyControl(csyscontext, cauthhandle, ccmdauthsarray, cenable, cstate, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cenableAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetprimarypolicyPrepare function as declared in tss2/tss2_sys.h:1533
func Tss2SysSetprimarypolicyPrepare(syscontext *Tss2SysContext, authhandle TpmiRhHierarchyAuth, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY_AUTH)(authhandle), cgoAllocsUnknown
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetPrimaryPolicy_Prepare(csyscontext, cauthhandle, cauthpolicy, chashalg)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetprimarypolicyComplete function as declared in tss2/tss2_sys.h:1539
func Tss2SysSetprimarypolicyComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetPrimaryPolicy_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetprimarypolicy function as declared in tss2/tss2_sys.h:1542
func Tss2SysSetprimarypolicy(syscontext *Tss2SysContext, authhandle TpmiRhHierarchyAuth, cmdauthsarray *Tss2lSysAuthCommand, authpolicy *Tpm2bDigest, hashalg TpmiAlgHash, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY_AUTH)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauthpolicy, cauthpolicyAllocMap := authpolicy.PassRef()
	chashalg, chashalgAllocMap := (C.TPMI_ALG_HASH)(hashalg), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SetPrimaryPolicy(csyscontext, cauthhandle, ccmdauthsarray, cauthpolicy, chashalg, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(chashalgAllocMap)
	runtime.KeepAlive(cauthpolicyAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangeppsPrepare function as declared in tss2/tss2_sys.h:1550
func Tss2SysChangeppsPrepare(syscontext *Tss2SysContext, authhandle TpmiRhPlatform) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ChangePPS_Prepare(csyscontext, cauthhandle)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangeppsComplete function as declared in tss2/tss2_sys.h:1554
func Tss2SysChangeppsComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ChangePPS_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangepps function as declared in tss2/tss2_sys.h:1557
func Tss2SysChangepps(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ChangePPS(csyscontext, cauthhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangeepsPrepare function as declared in tss2/tss2_sys.h:1563
func Tss2SysChangeepsPrepare(syscontext *Tss2SysContext, authhandle TpmiRhPlatform) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ChangeEPS_Prepare(csyscontext, cauthhandle)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangeepsComplete function as declared in tss2/tss2_sys.h:1567
func Tss2SysChangeepsComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ChangeEPS_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysChangeeps function as declared in tss2/tss2_sys.h:1570
func Tss2SysChangeeps(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ChangeEPS(csyscontext, cauthhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClearPrepare function as declared in tss2/tss2_sys.h:1576
func Tss2SysClearPrepare(syscontext *Tss2SysContext, authhandle TpmiRhClear) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_CLEAR)(authhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Clear_Prepare(csyscontext, cauthhandle)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClearComplete function as declared in tss2/tss2_sys.h:1580
func Tss2SysClearComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Clear_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClear function as declared in tss2/tss2_sys.h:1583
func Tss2SysClear(syscontext *Tss2SysContext, authhandle TpmiRhClear, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_CLEAR)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Clear(csyscontext, cauthhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClearcontrolPrepare function as declared in tss2/tss2_sys.h:1589
func Tss2SysClearcontrolPrepare(syscontext *Tss2SysContext, auth TpmiRhClear, disable TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_CLEAR)(auth), cgoAllocsUnknown
	cdisable, cdisableAllocMap := (C.TPMI_YES_NO)(disable), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClearControl_Prepare(csyscontext, cauth, cdisable)
	runtime.KeepAlive(cdisableAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClearcontrolComplete function as declared in tss2/tss2_sys.h:1594
func Tss2SysClearcontrolComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClearControl_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClearcontrol function as declared in tss2/tss2_sys.h:1597
func Tss2SysClearcontrol(syscontext *Tss2SysContext, auth TpmiRhClear, cmdauthsarray *Tss2lSysAuthCommand, disable TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_CLEAR)(auth), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cdisable, cdisableAllocMap := (C.TPMI_YES_NO)(disable), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ClearControl(csyscontext, cauth, ccmdauthsarray, cdisable, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cdisableAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchychangeauthPrepare function as declared in tss2/tss2_sys.h:1604
func Tss2SysHierarchychangeauthPrepare(syscontext *Tss2SysContext, authhandle TpmiRhHierarchyAuth, newauth *Tpm2bAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY_AUTH)(authhandle), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Tss2_Sys_HierarchyChangeAuth_Prepare(csyscontext, cauthhandle, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchychangeauthComplete function as declared in tss2/tss2_sys.h:1609
func Tss2SysHierarchychangeauthComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_HierarchyChangeAuth_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysHierarchychangeauth function as declared in tss2/tss2_sys.h:1612
func Tss2SysHierarchychangeauth(syscontext *Tss2SysContext, authhandle TpmiRhHierarchyAuth, cmdauthsarray *Tss2lSysAuthCommand, newauth *Tpm2bAuth, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_HIERARCHY_AUTH)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_HierarchyChangeAuth(csyscontext, cauthhandle, ccmdauthsarray, cnewauth, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattacklockresetPrepare function as declared in tss2/tss2_sys.h:1619
func Tss2SysDictionaryattacklockresetPrepare(syscontext *Tss2SysContext, lockhandle TpmiRhLockout) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.TPMI_RH_LOCKOUT)(lockhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_DictionaryAttackLockReset_Prepare(csyscontext, clockhandle)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattacklockresetComplete function as declared in tss2/tss2_sys.h:1623
func Tss2SysDictionaryattacklockresetComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_DictionaryAttackLockReset_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattacklockreset function as declared in tss2/tss2_sys.h:1626
func Tss2SysDictionaryattacklockreset(syscontext *Tss2SysContext, lockhandle TpmiRhLockout, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.TPMI_RH_LOCKOUT)(lockhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_DictionaryAttackLockReset(csyscontext, clockhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattackparametersPrepare function as declared in tss2/tss2_sys.h:1632
func Tss2SysDictionaryattackparametersPrepare(syscontext *Tss2SysContext, lockhandle TpmiRhLockout, newmaxtries Uint32, newrecoverytime Uint32, lockoutrecovery Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.TPMI_RH_LOCKOUT)(lockhandle), cgoAllocsUnknown
	cnewmaxtries, cnewmaxtriesAllocMap := (C.UINT32)(newmaxtries), cgoAllocsUnknown
	cnewrecoverytime, cnewrecoverytimeAllocMap := (C.UINT32)(newrecoverytime), cgoAllocsUnknown
	clockoutrecovery, clockoutrecoveryAllocMap := (C.UINT32)(lockoutrecovery), cgoAllocsUnknown
	__ret := C.Tss2_Sys_DictionaryAttackParameters_Prepare(csyscontext, clockhandle, cnewmaxtries, cnewrecoverytime, clockoutrecovery)
	runtime.KeepAlive(clockoutrecoveryAllocMap)
	runtime.KeepAlive(cnewrecoverytimeAllocMap)
	runtime.KeepAlive(cnewmaxtriesAllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattackparametersComplete function as declared in tss2/tss2_sys.h:1639
func Tss2SysDictionaryattackparametersComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_DictionaryAttackParameters_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysDictionaryattackparameters function as declared in tss2/tss2_sys.h:1642
func Tss2SysDictionaryattackparameters(syscontext *Tss2SysContext, lockhandle TpmiRhLockout, cmdauthsarray *Tss2lSysAuthCommand, newmaxtries Uint32, newrecoverytime Uint32, lockoutrecovery Uint32, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	clockhandle, clockhandleAllocMap := (C.TPMI_RH_LOCKOUT)(lockhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnewmaxtries, cnewmaxtriesAllocMap := (C.UINT32)(newmaxtries), cgoAllocsUnknown
	cnewrecoverytime, cnewrecoverytimeAllocMap := (C.UINT32)(newrecoverytime), cgoAllocsUnknown
	clockoutrecovery, clockoutrecoveryAllocMap := (C.UINT32)(lockoutrecovery), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_DictionaryAttackParameters(csyscontext, clockhandle, ccmdauthsarray, cnewmaxtries, cnewrecoverytime, clockoutrecovery, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(clockoutrecoveryAllocMap)
	runtime.KeepAlive(cnewrecoverytimeAllocMap)
	runtime.KeepAlive(cnewmaxtriesAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(clockhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPpCommandsPrepare function as declared in tss2/tss2_sys.h:1651
func Tss2SysPpCommandsPrepare(syscontext *Tss2SysContext, auth TpmiRhPlatform, setlist *TpmlCc, clearlist *TpmlCc) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PLATFORM)(auth), cgoAllocsUnknown
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	__ret := C.Tss2_Sys_PP_Commands_Prepare(csyscontext, cauth, csetlist, cclearlist)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPpCommandsComplete function as declared in tss2/tss2_sys.h:1657
func Tss2SysPpCommandsComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PP_Commands_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPpCommands function as declared in tss2/tss2_sys.h:1660
func Tss2SysPpCommands(syscontext *Tss2SysContext, auth TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, setlist *TpmlCc, clearlist *TpmlCc, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PLATFORM)(auth), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	csetlist, csetlistAllocMap := setlist.PassRef()
	cclearlist, cclearlistAllocMap := clearlist.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PP_Commands(csyscontext, cauth, ccmdauthsarray, csetlist, cclearlist, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cclearlistAllocMap)
	runtime.KeepAlive(csetlistAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetalgorithmsetPrepare function as declared in tss2/tss2_sys.h:1668
func Tss2SysSetalgorithmsetPrepare(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, algorithmset Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	calgorithmset, calgorithmsetAllocMap := (C.UINT32)(algorithmset), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetAlgorithmSet_Prepare(csyscontext, cauthhandle, calgorithmset)
	runtime.KeepAlive(calgorithmsetAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetalgorithmsetComplete function as declared in tss2/tss2_sys.h:1673
func Tss2SysSetalgorithmsetComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_SetAlgorithmSet_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysSetalgorithmset function as declared in tss2/tss2_sys.h:1676
func Tss2SysSetalgorithmset(syscontext *Tss2SysContext, authhandle TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, algorithmset Uint32, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PLATFORM)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	calgorithmset, calgorithmsetAllocMap := (C.UINT32)(algorithmset), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_SetAlgorithmSet(csyscontext, cauthhandle, ccmdauthsarray, calgorithmset, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(calgorithmsetAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradestartPrepare function as declared in tss2/tss2_sys.h:1683
func Tss2SysFieldupgradestartPrepare(syscontext *Tss2SysContext, authorization TpmiRhPlatform, keyhandle TpmiDhObject, fudigest *Tpm2bDigest, manifestsignature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthorization, cauthorizationAllocMap := (C.TPMI_RH_PLATFORM)(authorization), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	cfudigest, cfudigestAllocMap := fudigest.PassRef()
	cmanifestsignature, cmanifestsignatureAllocMap := manifestsignature.PassRef()
	__ret := C.Tss2_Sys_FieldUpgradeStart_Prepare(csyscontext, cauthorization, ckeyhandle, cfudigest, cmanifestsignature)
	runtime.KeepAlive(cmanifestsignatureAllocMap)
	runtime.KeepAlive(cfudigestAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cauthorizationAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradestartComplete function as declared in tss2/tss2_sys.h:1690
func Tss2SysFieldupgradestartComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_FieldUpgradeStart_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradestart function as declared in tss2/tss2_sys.h:1693
func Tss2SysFieldupgradestart(syscontext *Tss2SysContext, authorization TpmiRhPlatform, keyhandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, fudigest *Tpm2bDigest, manifestsignature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthorization, cauthorizationAllocMap := (C.TPMI_RH_PLATFORM)(authorization), cgoAllocsUnknown
	ckeyhandle, ckeyhandleAllocMap := (C.TPMI_DH_OBJECT)(keyhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cfudigest, cfudigestAllocMap := fudigest.PassRef()
	cmanifestsignature, cmanifestsignatureAllocMap := manifestsignature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_FieldUpgradeStart(csyscontext, cauthorization, ckeyhandle, ccmdauthsarray, cfudigest, cmanifestsignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cmanifestsignatureAllocMap)
	runtime.KeepAlive(cfudigestAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(ckeyhandleAllocMap)
	runtime.KeepAlive(cauthorizationAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradedataPrepare function as declared in tss2/tss2_sys.h:1702
func Tss2SysFieldupgradedataPrepare(syscontext *Tss2SysContext, fudata []Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cfudata, cfudataAllocMap := unpackArgSTpm2bMaxBuffer(fudata)
	__ret := C.Tss2_Sys_FieldUpgradeData_Prepare(csyscontext, cfudata)
	packSTpm2bMaxBuffer(fudata, cfudata)
	runtime.KeepAlive(cfudataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradedataComplete function as declared in tss2/tss2_sys.h:1706
func Tss2SysFieldupgradedataComplete(syscontext *Tss2SysContext, nextdigest []TpmtHa, firstdigest *TpmtHa) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnextdigest, cnextdigestAllocMap := unpackArgSTpmtHa(nextdigest)
	cfirstdigest, cfirstdigestAllocMap := firstdigest.PassRef()
	__ret := C.Tss2_Sys_FieldUpgradeData_Complete(csyscontext, cnextdigest, cfirstdigest)
	runtime.KeepAlive(cfirstdigestAllocMap)
	packSTpmtHa(nextdigest, cnextdigest)
	runtime.KeepAlive(cnextdigestAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFieldupgradedata function as declared in tss2/tss2_sys.h:1711
func Tss2SysFieldupgradedata(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, fudata *Tpm2bMaxBuffer, nextdigest *TpmtHa, firstdigest *TpmtHa, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cfudata, cfudataAllocMap := fudata.PassRef()
	cnextdigest, cnextdigestAllocMap := nextdigest.PassRef()
	cfirstdigest, cfirstdigestAllocMap := firstdigest.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_FieldUpgradeData(csyscontext, ccmdauthsarray, cfudata, cnextdigest, cfirstdigest, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cfirstdigestAllocMap)
	runtime.KeepAlive(cnextdigestAllocMap)
	runtime.KeepAlive(cfudataAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFirmwarereadPrepare function as declared in tss2/tss2_sys.h:1719
func Tss2SysFirmwarereadPrepare(syscontext *Tss2SysContext, sequencenumber Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csequencenumber, csequencenumberAllocMap := (C.UINT32)(sequencenumber), cgoAllocsUnknown
	__ret := C.Tss2_Sys_FirmwareRead_Prepare(csyscontext, csequencenumber)
	runtime.KeepAlive(csequencenumberAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFirmwarereadComplete function as declared in tss2/tss2_sys.h:1723
func Tss2SysFirmwarereadComplete(syscontext *Tss2SysContext, fudata *Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cfudata, cfudataAllocMap := fudata.PassRef()
	__ret := C.Tss2_Sys_FirmwareRead_Complete(csyscontext, cfudata)
	runtime.KeepAlive(cfudataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFirmwareread function as declared in tss2/tss2_sys.h:1727
func Tss2SysFirmwareread(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, sequencenumber Uint32, fudata *Tpm2bMaxBuffer, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	csequencenumber, csequencenumberAllocMap := (C.UINT32)(sequencenumber), cgoAllocsUnknown
	cfudata, cfudataAllocMap := fudata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_FirmwareRead(csyscontext, ccmdauthsarray, csequencenumber, cfudata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cfudataAllocMap)
	runtime.KeepAlive(csequencenumberAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextsavePrepare function as declared in tss2/tss2_sys.h:1734
func Tss2SysContextsavePrepare(syscontext *Tss2SysContext, savehandle TpmiDhContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csavehandle, csavehandleAllocMap := (C.TPMI_DH_CONTEXT)(savehandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ContextSave_Prepare(csyscontext, csavehandle)
	runtime.KeepAlive(csavehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextsaveComplete function as declared in tss2/tss2_sys.h:1738
func Tss2SysContextsaveComplete(syscontext *Tss2SysContext, context []TpmsContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccontext, ccontextAllocMap := unpackArgSTpmsContext(context)
	__ret := C.Tss2_Sys_ContextSave_Complete(csyscontext, ccontext)
	packSTpmsContext(context, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextsave function as declared in tss2/tss2_sys.h:1742
func Tss2SysContextsave(syscontext *Tss2SysContext, savehandle TpmiDhContext, context *TpmsContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csavehandle, csavehandleAllocMap := (C.TPMI_DH_CONTEXT)(savehandle), cgoAllocsUnknown
	ccontext, ccontextAllocMap := context.PassRef()
	__ret := C.Tss2_Sys_ContextSave(csyscontext, csavehandle, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(csavehandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextloadPrepare function as declared in tss2/tss2_sys.h:1747
func Tss2SysContextloadPrepare(syscontext *Tss2SysContext, context *TpmsContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccontext, ccontextAllocMap := context.PassRef()
	__ret := C.Tss2_Sys_ContextLoad_Prepare(csyscontext, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextloadComplete function as declared in tss2/tss2_sys.h:1751
func Tss2SysContextloadComplete(syscontext *Tss2SysContext, loadedhandle *TpmiDhContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cloadedhandle, cloadedhandleAllocMap := (*C.TPMI_DH_CONTEXT)(unsafe.Pointer(loadedhandle)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ContextLoad_Complete(csyscontext, cloadedhandle)
	runtime.KeepAlive(cloadedhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysContextload function as declared in tss2/tss2_sys.h:1755
func Tss2SysContextload(syscontext *Tss2SysContext, context *TpmsContext, loadedhandle *TpmiDhContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccontext, ccontextAllocMap := context.PassRef()
	cloadedhandle, cloadedhandleAllocMap := (*C.TPMI_DH_CONTEXT)(unsafe.Pointer(loadedhandle)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ContextLoad(csyscontext, ccontext, cloadedhandle)
	runtime.KeepAlive(cloadedhandleAllocMap)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFlushcontextPrepare function as declared in tss2/tss2_sys.h:1760
func Tss2SysFlushcontextPrepare(syscontext *Tss2SysContext, flushhandle TpmiDhContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cflushhandle, cflushhandleAllocMap := (C.TPMI_DH_CONTEXT)(flushhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_FlushContext_Prepare(csyscontext, cflushhandle)
	runtime.KeepAlive(cflushhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFlushcontextComplete function as declared in tss2/tss2_sys.h:1764
func Tss2SysFlushcontextComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_FlushContext_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysFlushcontext function as declared in tss2/tss2_sys.h:1767
func Tss2SysFlushcontext(syscontext *Tss2SysContext, flushhandle TpmiDhContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cflushhandle, cflushhandleAllocMap := (C.TPMI_DH_CONTEXT)(flushhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_FlushContext(csyscontext, cflushhandle)
	runtime.KeepAlive(cflushhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEvictcontrolPrepare function as declared in tss2/tss2_sys.h:1771
func Tss2SysEvictcontrolPrepare(syscontext *Tss2SysContext, auth TpmiRhProvision, objecthandle TpmiDhObject, persistenthandle TpmiDhPersistent) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	cpersistenthandle, cpersistenthandleAllocMap := (C.TPMI_DH_PERSISTENT)(persistenthandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_EvictControl_Prepare(csyscontext, cauth, cobjecthandle, cpersistenthandle)
	runtime.KeepAlive(cpersistenthandleAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEvictcontrolComplete function as declared in tss2/tss2_sys.h:1777
func Tss2SysEvictcontrolComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_EvictControl_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysEvictcontrol function as declared in tss2/tss2_sys.h:1780
func Tss2SysEvictcontrol(syscontext *Tss2SysContext, auth TpmiRhProvision, objecthandle TpmiDhObject, cmdauthsarray *Tss2lSysAuthCommand, persistenthandle TpmiDhPersistent, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (C.TPMI_DH_OBJECT)(objecthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cpersistenthandle, cpersistenthandleAllocMap := (C.TPMI_DH_PERSISTENT)(persistenthandle), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_EvictControl(csyscontext, cauth, cobjecthandle, ccmdauthsarray, cpersistenthandle, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpersistenthandleAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadclockPrepare function as declared in tss2/tss2_sys.h:1788
func Tss2SysReadclockPrepare(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ReadClock_Prepare(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadclockComplete function as declared in tss2/tss2_sys.h:1791
func Tss2SysReadclockComplete(syscontext *Tss2SysContext, currenttime *TpmsTimeInfo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccurrenttime, ccurrenttimeAllocMap := currenttime.PassRef()
	__ret := C.Tss2_Sys_ReadClock_Complete(csyscontext, ccurrenttime)
	runtime.KeepAlive(ccurrenttimeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysReadclock function as declared in tss2/tss2_sys.h:1795
func Tss2SysReadclock(syscontext *Tss2SysContext, currenttime *TpmsTimeInfo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccurrenttime, ccurrenttimeAllocMap := currenttime.PassRef()
	__ret := C.Tss2_Sys_ReadClock(csyscontext, ccurrenttime)
	runtime.KeepAlive(ccurrenttimeAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClocksetPrepare function as declared in tss2/tss2_sys.h:1799
func Tss2SysClocksetPrepare(syscontext *Tss2SysContext, auth TpmiRhProvision, newtime Uint64) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	cnewtime, cnewtimeAllocMap := (C.UINT64)(newtime), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClockSet_Prepare(csyscontext, cauth, cnewtime)
	runtime.KeepAlive(cnewtimeAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClocksetComplete function as declared in tss2/tss2_sys.h:1804
func Tss2SysClocksetComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClockSet_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClockset function as declared in tss2/tss2_sys.h:1807
func Tss2SysClockset(syscontext *Tss2SysContext, auth TpmiRhProvision, cmdauthsarray *Tss2lSysAuthCommand, newtime Uint64, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnewtime, cnewtimeAllocMap := (C.UINT64)(newtime), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ClockSet(csyscontext, cauth, ccmdauthsarray, cnewtime, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnewtimeAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClockrateadjustPrepare function as declared in tss2/tss2_sys.h:1814
func Tss2SysClockrateadjustPrepare(syscontext *Tss2SysContext, auth TpmiRhProvision, rateadjust Tpm2ClockAdjust) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	crateadjust, crateadjustAllocMap := (C.TPM2_CLOCK_ADJUST)(rateadjust), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClockRateAdjust_Prepare(csyscontext, cauth, crateadjust)
	runtime.KeepAlive(crateadjustAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClockrateadjustComplete function as declared in tss2/tss2_sys.h:1819
func Tss2SysClockrateadjustComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_ClockRateAdjust_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysClockrateadjust function as declared in tss2/tss2_sys.h:1822
func Tss2SysClockrateadjust(syscontext *Tss2SysContext, auth TpmiRhProvision, cmdauthsarray *Tss2lSysAuthCommand, rateadjust Tpm2ClockAdjust, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauth, cauthAllocMap := (C.TPMI_RH_PROVISION)(auth), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crateadjust, crateadjustAllocMap := (C.TPM2_CLOCK_ADJUST)(rateadjust), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_ClockRateAdjust(csyscontext, cauth, ccmdauthsarray, crateadjust, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(crateadjustAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcapabilityPrepare function as declared in tss2/tss2_sys.h:1829
func Tss2SysGetcapabilityPrepare(syscontext *Tss2SysContext, capability Tpm2Cap, property Uint32, propertycount Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccapability, ccapabilityAllocMap := (C.TPM2_CAP)(capability), cgoAllocsUnknown
	cproperty, cpropertyAllocMap := (C.UINT32)(property), cgoAllocsUnknown
	cpropertycount, cpropertycountAllocMap := (C.UINT32)(propertycount), cgoAllocsUnknown
	__ret := C.Tss2_Sys_GetCapability_Prepare(csyscontext, ccapability, cproperty, cpropertycount)
	runtime.KeepAlive(cpropertycountAllocMap)
	runtime.KeepAlive(cpropertyAllocMap)
	runtime.KeepAlive(ccapabilityAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcapabilityComplete function as declared in tss2/tss2_sys.h:1835
func Tss2SysGetcapabilityComplete(syscontext *Tss2SysContext, moredata *TpmiYesNo, capabilitydata *TpmsCapabilityData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cmoredata, cmoredataAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(moredata)), cgoAllocsUnknown
	ccapabilitydata, ccapabilitydataAllocMap := capabilitydata.PassRef()
	__ret := C.Tss2_Sys_GetCapability_Complete(csyscontext, cmoredata, ccapabilitydata)
	runtime.KeepAlive(ccapabilitydataAllocMap)
	runtime.KeepAlive(cmoredataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysGetcapability function as declared in tss2/tss2_sys.h:1840
func Tss2SysGetcapability(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, capability Tpm2Cap, property Uint32, propertycount Uint32, moredata *TpmiYesNo, capabilitydata *TpmsCapabilityData, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccapability, ccapabilityAllocMap := (C.TPM2_CAP)(capability), cgoAllocsUnknown
	cproperty, cpropertyAllocMap := (C.UINT32)(property), cgoAllocsUnknown
	cpropertycount, cpropertycountAllocMap := (C.UINT32)(propertycount), cgoAllocsUnknown
	cmoredata, cmoredataAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(moredata)), cgoAllocsUnknown
	ccapabilitydata, ccapabilitydataAllocMap := capabilitydata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_GetCapability(csyscontext, ccmdauthsarray, ccapability, cproperty, cpropertycount, cmoredata, ccapabilitydata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccapabilitydataAllocMap)
	runtime.KeepAlive(cmoredataAllocMap)
	runtime.KeepAlive(cpropertycountAllocMap)
	runtime.KeepAlive(cpropertyAllocMap)
	runtime.KeepAlive(ccapabilityAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysTestparmsPrepare function as declared in tss2/tss2_sys.h:1850
func Tss2SysTestparmsPrepare(syscontext *Tss2SysContext, parameters []TpmtPublicParms) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparameters, cparametersAllocMap := unpackArgSTpmtPublicParms(parameters)
	__ret := C.Tss2_Sys_TestParms_Prepare(csyscontext, cparameters)
	packSTpmtPublicParms(parameters, cparameters)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysTestparmsComplete function as declared in tss2/tss2_sys.h:1854
func Tss2SysTestparmsComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_TestParms_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysTestparms function as declared in tss2/tss2_sys.h:1857
func Tss2SysTestparms(syscontext *Tss2SysContext, cmdauthsarray *Tss2lSysAuthCommand, parameters *TpmtPublicParms, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cparameters, cparametersAllocMap := parameters.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_TestParms(csyscontext, ccmdauthsarray, cparameters, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cparametersAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvDefinespacePrepare function as declared in tss2/tss2_sys.h:1863
func Tss2SysNvDefinespacePrepare(syscontext *Tss2SysContext, authhandle TpmiRhProvision, auth *Tpm2bAuth, publicinfo *Tpm2bNvPublic) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	cauth, cauthAllocMap := auth.PassRef()
	cpublicinfo, cpublicinfoAllocMap := publicinfo.PassRef()
	__ret := C.Tss2_Sys_NV_DefineSpace_Prepare(csyscontext, cauthhandle, cauth, cpublicinfo)
	runtime.KeepAlive(cpublicinfoAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvDefinespaceComplete function as declared in tss2/tss2_sys.h:1869
func Tss2SysNvDefinespaceComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_DefineSpace_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvDefinespace function as declared in tss2/tss2_sys.h:1872
func Tss2SysNvDefinespace(syscontext *Tss2SysContext, authhandle TpmiRhProvision, cmdauthsarray *Tss2lSysAuthCommand, auth *Tpm2bAuth, publicinfo *Tpm2bNvPublic, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cauth, cauthAllocMap := auth.PassRef()
	cpublicinfo, cpublicinfoAllocMap := publicinfo.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_DefineSpace(csyscontext, cauthhandle, ccmdauthsarray, cauth, cpublicinfo, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cpublicinfoAllocMap)
	runtime.KeepAlive(cauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespacePrepare function as declared in tss2/tss2_sys.h:1880
func Tss2SysNvUndefinespacePrepare(syscontext *Tss2SysContext, authhandle TpmiRhProvision, nvindex TpmiRhNvIndex) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_UndefineSpace_Prepare(csyscontext, cauthhandle, cnvindex)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespaceComplete function as declared in tss2/tss2_sys.h:1885
func Tss2SysNvUndefinespaceComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_UndefineSpace_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespace function as declared in tss2/tss2_sys.h:1888
func Tss2SysNvUndefinespace(syscontext *Tss2SysContext, authhandle TpmiRhProvision, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_UndefineSpace(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespacespecialPrepare function as declared in tss2/tss2_sys.h:1895
func Tss2SysNvUndefinespacespecialPrepare(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex, platform TpmiRhPlatform) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cplatform, cplatformAllocMap := (C.TPMI_RH_PLATFORM)(platform), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_UndefineSpaceSpecial_Prepare(csyscontext, cnvindex, cplatform)
	runtime.KeepAlive(cplatformAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespacespecialComplete function as declared in tss2/tss2_sys.h:1900
func Tss2SysNvUndefinespacespecialComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_UndefineSpaceSpecial_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvUndefinespacespecial function as declared in tss2/tss2_sys.h:1903
func Tss2SysNvUndefinespacespecial(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex, platform TpmiRhPlatform, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cplatform, cplatformAllocMap := (C.TPMI_RH_PLATFORM)(platform), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_UndefineSpaceSpecial(csyscontext, cnvindex, cplatform, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cplatformAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadpublicPrepare function as declared in tss2/tss2_sys.h:1910
func Tss2SysNvReadpublicPrepare(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_ReadPublic_Prepare(csyscontext, cnvindex)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadpublicComplete function as declared in tss2/tss2_sys.h:1914
func Tss2SysNvReadpublicComplete(syscontext *Tss2SysContext, nvpublic *Tpm2bNvPublic, nvname *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvpublic, cnvpublicAllocMap := nvpublic.PassRef()
	cnvname, cnvnameAllocMap := nvname.PassRef()
	__ret := C.Tss2_Sys_NV_ReadPublic_Complete(csyscontext, cnvpublic, cnvname)
	runtime.KeepAlive(cnvnameAllocMap)
	runtime.KeepAlive(cnvpublicAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadpublic function as declared in tss2/tss2_sys.h:1919
func Tss2SysNvReadpublic(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, nvpublic *Tpm2bNvPublic, nvname *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnvpublic, cnvpublicAllocMap := nvpublic.PassRef()
	cnvname, cnvnameAllocMap := nvname.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_ReadPublic(csyscontext, cnvindex, ccmdauthsarray, cnvpublic, cnvname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnvnameAllocMap)
	runtime.KeepAlive(cnvpublicAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWritePrepare function as declared in tss2/tss2_sys.h:1927
func Tss2SysNvWritePrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, data *Tpm2bMaxNvBuffer, offset Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cdata, cdataAllocMap := data.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Write_Prepare(csyscontext, cauthhandle, cnvindex, cdata, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWriteComplete function as declared in tss2/tss2_sys.h:1934
func Tss2SysNvWriteComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Write_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWrite function as declared in tss2/tss2_sys.h:1937
func Tss2SysNvWrite(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, data *Tpm2bMaxNvBuffer, offset Uint16, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cdata, cdataAllocMap := data.PassRef()
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_Write(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, cdata, coffset, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvIncrementPrepare function as declared in tss2/tss2_sys.h:1946
func Tss2SysNvIncrementPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Increment_Prepare(csyscontext, cauthhandle, cnvindex)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvIncrementComplete function as declared in tss2/tss2_sys.h:1951
func Tss2SysNvIncrementComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Increment_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvIncrement function as declared in tss2/tss2_sys.h:1954
func Tss2SysNvIncrement(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_Increment(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvExtendPrepare function as declared in tss2/tss2_sys.h:1961
func Tss2SysNvExtendPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, data []Tpm2bMaxNvBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cdata, cdataAllocMap := unpackArgSTpm2bMaxNvBuffer(data)
	__ret := C.Tss2_Sys_NV_Extend_Prepare(csyscontext, cauthhandle, cnvindex, cdata)
	packSTpm2bMaxNvBuffer(data, cdata)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvExtendComplete function as declared in tss2/tss2_sys.h:1967
func Tss2SysNvExtendComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Extend_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvExtend function as declared in tss2/tss2_sys.h:1970
func Tss2SysNvExtend(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray []Tss2lSysAuthCommand, data []Tpm2bMaxNvBuffer, rspauthsarray []Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cdata, cdataAllocMap := unpackArgSTpm2bMaxNvBuffer(data)
	crspauthsarray, crspauthsarrayAllocMap := unpackArgSTss2lSysAuthResponse(rspauthsarray)
	__ret := C.Tss2_Sys_NV_Extend(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, cdata, crspauthsarray)
	packSTss2lSysAuthResponse(rspauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	packSTpm2bMaxNvBuffer(data, cdata)
	runtime.KeepAlive(cdataAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvSetbitsPrepare function as declared in tss2/tss2_sys.h:1978
func Tss2SysNvSetbitsPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, bits Uint64) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cbits, cbitsAllocMap := (C.UINT64)(bits), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_SetBits_Prepare(csyscontext, cauthhandle, cnvindex, cbits)
	runtime.KeepAlive(cbitsAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvSetbitsComplete function as declared in tss2/tss2_sys.h:1984
func Tss2SysNvSetbitsComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_SetBits_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvSetbits function as declared in tss2/tss2_sys.h:1987
func Tss2SysNvSetbits(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, bits Uint64, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cbits, cbitsAllocMap := (C.UINT64)(bits), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_SetBits(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, cbits, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cbitsAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWritelockPrepare function as declared in tss2/tss2_sys.h:1995
func Tss2SysNvWritelockPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_WriteLock_Prepare(csyscontext, cauthhandle, cnvindex)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWritelockComplete function as declared in tss2/tss2_sys.h:2000
func Tss2SysNvWritelockComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_WriteLock_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvWritelock function as declared in tss2/tss2_sys.h:2003
func Tss2SysNvWritelock(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_WriteLock(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvGlobalwritelockPrepare function as declared in tss2/tss2_sys.h:2010
func Tss2SysNvGlobalwritelockPrepare(syscontext *Tss2SysContext, authhandle TpmiRhProvision) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_GlobalWriteLock_Prepare(csyscontext, cauthhandle)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvGlobalwritelockComplete function as declared in tss2/tss2_sys.h:2014
func Tss2SysNvGlobalwritelockComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_GlobalWriteLock_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvGlobalwritelock function as declared in tss2/tss2_sys.h:2017
func Tss2SysNvGlobalwritelock(syscontext *Tss2SysContext, authhandle TpmiRhProvision, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_PROVISION)(authhandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_GlobalWriteLock(csyscontext, cauthhandle, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadPrepare function as declared in tss2/tss2_sys.h:2023
func Tss2SysNvReadPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, size Uint16, offset Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	csize, csizeAllocMap := (C.UINT16)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Read_Prepare(csyscontext, cauthhandle, cnvindex, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadComplete function as declared in tss2/tss2_sys.h:2030
func Tss2SysNvReadComplete(syscontext *Tss2SysContext, data *Tpm2bMaxNvBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cdata, cdataAllocMap := data.PassRef()
	__ret := C.Tss2_Sys_NV_Read_Complete(csyscontext, cdata)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvRead function as declared in tss2/tss2_sys.h:2034
func Tss2SysNvRead(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, size Uint16, offset Uint16, data *Tpm2bMaxNvBuffer, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	csize, csizeAllocMap := (C.UINT16)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	cdata, cdataAllocMap := data.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_Read(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, csize, coffset, cdata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadlockPrepare function as declared in tss2/tss2_sys.h:2044
func Tss2SysNvReadlockPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_ReadLock_Prepare(csyscontext, cauthhandle, cnvindex)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadlockComplete function as declared in tss2/tss2_sys.h:2049
func Tss2SysNvReadlockComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_ReadLock_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvReadlock function as declared in tss2/tss2_sys.h:2052
func Tss2SysNvReadlock(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_ReadLock(csyscontext, cauthhandle, cnvindex, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvChangeauthPrepare function as declared in tss2/tss2_sys.h:2059
func Tss2SysNvChangeauthPrepare(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex, newauth *Tpm2bAuth) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	__ret := C.Tss2_Sys_NV_ChangeAuth_Prepare(csyscontext, cnvindex, cnewauth)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvChangeauthComplete function as declared in tss2/tss2_sys.h:2064
func Tss2SysNvChangeauthComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_ChangeAuth_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvChangeauth function as declared in tss2/tss2_sys.h:2067
func Tss2SysNvChangeauth(syscontext *Tss2SysContext, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, newauth *Tpm2bAuth, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cnewauth, cnewauthAllocMap := newauth.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_ChangeAuth(csyscontext, cnvindex, ccmdauthsarray, cnewauth, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnewauthAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvCertifyPrepare function as declared in tss2/tss2_sys.h:2074
func Tss2SysNvCertifyPrepare(syscontext *Tss2SysContext, signhandle TpmiDhObject, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, size Uint16, offset Uint16) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	csize, csizeAllocMap := (C.UINT16)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	__ret := C.Tss2_Sys_NV_Certify_Prepare(csyscontext, csignhandle, cauthhandle, cnvindex, cqualifyingdata, cinscheme, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvCertifyComplete function as declared in tss2/tss2_sys.h:2084
func Tss2SysNvCertifyComplete(syscontext *Tss2SysContext, certifyinfo *Tpm2bAttest, signature *TpmtSignature) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	__ret := C.Tss2_Sys_NV_Certify_Complete(csyscontext, ccertifyinfo, csignature)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysNvCertify function as declared in tss2/tss2_sys.h:2089
func Tss2SysNvCertify(syscontext *Tss2SysContext, signhandle TpmiDhObject, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, cmdauthsarray *Tss2lSysAuthCommand, qualifyingdata *Tpm2bData, inscheme *TpmtSigScheme, size Uint16, offset Uint16, certifyinfo *Tpm2bAttest, signature *TpmtSignature, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csignhandle, csignhandleAllocMap := (C.TPMI_DH_OBJECT)(signhandle), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cqualifyingdata, cqualifyingdataAllocMap := qualifyingdata.PassRef()
	cinscheme, cinschemeAllocMap := inscheme.PassRef()
	csize, csizeAllocMap := (C.UINT16)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (C.UINT16)(offset), cgoAllocsUnknown
	ccertifyinfo, ccertifyinfoAllocMap := certifyinfo.PassRef()
	csignature, csignatureAllocMap := signature.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_NV_Certify(csyscontext, csignhandle, cauthhandle, cnvindex, ccmdauthsarray, cqualifyingdata, cinscheme, csize, coffset, ccertifyinfo, csignature, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(csignatureAllocMap)
	runtime.KeepAlive(ccertifyinfoAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cinschemeAllocMap)
	runtime.KeepAlive(cqualifyingdataAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csignhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVendorTcgTestPrepare function as declared in tss2/tss2_sys.h:2103
func Tss2SysVendorTcgTestPrepare(syscontext *Tss2SysContext, inputdata []Tpm2bData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cinputdata, cinputdataAllocMap := unpackArgSTpm2bData(inputdata)
	__ret := C.Tss2_Sys_Vendor_TCG_Test_Prepare(csyscontext, cinputdata)
	packSTpm2bData(inputdata, cinputdata)
	runtime.KeepAlive(cinputdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVendorTcgTestComplete function as declared in tss2/tss2_sys.h:2107
func Tss2SysVendorTcgTestComplete(syscontext *Tss2SysContext, outputdata []Tpm2bData) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	coutputdata, coutputdataAllocMap := unpackArgSTpm2bData(outputdata)
	__ret := C.Tss2_Sys_Vendor_TCG_Test_Complete(csyscontext, coutputdata)
	packSTpm2bData(outputdata, coutputdata)
	runtime.KeepAlive(coutputdataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysVendorTcgTest function as declared in tss2/tss2_sys.h:2111
func Tss2SysVendorTcgTest(syscontext *Tss2SysContext, cmdauthsarray []Tss2lSysAuthCommand, inputdata *Tpm2bData, outputdata *Tpm2bData, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := unpackArgSTss2lSysAuthCommand(cmdauthsarray)
	cinputdata, cinputdataAllocMap := inputdata.PassRef()
	coutputdata, coutputdataAllocMap := outputdata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Vendor_TCG_Test(csyscontext, ccmdauthsarray, cinputdata, coutputdata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(coutputdataAllocMap)
	runtime.KeepAlive(cinputdataAllocMap)
	packSTss2lSysAuthCommand(cmdauthsarray, ccmdauthsarray)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcGetcapabilityPrepare function as declared in tss2/tss2_sys.h:2118
func Tss2SysAcGetcapabilityPrepare(syscontext *Tss2SysContext, ac TpmiRhAc, capability TpmAt, count Uint32) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cac, cacAllocMap := (C.TPMI_RH_AC)(ac), cgoAllocsUnknown
	ccapability, ccapabilityAllocMap := (C.TPM_AT)(capability), cgoAllocsUnknown
	ccount, ccountAllocMap := (C.UINT32)(count), cgoAllocsUnknown
	__ret := C.Tss2_Sys_AC_GetCapability_Prepare(csyscontext, cac, ccapability, ccount)
	runtime.KeepAlive(ccountAllocMap)
	runtime.KeepAlive(ccapabilityAllocMap)
	runtime.KeepAlive(cacAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcGetcapabilityComplete function as declared in tss2/tss2_sys.h:2124
func Tss2SysAcGetcapabilityComplete(syscontext *Tss2SysContext, moredata *TpmiYesNo, capabilitydata *TpmlAcCapabilities) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cmoredata, cmoredataAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(moredata)), cgoAllocsUnknown
	ccapabilitydata, ccapabilitydataAllocMap := capabilitydata.PassRef()
	__ret := C.Tss2_Sys_AC_GetCapability_Complete(csyscontext, cmoredata, ccapabilitydata)
	runtime.KeepAlive(ccapabilitydataAllocMap)
	runtime.KeepAlive(cmoredataAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcGetcapability function as declared in tss2/tss2_sys.h:2129
func Tss2SysAcGetcapability(syscontext *Tss2SysContext, ac TpmiRhAc, cmdauthsarray *Tss2lSysAuthCommand, capability TpmAt, count Uint32, moredata *TpmiYesNo, capabilitydata *TpmlAcCapabilities, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cac, cacAllocMap := (C.TPMI_RH_AC)(ac), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ccapability, ccapabilityAllocMap := (C.TPM_AT)(capability), cgoAllocsUnknown
	ccount, ccountAllocMap := (C.UINT32)(count), cgoAllocsUnknown
	cmoredata, cmoredataAllocMap := (*C.TPMI_YES_NO)(unsafe.Pointer(moredata)), cgoAllocsUnknown
	ccapabilitydata, ccapabilitydataAllocMap := capabilitydata.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_AC_GetCapability(csyscontext, cac, ccmdauthsarray, ccapability, ccount, cmoredata, ccapabilitydata, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccapabilitydataAllocMap)
	runtime.KeepAlive(cmoredataAllocMap)
	runtime.KeepAlive(ccountAllocMap)
	runtime.KeepAlive(ccapabilityAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cacAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcSendPrepare function as declared in tss2/tss2_sys.h:2139
func Tss2SysAcSendPrepare(syscontext *Tss2SysContext, sendobject TpmiDhObject, authhandle TpmiRhNvAuth, ac TpmiRhAc, acdatain *Tpm2bMaxBuffer) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csendobject, csendobjectAllocMap := (C.TPMI_DH_OBJECT)(sendobject), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cac, cacAllocMap := (C.TPMI_RH_AC)(ac), cgoAllocsUnknown
	cacdatain, cacdatainAllocMap := acdatain.PassRef()
	__ret := C.Tss2_Sys_AC_Send_Prepare(csyscontext, csendobject, cauthhandle, cac, cacdatain)
	runtime.KeepAlive(cacdatainAllocMap)
	runtime.KeepAlive(cacAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csendobjectAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcSendComplete function as declared in tss2/tss2_sys.h:2146
func Tss2SysAcSendComplete(syscontext *Tss2SysContext, acdataout []TpmsAcOutput) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cacdataout, cacdataoutAllocMap := unpackArgSTpmsAcOutput(acdataout)
	__ret := C.Tss2_Sys_AC_Send_Complete(csyscontext, cacdataout)
	packSTpmsAcOutput(acdataout, cacdataout)
	runtime.KeepAlive(cacdataoutAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysAcSend function as declared in tss2/tss2_sys.h:2150
func Tss2SysAcSend(syscontext *Tss2SysContext, sendobject TpmiDhObject, authhandle TpmiRhNvAuth, ac TpmiRhAc, cmdauthsarray *Tss2lSysAuthCommand, acdatain *Tpm2bMaxBuffer, acdataout *TpmsAcOutput, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	csendobject, csendobjectAllocMap := (C.TPMI_DH_OBJECT)(sendobject), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cac, cacAllocMap := (C.TPMI_RH_AC)(ac), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cacdatain, cacdatainAllocMap := acdatain.PassRef()
	cacdataout, cacdataoutAllocMap := acdataout.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_AC_Send(csyscontext, csendobject, cauthhandle, cac, ccmdauthsarray, cacdatain, cacdataout, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cacdataoutAllocMap)
	runtime.KeepAlive(cacdatainAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cacAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csendobjectAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyAcSendselectPrepare function as declared in tss2/tss2_sys.h:2160
func Tss2SysPolicyAcSendselectPrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, objectname *Tpm2bName, authhandlename *Tpm2bName, acname *Tpm2bName, includeobject TpmiYesNo) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cauthhandlename, cauthhandlenameAllocMap := authhandlename.PassRef()
	cacname, cacnameAllocMap := acname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Policy_AC_SendSelect_Prepare(csyscontext, cpolicysession, cobjectname, cauthhandlename, cacname, cincludeobject)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cacnameAllocMap)
	runtime.KeepAlive(cauthhandlenameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyAcSendselectComplete function as declared in tss2/tss2_sys.h:2168
func Tss2SysPolicyAcSendselectComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_Policy_AC_SendSelect_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyAcSendselect function as declared in tss2/tss2_sys.h:2171
func Tss2SysPolicyAcSendselect(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, objectname *Tpm2bName, authhandlename *Tpm2bName, acname *Tpm2bName, includeobject TpmiYesNo, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cobjectname, cobjectnameAllocMap := objectname.PassRef()
	cauthhandlename, cauthhandlenameAllocMap := authhandlename.PassRef()
	cacname, cacnameAllocMap := acname.PassRef()
	cincludeobject, cincludeobjectAllocMap := (C.TPMI_YES_NO)(includeobject), cgoAllocsUnknown
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_Policy_AC_SendSelect(csyscontext, cpolicysession, ccmdauthsarray, cobjectname, cauthhandlename, cacname, cincludeobject, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cincludeobjectAllocMap)
	runtime.KeepAlive(cacnameAllocMap)
	runtime.KeepAlive(cauthhandlenameAllocMap)
	runtime.KeepAlive(cobjectnameAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicytemplatePrepare function as declared in tss2/tss2_sys.h:2181
func Tss2SysPolicytemplatePrepare(syscontext *Tss2SysContext, policysession TpmiShPolicy, templatehash *Tpm2bDigest) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ctemplatehash, ctemplatehashAllocMap := templatehash.PassRef()
	__ret := C.Tss2_Sys_PolicyTemplate_Prepare(csyscontext, cpolicysession, ctemplatehash)
	runtime.KeepAlive(ctemplatehashAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicytemplateComplete function as declared in tss2/tss2_sys.h:2186
func Tss2SysPolicytemplateComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyTemplate_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicytemplate function as declared in tss2/tss2_sys.h:2189
func Tss2SysPolicytemplate(syscontext *Tss2SysContext, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, templatehash *Tpm2bDigest, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	ctemplatehash, ctemplatehashAllocMap := templatehash.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyTemplate(csyscontext, cpolicysession, ccmdauthsarray, ctemplatehash, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ctemplatehashAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateloadedPrepare function as declared in tss2/tss2_sys.h:2196
func Tss2SysCreateloadedPrepare(syscontext *Tss2SysContext, parenthandle TpmiRhHierarchy, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bTemplate) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_RH_HIERARCHY)(parenthandle), cgoAllocsUnknown
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	__ret := C.Tss2_Sys_CreateLoaded_Prepare(csyscontext, cparenthandle, cinsensitive, cinpublic)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateloadedComplete function as declared in tss2/tss2_sys.h:2202
func Tss2SysCreateloadedComplete(syscontext *Tss2SysContext, objecthandle *Tpm2Handle, outprivate *Tpm2bPrivate, outpublic *Tpm2bPublic, name *Tpm2bName) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	cname, cnameAllocMap := name.PassRef()
	__ret := C.Tss2_Sys_CreateLoaded_Complete(csyscontext, cobjecthandle, coutprivate, coutpublic, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysCreateloaded function as declared in tss2/tss2_sys.h:2209
func Tss2SysCreateloaded(syscontext *Tss2SysContext, parenthandle TpmiRhHierarchy, cmdauthsarray *Tss2lSysAuthCommand, insensitive *Tpm2bSensitiveCreate, inpublic *Tpm2bTemplate, objecthandle *Tpm2Handle, outprivate *Tpm2bPrivate, outpublic *Tpm2bPublic, name *Tpm2bName, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cparenthandle, cparenthandleAllocMap := (C.TPMI_RH_HIERARCHY)(parenthandle), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	cinsensitive, cinsensitiveAllocMap := insensitive.PassRef()
	cinpublic, cinpublicAllocMap := inpublic.PassRef()
	cobjecthandle, cobjecthandleAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(objecthandle)), cgoAllocsUnknown
	coutprivate, coutprivateAllocMap := outprivate.PassRef()
	coutpublic, coutpublicAllocMap := outpublic.PassRef()
	cname, cnameAllocMap := name.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_CreateLoaded(csyscontext, cparenthandle, ccmdauthsarray, cinsensitive, cinpublic, cobjecthandle, coutprivate, coutpublic, cname, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(coutpublicAllocMap)
	runtime.KeepAlive(coutprivateAllocMap)
	runtime.KeepAlive(cobjecthandleAllocMap)
	runtime.KeepAlive(cinpublicAllocMap)
	runtime.KeepAlive(cinsensitiveAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cparenthandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorizenvPrepare function as declared in tss2/tss2_sys.h:2221
func Tss2SysPolicyauthorizenvPrepare(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, policysession TpmiShPolicy) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyAuthorizeNV_Prepare(csyscontext, cauthhandle, cnvindex, cpolicysession)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorizenvComplete function as declared in tss2/tss2_sys.h:2227
func Tss2SysPolicyauthorizenvComplete(syscontext *Tss2SysContext) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	__ret := C.Tss2_Sys_PolicyAuthorizeNV_Complete(csyscontext)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2SysPolicyauthorizenv function as declared in tss2/tss2_sys.h:2230
func Tss2SysPolicyauthorizenv(syscontext *Tss2SysContext, authhandle TpmiRhNvAuth, nvindex TpmiRhNvIndex, policysession TpmiShPolicy, cmdauthsarray *Tss2lSysAuthCommand, rspauthsarray *Tss2lSysAuthResponse) Tss2Rc {
	csyscontext, csyscontextAllocMap := (*C.TSS2_SYS_CONTEXT)(unsafe.Pointer(syscontext)), cgoAllocsUnknown
	cauthhandle, cauthhandleAllocMap := (C.TPMI_RH_NV_AUTH)(authhandle), cgoAllocsUnknown
	cnvindex, cnvindexAllocMap := (C.TPMI_RH_NV_INDEX)(nvindex), cgoAllocsUnknown
	cpolicysession, cpolicysessionAllocMap := (C.TPMI_SH_POLICY)(policysession), cgoAllocsUnknown
	ccmdauthsarray, ccmdauthsarrayAllocMap := cmdauthsarray.PassRef()
	crspauthsarray, crspauthsarrayAllocMap := rspauthsarray.PassRef()
	__ret := C.Tss2_Sys_PolicyAuthorizeNV(csyscontext, cauthhandle, cnvindex, cpolicysession, ccmdauthsarray, crspauthsarray)
	runtime.KeepAlive(crspauthsarrayAllocMap)
	runtime.KeepAlive(ccmdauthsarrayAllocMap)
	runtime.KeepAlive(cpolicysessionAllocMap)
	runtime.KeepAlive(cnvindexAllocMap)
	runtime.KeepAlive(cauthhandleAllocMap)
	runtime.KeepAlive(csyscontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuByteMarshal function as declared in tss2/tss2_mu.h:24
func Tss2MuByteMarshal(src Byte, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.BYTE)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_BYTE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuByteUnmarshal function as declared in tss2/tss2_mu.h:31
func Tss2MuByteUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Byte) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.BYTE)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_BYTE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt8Marshal function as declared in tss2/tss2_mu.h:38
func Tss2MuInt8Marshal(src Int8, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.INT8)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT8_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt8Unmarshal function as declared in tss2/tss2_mu.h:45
func Tss2MuInt8Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Int8) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.INT8)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT8_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt16Marshal function as declared in tss2/tss2_mu.h:52
func Tss2MuInt16Marshal(src Int16, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.INT16)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT16_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt16Unmarshal function as declared in tss2/tss2_mu.h:59
func Tss2MuInt16Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Int16) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.INT16)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT16_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt32Marshal function as declared in tss2/tss2_mu.h:66
func Tss2MuInt32Marshal(src Int32, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.INT32)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT32_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt32Unmarshal function as declared in tss2/tss2_mu.h:73
func Tss2MuInt32Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Int32) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.INT32)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT32_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt64Marshal function as declared in tss2/tss2_mu.h:80
func Tss2MuInt64Marshal(src Int64, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.INT64)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT64_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuInt64Unmarshal function as declared in tss2/tss2_mu.h:87
func Tss2MuInt64Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Int64) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.INT64)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_INT64_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint8Marshal function as declared in tss2/tss2_mu.h:94
func Tss2MuUint8Marshal(src Uint8, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.UINT8)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT8_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint8Unmarshal function as declared in tss2/tss2_mu.h:101
func Tss2MuUint8Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Uint8) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.UINT8)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT8_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint16Marshal function as declared in tss2/tss2_mu.h:108
func Tss2MuUint16Marshal(src Uint16, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.UINT16)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT16_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint16Unmarshal function as declared in tss2/tss2_mu.h:115
func Tss2MuUint16Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Uint16) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.UINT16)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT16_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint32Marshal function as declared in tss2/tss2_mu.h:122
func Tss2MuUint32Marshal(src Uint32, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.UINT32)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT32_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint32Unmarshal function as declared in tss2/tss2_mu.h:129
func Tss2MuUint32Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Uint32) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.UINT32)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT32_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint64Marshal function as declared in tss2/tss2_mu.h:136
func Tss2MuUint64Marshal(src Uint64, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.UINT64)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT64_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuUint64Unmarshal function as declared in tss2/tss2_mu.h:143
func Tss2MuUint64Unmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Uint64) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.UINT64)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_UINT64_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2CcMarshal function as declared in tss2/tss2_mu.h:150
func Tss2MuTpm2CcMarshal(src Tpm2Cc, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPM2_CC)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_CC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2CcUnmarshal function as declared in tss2/tss2_mu.h:157
func Tss2MuTpm2CcUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2Cc) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPM2_CC)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_CC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2StMarshal function as declared in tss2/tss2_mu.h:164
func Tss2MuTpm2StMarshal(src Tpm2St, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPM2_ST)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_ST_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2StUnmarshal function as declared in tss2/tss2_mu.h:171
func Tss2MuTpm2StUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2St) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPM2_ST)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_ST_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaAlgorithmMarshal function as declared in tss2/tss2_mu.h:178
func Tss2MuTpmaAlgorithmMarshal(src TpmaAlgorithm, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_ALGORITHM)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_ALGORITHM_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaAlgorithmUnmarshal function as declared in tss2/tss2_mu.h:185
func Tss2MuTpmaAlgorithmUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaAlgorithm) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_ALGORITHM)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_ALGORITHM_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaCcMarshal function as declared in tss2/tss2_mu.h:192
func Tss2MuTpmaCcMarshal(src TpmaCc, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_CC)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_CC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaCcUnmarshal function as declared in tss2/tss2_mu.h:199
func Tss2MuTpmaCcUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaCc) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_CC)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_CC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaLocalityMarshal function as declared in tss2/tss2_mu.h:206
func Tss2MuTpmaLocalityMarshal(src TpmaLocality, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_LOCALITY)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_LOCALITY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaLocalityUnmarshal function as declared in tss2/tss2_mu.h:213
func Tss2MuTpmaLocalityUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaLocality) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_LOCALITY)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_LOCALITY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaNvMarshal function as declared in tss2/tss2_mu.h:220
func Tss2MuTpmaNvMarshal(src TpmaNv, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_NV)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_NV_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaNvUnmarshal function as declared in tss2/tss2_mu.h:227
func Tss2MuTpmaNvUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaNv) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_NV)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_NV_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaObjectMarshal function as declared in tss2/tss2_mu.h:234
func Tss2MuTpmaObjectMarshal(src TpmaObject, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_OBJECT)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_OBJECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaObjectUnmarshal function as declared in tss2/tss2_mu.h:241
func Tss2MuTpmaObjectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaObject) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_OBJECT)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_OBJECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaPermanentMarshal function as declared in tss2/tss2_mu.h:248
func Tss2MuTpmaPermanentMarshal(src TpmaPermanent, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_PERMANENT)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_PERMANENT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaPermanentUnmarshal function as declared in tss2/tss2_mu.h:255
func Tss2MuTpmaPermanentUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaPermanent) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_PERMANENT)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_PERMANENT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaSessionMarshal function as declared in tss2/tss2_mu.h:262
func Tss2MuTpmaSessionMarshal(src TpmaSession, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_SESSION)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_SESSION_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaSessionUnmarshal function as declared in tss2/tss2_mu.h:269
func Tss2MuTpmaSessionUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaSession) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_SESSION)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_SESSION_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaStartupClearMarshal function as declared in tss2/tss2_mu.h:276
func Tss2MuTpmaStartupClearMarshal(src TpmaStartupClear, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (C.TPMA_STARTUP_CLEAR)(src), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_STARTUP_CLEAR_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmaStartupClearUnmarshal function as declared in tss2/tss2_mu.h:283
func Tss2MuTpmaStartupClearUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmaStartupClear) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMA_STARTUP_CLEAR)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMA_STARTUP_CLEAR_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bDigestMarshal function as declared in tss2/tss2_mu.h:290
func Tss2MuTpm2bDigestMarshal(src *Tpm2bDigest, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_DIGEST_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bDigestUnmarshal function as declared in tss2/tss2_mu.h:297
func Tss2MuTpm2bDigestUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bDigest) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_DIGEST_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bAttestMarshal function as declared in tss2/tss2_mu.h:304
func Tss2MuTpm2bAttestMarshal(src *Tpm2bAttest, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_ATTEST_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bAttestUnmarshal function as declared in tss2/tss2_mu.h:311
func Tss2MuTpm2bAttestUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bAttest) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_ATTEST_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNameMarshal function as declared in tss2/tss2_mu.h:318
func Tss2MuTpm2bNameMarshal(src *Tpm2bName, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_NAME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNameUnmarshal function as declared in tss2/tss2_mu.h:325
func Tss2MuTpm2bNameUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bName) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_NAME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bMaxNvBufferMarshal function as declared in tss2/tss2_mu.h:332
func Tss2MuTpm2bMaxNvBufferMarshal(src *Tpm2bMaxNvBuffer, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_MAX_NV_BUFFER_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bMaxNvBufferUnmarshal function as declared in tss2/tss2_mu.h:339
func Tss2MuTpm2bMaxNvBufferUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bMaxNvBuffer) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_MAX_NV_BUFFER_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveDataMarshal function as declared in tss2/tss2_mu.h:346
func Tss2MuTpm2bSensitiveDataMarshal(src *Tpm2bSensitiveData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveDataUnmarshal function as declared in tss2/tss2_mu.h:353
func Tss2MuTpm2bSensitiveDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bSensitiveData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEccParameterMarshal function as declared in tss2/tss2_mu.h:360
func Tss2MuTpm2bEccParameterMarshal(src *Tpm2bEccParameter, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_ECC_PARAMETER_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEccParameterUnmarshal function as declared in tss2/tss2_mu.h:367
func Tss2MuTpm2bEccParameterUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bEccParameter) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_ECC_PARAMETER_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPublicKeyRsaMarshal function as declared in tss2/tss2_mu.h:374
func Tss2MuTpm2bPublicKeyRsaMarshal(src *Tpm2bPublicKeyRsa, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_PUBLIC_KEY_RSA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPublicKeyRsaUnmarshal function as declared in tss2/tss2_mu.h:381
func Tss2MuTpm2bPublicKeyRsaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bPublicKeyRsa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_PUBLIC_KEY_RSA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPrivateKeyRsaMarshal function as declared in tss2/tss2_mu.h:388
func Tss2MuTpm2bPrivateKeyRsaMarshal(src *Tpm2bPrivateKeyRsa, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_PRIVATE_KEY_RSA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPrivateKeyRsaUnmarshal function as declared in tss2/tss2_mu.h:395
func Tss2MuTpm2bPrivateKeyRsaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bPrivateKeyRsa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_PRIVATE_KEY_RSA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPrivateMarshal function as declared in tss2/tss2_mu.h:402
func Tss2MuTpm2bPrivateMarshal(src *Tpm2bPrivate, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_PRIVATE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPrivateUnmarshal function as declared in tss2/tss2_mu.h:409
func Tss2MuTpm2bPrivateUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bPrivate) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_PRIVATE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bContextSensitiveMarshal function as declared in tss2/tss2_mu.h:416
func Tss2MuTpm2bContextSensitiveMarshal(src *Tpm2bContextSensitive, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_CONTEXT_SENSITIVE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bContextSensitiveUnmarshal function as declared in tss2/tss2_mu.h:423
func Tss2MuTpm2bContextSensitiveUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bContextSensitive) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_CONTEXT_SENSITIVE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bContextDataMarshal function as declared in tss2/tss2_mu.h:430
func Tss2MuTpm2bContextDataMarshal(src *Tpm2bContextData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_CONTEXT_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bContextDataUnmarshal function as declared in tss2/tss2_mu.h:437
func Tss2MuTpm2bContextDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bContextData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_CONTEXT_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bDataMarshal function as declared in tss2/tss2_mu.h:444
func Tss2MuTpm2bDataMarshal(src *Tpm2bData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bDataUnmarshal function as declared in tss2/tss2_mu.h:451
func Tss2MuTpm2bDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSymKeyMarshal function as declared in tss2/tss2_mu.h:458
func Tss2MuTpm2bSymKeyMarshal(src *Tpm2bSymKey, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_SYM_KEY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSymKeyUnmarshal function as declared in tss2/tss2_mu.h:465
func Tss2MuTpm2bSymKeyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bSymKey) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_SYM_KEY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEccPointMarshal function as declared in tss2/tss2_mu.h:472
func Tss2MuTpm2bEccPointMarshal(src *Tpm2bEccPoint, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_ECC_POINT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEccPointUnmarshal function as declared in tss2/tss2_mu.h:479
func Tss2MuTpm2bEccPointUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bEccPoint) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_ECC_POINT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNvPublicMarshal function as declared in tss2/tss2_mu.h:486
func Tss2MuTpm2bNvPublicMarshal(src *Tpm2bNvPublic, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_NV_PUBLIC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNvPublicUnmarshal function as declared in tss2/tss2_mu.h:493
func Tss2MuTpm2bNvPublicUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bNvPublic) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_NV_PUBLIC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveMarshal function as declared in tss2/tss2_mu.h:500
func Tss2MuTpm2bSensitiveMarshal(src *Tpm2bSensitive, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveUnmarshal function as declared in tss2/tss2_mu.h:507
func Tss2MuTpm2bSensitiveUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bSensitive) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveCreateMarshal function as declared in tss2/tss2_mu.h:514
func Tss2MuTpm2bSensitiveCreateMarshal(src *Tpm2bSensitiveCreate, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_CREATE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bSensitiveCreateUnmarshal function as declared in tss2/tss2_mu.h:521
func Tss2MuTpm2bSensitiveCreateUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bSensitiveCreate) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_SENSITIVE_CREATE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bCreationDataMarshal function as declared in tss2/tss2_mu.h:528
func Tss2MuTpm2bCreationDataMarshal(src *Tpm2bCreationData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_CREATION_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bCreationDataUnmarshal function as declared in tss2/tss2_mu.h:535
func Tss2MuTpm2bCreationDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bCreationData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_CREATION_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPublicMarshal function as declared in tss2/tss2_mu.h:542
func Tss2MuTpm2bPublicMarshal(src *Tpm2bPublic, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_PUBLIC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bPublicUnmarshal function as declared in tss2/tss2_mu.h:549
func Tss2MuTpm2bPublicUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bPublic) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_PUBLIC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEncryptedSecretMarshal function as declared in tss2/tss2_mu.h:556
func Tss2MuTpm2bEncryptedSecretMarshal(src *Tpm2bEncryptedSecret, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_ENCRYPTED_SECRET_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEncryptedSecretUnmarshal function as declared in tss2/tss2_mu.h:563
func Tss2MuTpm2bEncryptedSecretUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bEncryptedSecret) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_ENCRYPTED_SECRET_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bIdObjectMarshal function as declared in tss2/tss2_mu.h:570
func Tss2MuTpm2bIdObjectMarshal(src *Tpm2bIdObject, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_ID_OBJECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bIdObjectUnmarshal function as declared in tss2/tss2_mu.h:577
func Tss2MuTpm2bIdObjectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bIdObject) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_ID_OBJECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bIvMarshal function as declared in tss2/tss2_mu.h:584
func Tss2MuTpm2bIvMarshal(src *Tpm2bIv, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_IV_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bIvUnmarshal function as declared in tss2/tss2_mu.h:591
func Tss2MuTpm2bIvUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bIv) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_IV_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bAuthMarshal function as declared in tss2/tss2_mu.h:598
func Tss2MuTpm2bAuthMarshal(src *Tpm2bAuth, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_AUTH_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bAuthUnmarshal function as declared in tss2/tss2_mu.h:605
func Tss2MuTpm2bAuthUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bAuth) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_AUTH_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEventMarshal function as declared in tss2/tss2_mu.h:612
func Tss2MuTpm2bEventMarshal(src *Tpm2bEvent, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_EVENT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bEventUnmarshal function as declared in tss2/tss2_mu.h:619
func Tss2MuTpm2bEventUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bEvent) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_EVENT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bMaxBufferMarshal function as declared in tss2/tss2_mu.h:626
func Tss2MuTpm2bMaxBufferMarshal(src *Tpm2bMaxBuffer, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_MAX_BUFFER_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bMaxBufferUnmarshal function as declared in tss2/tss2_mu.h:633
func Tss2MuTpm2bMaxBufferUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bMaxBuffer) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_MAX_BUFFER_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNonceMarshal function as declared in tss2/tss2_mu.h:640
func Tss2MuTpm2bNonceMarshal(src *Tpm2bNonce, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_NONCE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bNonceUnmarshal function as declared in tss2/tss2_mu.h:647
func Tss2MuTpm2bNonceUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bNonce) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_NONCE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bOperandMarshal function as declared in tss2/tss2_mu.h:654
func Tss2MuTpm2bOperandMarshal(src *Tpm2bOperand, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_OPERAND_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bOperandUnmarshal function as declared in tss2/tss2_mu.h:661
func Tss2MuTpm2bOperandUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bOperand) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_OPERAND_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bTimeoutMarshal function as declared in tss2/tss2_mu.h:668
func Tss2MuTpm2bTimeoutMarshal(src *Tpm2bTimeout, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_TIMEOUT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bTimeoutUnmarshal function as declared in tss2/tss2_mu.h:675
func Tss2MuTpm2bTimeoutUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bTimeout) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_TIMEOUT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bTemplateMarshal function as declared in tss2/tss2_mu.h:682
func Tss2MuTpm2bTemplateMarshal(src *Tpm2bTemplate, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2B_TEMPLATE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2bTemplateUnmarshal function as declared in tss2/tss2_mu.h:689
func Tss2MuTpm2bTemplateUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *Tpm2bTemplate) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPM2B_TEMPLATE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsContextMarshal function as declared in tss2/tss2_mu.h:696
func Tss2MuTpmsContextMarshal(src *TpmsContext, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CONTEXT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsContextUnmarshal function as declared in tss2/tss2_mu.h:703
func Tss2MuTpmsContextUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsContext) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CONTEXT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTimeInfoMarshal function as declared in tss2/tss2_mu.h:710
func Tss2MuTpmsTimeInfoMarshal(src *TpmsTimeInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_TIME_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTimeInfoUnmarshal function as declared in tss2/tss2_mu.h:717
func Tss2MuTpmsTimeInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsTimeInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_TIME_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEccPointMarshal function as declared in tss2/tss2_mu.h:724
func Tss2MuTpmsEccPointMarshal(src *TpmsEccPoint, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ECC_POINT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEccPointUnmarshal function as declared in tss2/tss2_mu.h:731
func Tss2MuTpmsEccPointUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsEccPoint) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ECC_POINT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvPublicMarshal function as declared in tss2/tss2_mu.h:738
func Tss2MuTpmsNvPublicMarshal(src *TpmsNvPublic, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_NV_PUBLIC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvPublicUnmarshal function as declared in tss2/tss2_mu.h:745
func Tss2MuTpmsNvPublicUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsNvPublic) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_NV_PUBLIC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgPropertyMarshal function as declared in tss2/tss2_mu.h:752
func Tss2MuTpmsAlgPropertyMarshal(src *TpmsAlgProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ALG_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgPropertyUnmarshal function as declared in tss2/tss2_mu.h:759
func Tss2MuTpmsAlgPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAlgProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ALG_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgorithmDescriptionMarshal function as declared in tss2/tss2_mu.h:766
func Tss2MuTpmsAlgorithmDescriptionMarshal(src *TpmsAlgorithmDescription, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ALGORITHM_DESCRIPTION_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgorithmDescriptionUnmarshal function as declared in tss2/tss2_mu.h:773
func Tss2MuTpmsAlgorithmDescriptionUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAlgorithmDescription) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ALGORITHM_DESCRIPTION_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPropertyMarshal function as declared in tss2/tss2_mu.h:780
func Tss2MuTpmsTaggedPropertyMarshal(src *TpmsTaggedProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_TAGGED_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPropertyUnmarshal function as declared in tss2/tss2_mu.h:787
func Tss2MuTpmsTaggedPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsTaggedProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_TAGGED_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPolicyMarshal function as declared in tss2/tss2_mu.h:794
func Tss2MuTpmsTaggedPolicyMarshal(src *TpmsTaggedPolicy, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_TAGGED_POLICY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPolicyUnmarshal function as declared in tss2/tss2_mu.h:801
func Tss2MuTpmsTaggedPolicyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsTaggedPolicy) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_TAGGED_POLICY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsClockInfoMarshal function as declared in tss2/tss2_mu.h:808
func Tss2MuTpmsClockInfoMarshal(src *TpmsClockInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CLOCK_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsClockInfoUnmarshal function as declared in tss2/tss2_mu.h:815
func Tss2MuTpmsClockInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsClockInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CLOCK_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTimeAttestInfoMarshal function as declared in tss2/tss2_mu.h:822
func Tss2MuTpmsTimeAttestInfoMarshal(src *TpmsTimeAttestInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_TIME_ATTEST_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTimeAttestInfoUnmarshal function as declared in tss2/tss2_mu.h:829
func Tss2MuTpmsTimeAttestInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsTimeAttestInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_TIME_ATTEST_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCertifyInfoMarshal function as declared in tss2/tss2_mu.h:836
func Tss2MuTpmsCertifyInfoMarshal(src *TpmsCertifyInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CERTIFY_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCertifyInfoUnmarshal function as declared in tss2/tss2_mu.h:843
func Tss2MuTpmsCertifyInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsCertifyInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CERTIFY_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCommandAuditInfoMarshal function as declared in tss2/tss2_mu.h:850
func Tss2MuTpmsCommandAuditInfoMarshal(src *TpmsCommandAuditInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_COMMAND_AUDIT_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCommandAuditInfoUnmarshal function as declared in tss2/tss2_mu.h:857
func Tss2MuTpmsCommandAuditInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsCommandAuditInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_COMMAND_AUDIT_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSessionAuditInfoMarshal function as declared in tss2/tss2_mu.h:864
func Tss2MuTpmsSessionAuditInfoMarshal(src *TpmsSessionAuditInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SESSION_AUDIT_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSessionAuditInfoUnmarshal function as declared in tss2/tss2_mu.h:871
func Tss2MuTpmsSessionAuditInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSessionAuditInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SESSION_AUDIT_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCreationInfoMarshal function as declared in tss2/tss2_mu.h:878
func Tss2MuTpmsCreationInfoMarshal(src *TpmsCreationInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CREATION_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCreationInfoUnmarshal function as declared in tss2/tss2_mu.h:885
func Tss2MuTpmsCreationInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsCreationInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CREATION_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvCertifyInfoMarshal function as declared in tss2/tss2_mu.h:892
func Tss2MuTpmsNvCertifyInfoMarshal(src *TpmsNvCertifyInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_NV_CERTIFY_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvCertifyInfoUnmarshal function as declared in tss2/tss2_mu.h:899
func Tss2MuTpmsNvCertifyInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsNvCertifyInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_NV_CERTIFY_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAuthCommandMarshal function as declared in tss2/tss2_mu.h:906
func Tss2MuTpmsAuthCommandMarshal(src *TpmsAuthCommand, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_AUTH_COMMAND_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAuthCommandUnmarshal function as declared in tss2/tss2_mu.h:913
func Tss2MuTpmsAuthCommandUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAuthCommand) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_AUTH_COMMAND_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAuthResponseMarshal function as declared in tss2/tss2_mu.h:920
func Tss2MuTpmsAuthResponseMarshal(src *TpmsAuthResponse, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_AUTH_RESPONSE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAuthResponseUnmarshal function as declared in tss2/tss2_mu.h:927
func Tss2MuTpmsAuthResponseUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAuthResponse) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_AUTH_RESPONSE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSensitiveCreateMarshal function as declared in tss2/tss2_mu.h:934
func Tss2MuTpmsSensitiveCreateMarshal(src *TpmsSensitiveCreate, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SENSITIVE_CREATE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSensitiveCreateUnmarshal function as declared in tss2/tss2_mu.h:941
func Tss2MuTpmsSensitiveCreateUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSensitiveCreate) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SENSITIVE_CREATE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeHashMarshal function as declared in tss2/tss2_mu.h:948
func Tss2MuTpmsSchemeHashMarshal(src *TpmsSchemeHash, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SCHEME_HASH_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeHashUnmarshal function as declared in tss2/tss2_mu.h:955
func Tss2MuTpmsSchemeHashUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSchemeHash) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SCHEME_HASH_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeEcdaaMarshal function as declared in tss2/tss2_mu.h:962
func Tss2MuTpmsSchemeEcdaaMarshal(src *TpmsSchemeEcdaa, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SCHEME_ECDAA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeEcdaaUnmarshal function as declared in tss2/tss2_mu.h:969
func Tss2MuTpmsSchemeEcdaaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSchemeEcdaa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SCHEME_ECDAA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeXorMarshal function as declared in tss2/tss2_mu.h:976
func Tss2MuTpmsSchemeXorMarshal(src *TpmsSchemeXor, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SCHEME_XOR_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSchemeXorUnmarshal function as declared in tss2/tss2_mu.h:983
func Tss2MuTpmsSchemeXorUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSchemeXor) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SCHEME_XOR_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSignatureRsaMarshal function as declared in tss2/tss2_mu.h:990
func Tss2MuTpmsSignatureRsaMarshal(src *TpmsSignatureRsa, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SIGNATURE_RSA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSignatureRsaUnmarshal function as declared in tss2/tss2_mu.h:997
func Tss2MuTpmsSignatureRsaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSignatureRsa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SIGNATURE_RSA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSignatureEccMarshal function as declared in tss2/tss2_mu.h:1004
func Tss2MuTpmsSignatureEccMarshal(src *TpmsSignatureEcc, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SIGNATURE_ECC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSignatureEccUnmarshal function as declared in tss2/tss2_mu.h:1011
func Tss2MuTpmsSignatureEccUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSignatureEcc) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SIGNATURE_ECC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvPinCounterParametersMarshal function as declared in tss2/tss2_mu.h:1018
func Tss2MuTpmsNvPinCounterParametersMarshal(src *TpmsNvPinCounterParameters, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_NV_PIN_COUNTER_PARAMETERS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsNvPinCounterParametersUnmarshal function as declared in tss2/tss2_mu.h:1025
func Tss2MuTpmsNvPinCounterParametersUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsNvPinCounterParameters) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_NV_PIN_COUNTER_PARAMETERS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsContextDataMarshal function as declared in tss2/tss2_mu.h:1032
func Tss2MuTpmsContextDataMarshal(src *TpmsContextData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CONTEXT_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsContextDataUnmarshal function as declared in tss2/tss2_mu.h:1039
func Tss2MuTpmsContextDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsContextData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CONTEXT_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsPcrSelectMarshal function as declared in tss2/tss2_mu.h:1046
func Tss2MuTpmsPcrSelectMarshal(src *TpmsPcrSelect, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_PCR_SELECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsPcrSelectUnmarshal function as declared in tss2/tss2_mu.h:1053
func Tss2MuTpmsPcrSelectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsPcrSelect) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_PCR_SELECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsPcrSelectionMarshal function as declared in tss2/tss2_mu.h:1060
func Tss2MuTpmsPcrSelectionMarshal(src *TpmsPcrSelection, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_PCR_SELECTION_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsPcrSelectionUnmarshal function as declared in tss2/tss2_mu.h:1067
func Tss2MuTpmsPcrSelectionUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsPcrSelection) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_PCR_SELECTION_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPcrSelectMarshal function as declared in tss2/tss2_mu.h:1074
func Tss2MuTpmsTaggedPcrSelectMarshal(src *TpmsTaggedPcrSelect, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_TAGGED_PCR_SELECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsTaggedPcrSelectUnmarshal function as declared in tss2/tss2_mu.h:1081
func Tss2MuTpmsTaggedPcrSelectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsTaggedPcrSelect) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_TAGGED_PCR_SELECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsQuoteInfoMarshal function as declared in tss2/tss2_mu.h:1088
func Tss2MuTpmsQuoteInfoMarshal(src *TpmsQuoteInfo, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_QUOTE_INFO_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsQuoteInfoUnmarshal function as declared in tss2/tss2_mu.h:1095
func Tss2MuTpmsQuoteInfoUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsQuoteInfo) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_QUOTE_INFO_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCreationDataMarshal function as declared in tss2/tss2_mu.h:1102
func Tss2MuTpmsCreationDataMarshal(src *TpmsCreationData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CREATION_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCreationDataUnmarshal function as declared in tss2/tss2_mu.h:1109
func Tss2MuTpmsCreationDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsCreationData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CREATION_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEccParmsMarshal function as declared in tss2/tss2_mu.h:1116
func Tss2MuTpmsEccParmsMarshal(src *TpmsEccParms, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ECC_PARMS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEccParmsUnmarshal function as declared in tss2/tss2_mu.h:1123
func Tss2MuTpmsEccParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsEccParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ECC_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAttestMarshal function as declared in tss2/tss2_mu.h:1130
func Tss2MuTpmsAttestMarshal(src *TpmsAttest, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ATTEST_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAttestUnmarshal function as declared in tss2/tss2_mu.h:1137
func Tss2MuTpmsAttestUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAttest) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ATTEST_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgorithmDetailEccMarshal function as declared in tss2/tss2_mu.h:1144
func Tss2MuTpmsAlgorithmDetailEccMarshal(src *TpmsAlgorithmDetailEcc, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ALGORITHM_DETAIL_ECC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAlgorithmDetailEccUnmarshal function as declared in tss2/tss2_mu.h:1151
func Tss2MuTpmsAlgorithmDetailEccUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAlgorithmDetailEcc) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ALGORITHM_DETAIL_ECC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCapabilityDataMarshal function as declared in tss2/tss2_mu.h:1158
func Tss2MuTpmsCapabilityDataMarshal(src *TpmsCapabilityData, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_CAPABILITY_DATA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsCapabilityDataUnmarshal function as declared in tss2/tss2_mu.h:1165
func Tss2MuTpmsCapabilityDataUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsCapabilityData) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_CAPABILITY_DATA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsKeyedhashParmsMarshal function as declared in tss2/tss2_mu.h:1172
func Tss2MuTpmsKeyedhashParmsMarshal(src *TpmsKeyedhashParms, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_KEYEDHASH_PARMS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsKeyedhashParmsUnmarshal function as declared in tss2/tss2_mu.h:1179
func Tss2MuTpmsKeyedhashParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsKeyedhashParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_KEYEDHASH_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsRsaParmsMarshal function as declared in tss2/tss2_mu.h:1186
func Tss2MuTpmsRsaParmsMarshal(src *TpmsRsaParms, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_RSA_PARMS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsRsaParmsUnmarshal function as declared in tss2/tss2_mu.h:1193
func Tss2MuTpmsRsaParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsRsaParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_RSA_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSymcipherParmsMarshal function as declared in tss2/tss2_mu.h:1200
func Tss2MuTpmsSymcipherParmsMarshal(src *TpmsSymcipherParms, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_SYMCIPHER_PARMS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsSymcipherParmsUnmarshal function as declared in tss2/tss2_mu.h:1207
func Tss2MuTpmsSymcipherParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsSymcipherParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_SYMCIPHER_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAcOutputMarshal function as declared in tss2/tss2_mu.h:1214
func Tss2MuTpmsAcOutputMarshal(src *TpmsAcOutput, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_AC_OUTPUT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsAcOutputUnmarshal function as declared in tss2/tss2_mu.h:1221
func Tss2MuTpmsAcOutputUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsAcOutput) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_AC_OUTPUT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsIdObjectMarshal function as declared in tss2/tss2_mu.h:1228
func Tss2MuTpmsIdObjectMarshal(src *TpmsIdObject, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_ID_OBJECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsIdObjectUnmarshal function as declared in tss2/tss2_mu.h:1235
func Tss2MuTpmsIdObjectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmsIdObject) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMS_ID_OBJECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlCcMarshal function as declared in tss2/tss2_mu.h:1242
func Tss2MuTpmlCcMarshal(src *TpmlCc, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_CC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlCcUnmarshal function as declared in tss2/tss2_mu.h:1249
func Tss2MuTpmlCcUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlCc) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_CC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlCcaMarshal function as declared in tss2/tss2_mu.h:1256
func Tss2MuTpmlCcaMarshal(src *TpmlCca, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_CCA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlCcaUnmarshal function as declared in tss2/tss2_mu.h:1263
func Tss2MuTpmlCcaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlCca) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_CCA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAlgMarshal function as declared in tss2/tss2_mu.h:1270
func Tss2MuTpmlAlgMarshal(src *TpmlAlg, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPML_ALG)(unsafe.Pointer(src)), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_ALG_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAlgUnmarshal function as declared in tss2/tss2_mu.h:1277
func Tss2MuTpmlAlgUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlAlg) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPML_ALG)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_ALG_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlHandleMarshal function as declared in tss2/tss2_mu.h:1284
func Tss2MuTpmlHandleMarshal(src *TpmlHandle, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_HANDLE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlHandleUnmarshal function as declared in tss2/tss2_mu.h:1291
func Tss2MuTpmlHandleUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlHandle) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_HANDLE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlDigestMarshal function as declared in tss2/tss2_mu.h:1298
func Tss2MuTpmlDigestMarshal(src *TpmlDigest, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_DIGEST_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlDigestUnmarshal function as declared in tss2/tss2_mu.h:1305
func Tss2MuTpmlDigestUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlDigest) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_DIGEST_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlDigestValuesMarshal function as declared in tss2/tss2_mu.h:1312
func Tss2MuTpmlDigestValuesMarshal(src *TpmlDigestValues, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_DIGEST_VALUES_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlDigestValuesUnmarshal function as declared in tss2/tss2_mu.h:1319
func Tss2MuTpmlDigestValuesUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlDigestValues) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_DIGEST_VALUES_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlPcrSelectionMarshal function as declared in tss2/tss2_mu.h:1326
func Tss2MuTpmlPcrSelectionMarshal(src *TpmlPcrSelection, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_PCR_SELECTION_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlPcrSelectionUnmarshal function as declared in tss2/tss2_mu.h:1333
func Tss2MuTpmlPcrSelectionUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlPcrSelection) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_PCR_SELECTION_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAlgPropertyMarshal function as declared in tss2/tss2_mu.h:1340
func Tss2MuTpmlAlgPropertyMarshal(src *TpmlAlgProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPML_ALG_PROPERTY)(unsafe.Pointer(src)), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_ALG_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAlgPropertyUnmarshal function as declared in tss2/tss2_mu.h:1347
func Tss2MuTpmlAlgPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlAlgProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPML_ALG_PROPERTY)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_ALG_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlEccCurveMarshal function as declared in tss2/tss2_mu.h:1354
func Tss2MuTpmlEccCurveMarshal(src *TpmlEccCurve, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_ECC_CURVE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlEccCurveUnmarshal function as declared in tss2/tss2_mu.h:1361
func Tss2MuTpmlEccCurveUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlEccCurve) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_ECC_CURVE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlTaggedPcrPropertyMarshal function as declared in tss2/tss2_mu.h:1368
func Tss2MuTpmlTaggedPcrPropertyMarshal(src *TpmlTaggedPcrProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_TAGGED_PCR_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlTaggedPcrPropertyUnmarshal function as declared in tss2/tss2_mu.h:1375
func Tss2MuTpmlTaggedPcrPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlTaggedPcrProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_TAGGED_PCR_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlTaggedTpmPropertyMarshal function as declared in tss2/tss2_mu.h:1382
func Tss2MuTpmlTaggedTpmPropertyMarshal(src *TpmlTaggedTpmProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_TAGGED_TPM_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlTaggedTpmPropertyUnmarshal function as declared in tss2/tss2_mu.h:1389
func Tss2MuTpmlTaggedTpmPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlTaggedTpmProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_TAGGED_TPM_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlIntelPttPropertyMarshal function as declared in tss2/tss2_mu.h:1396
func Tss2MuTpmlIntelPttPropertyMarshal(src *TpmlIntelPttProperty, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_INTEL_PTT_PROPERTY_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlIntelPttPropertyUnmarshal function as declared in tss2/tss2_mu.h:1403
func Tss2MuTpmlIntelPttPropertyUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlIntelPttProperty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_INTEL_PTT_PROPERTY_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAcCapabilitiesMarshal function as declared in tss2/tss2_mu.h:1410
func Tss2MuTpmlAcCapabilitiesMarshal(src *TpmlAcCapabilities, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPML_AC_CAPABILITIES_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmlAcCapabilitiesUnmarshal function as declared in tss2/tss2_mu.h:1417
func Tss2MuTpmlAcCapabilitiesUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmlAcCapabilities) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPML_AC_CAPABILITIES_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuHaMarshal function as declared in tss2/tss2_mu.h:1424
func Tss2MuTpmuHaMarshal(src *TpmuHa, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_HA)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_HA_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuHaUnmarshal function as declared in tss2/tss2_mu.h:1432
func Tss2MuTpmuHaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuHa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_HA)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_HA_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuCapabilitiesMarshal function as declared in tss2/tss2_mu.h:1440
func Tss2MuTpmuCapabilitiesMarshal(src *TpmuCapabilities, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_CAPABILITIES)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_CAPABILITIES_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuCapabilitiesUnmarshal function as declared in tss2/tss2_mu.h:1448
func Tss2MuTpmuCapabilitiesUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuCapabilities) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_CAPABILITIES)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_CAPABILITIES_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuAttestMarshal function as declared in tss2/tss2_mu.h:1456
func Tss2MuTpmuAttestMarshal(src *TpmuAttest, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_ATTEST)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_ATTEST_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuAttestUnmarshal function as declared in tss2/tss2_mu.h:1464
func Tss2MuTpmuAttestUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuAttest) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_ATTEST)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_ATTEST_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSymKeyBitsMarshal function as declared in tss2/tss2_mu.h:1472
func Tss2MuTpmuSymKeyBitsMarshal(src *TpmuSymKeyBits, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SYM_KEY_BITS)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SYM_KEY_BITS_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSymKeyBitsUnmarshal function as declared in tss2/tss2_mu.h:1480
func Tss2MuTpmuSymKeyBitsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSymKeyBits) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SYM_KEY_BITS)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SYM_KEY_BITS_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSymModeMarshal function as declared in tss2/tss2_mu.h:1488
func Tss2MuTpmuSymModeMarshal(src *TpmuSymMode, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SYM_MODE)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SYM_MODE_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSymModeUnmarshal function as declared in tss2/tss2_mu.h:1496
func Tss2MuTpmuSymModeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSymMode) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SYM_MODE)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SYM_MODE_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSigSchemeMarshal function as declared in tss2/tss2_mu.h:1504
func Tss2MuTpmuSigSchemeMarshal(src *TpmuSigScheme, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SIG_SCHEME)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SIG_SCHEME_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSigSchemeUnmarshal function as declared in tss2/tss2_mu.h:1512
func Tss2MuTpmuSigSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSigScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SIG_SCHEME)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SIG_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuKdfSchemeMarshal function as declared in tss2/tss2_mu.h:1520
func Tss2MuTpmuKdfSchemeMarshal(src *TpmuKdfScheme, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_KDF_SCHEME)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_KDF_SCHEME_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuKdfSchemeUnmarshal function as declared in tss2/tss2_mu.h:1528
func Tss2MuTpmuKdfSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuKdfScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_KDF_SCHEME)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_KDF_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuAsymSchemeMarshal function as declared in tss2/tss2_mu.h:1536
func Tss2MuTpmuAsymSchemeMarshal(src *TpmuAsymScheme, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_ASYM_SCHEME)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_ASYM_SCHEME_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuAsymSchemeUnmarshal function as declared in tss2/tss2_mu.h:1544
func Tss2MuTpmuAsymSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuAsymScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_ASYM_SCHEME)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_ASYM_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSchemeKeyedhashMarshal function as declared in tss2/tss2_mu.h:1552
func Tss2MuTpmuSchemeKeyedhashMarshal(src *TpmuSchemeKeyedhash, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SCHEME_KEYEDHASH)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SCHEME_KEYEDHASH_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSchemeKeyedhashUnmarshal function as declared in tss2/tss2_mu.h:1560
func Tss2MuTpmuSchemeKeyedhashUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSchemeKeyedhash) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SCHEME_KEYEDHASH)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SCHEME_KEYEDHASH_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSignatureMarshal function as declared in tss2/tss2_mu.h:1568
func Tss2MuTpmuSignatureMarshal(src *TpmuSignature, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SIGNATURE)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SIGNATURE_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSignatureUnmarshal function as declared in tss2/tss2_mu.h:1576
func Tss2MuTpmuSignatureUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSignature) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SIGNATURE)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SIGNATURE_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSensitiveCompositeMarshal function as declared in tss2/tss2_mu.h:1584
func Tss2MuTpmuSensitiveCompositeMarshal(src *TpmuSensitiveComposite, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_SENSITIVE_COMPOSITE)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SENSITIVE_COMPOSITE_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuSensitiveCompositeUnmarshal function as declared in tss2/tss2_mu.h:1592
func Tss2MuTpmuSensitiveCompositeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuSensitiveComposite) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_SENSITIVE_COMPOSITE)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_SENSITIVE_COMPOSITE_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuPublicParmsMarshal function as declared in tss2/tss2_mu.h:1616
func Tss2MuTpmuPublicParmsMarshal(src *TpmuPublicParms, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_PUBLIC_PARMS)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_PUBLIC_PARMS_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuPublicParmsUnmarshal function as declared in tss2/tss2_mu.h:1624
func Tss2MuTpmuPublicParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuPublicParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_PUBLIC_PARMS)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_PUBLIC_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuPublicIdMarshal function as declared in tss2/tss2_mu.h:1632
func Tss2MuTpmuPublicIdMarshal(src *TpmuPublicId, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_PUBLIC_ID)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_PUBLIC_ID_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuPublicIdUnmarshal function as declared in tss2/tss2_mu.h:1640
func Tss2MuTpmuPublicIdUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuPublicId) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_PUBLIC_ID)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_PUBLIC_ID_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuNameMarshal function as declared in tss2/tss2_mu.h:1648
func Tss2MuTpmuNameMarshal(src *TpmuName, selectorValue Uint32T, buffer *Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := (*C.TPMU_NAME)(unsafe.Pointer(src)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_NAME_Marshal(csrc, cselectorValue, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmuNameUnmarshal function as declared in tss2/tss2_mu.h:1656
func Tss2MuTpmuNameUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, selectorValue Uint32T, dest *TpmuName) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cselectorValue, cselectorValueAllocMap := (C.uint32_t)(selectorValue), cgoAllocsUnknown
	cdest, cdestAllocMap := (*C.TPMU_NAME)(unsafe.Pointer(dest)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMU_NAME_Unmarshal(cbuffer, cbufferSize, coffset, cselectorValue, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(cselectorValueAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtHaMarshal function as declared in tss2/tss2_mu.h:1664
func Tss2MuTpmtHaMarshal(src *TpmtHa, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_HA_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtHaUnmarshal function as declared in tss2/tss2_mu.h:1671
func Tss2MuTpmtHaUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtHa) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_HA_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSymDefMarshal function as declared in tss2/tss2_mu.h:1678
func Tss2MuTpmtSymDefMarshal(src *TpmtSymDef, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_SYM_DEF_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSymDefUnmarshal function as declared in tss2/tss2_mu.h:1685
func Tss2MuTpmtSymDefUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtSymDef) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_SYM_DEF_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSymDefObjectMarshal function as declared in tss2/tss2_mu.h:1692
func Tss2MuTpmtSymDefObjectMarshal(src *TpmtSymDefObject, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_SYM_DEF_OBJECT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSymDefObjectUnmarshal function as declared in tss2/tss2_mu.h:1699
func Tss2MuTpmtSymDefObjectUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtSymDefObject) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_SYM_DEF_OBJECT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtKeyedhashSchemeMarshal function as declared in tss2/tss2_mu.h:1706
func Tss2MuTpmtKeyedhashSchemeMarshal(src *TpmtKeyedhashScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_KEYEDHASH_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtKeyedhashSchemeUnmarshal function as declared in tss2/tss2_mu.h:1713
func Tss2MuTpmtKeyedhashSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtKeyedhashScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_KEYEDHASH_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSigSchemeMarshal function as declared in tss2/tss2_mu.h:1720
func Tss2MuTpmtSigSchemeMarshal(src *TpmtSigScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_SIG_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSigSchemeUnmarshal function as declared in tss2/tss2_mu.h:1727
func Tss2MuTpmtSigSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtSigScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_SIG_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtKdfSchemeMarshal function as declared in tss2/tss2_mu.h:1734
func Tss2MuTpmtKdfSchemeMarshal(src *TpmtKdfScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_KDF_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtKdfSchemeUnmarshal function as declared in tss2/tss2_mu.h:1741
func Tss2MuTpmtKdfSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtKdfScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_KDF_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtAsymSchemeMarshal function as declared in tss2/tss2_mu.h:1748
func Tss2MuTpmtAsymSchemeMarshal(src *TpmtAsymScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_ASYM_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtAsymSchemeUnmarshal function as declared in tss2/tss2_mu.h:1755
func Tss2MuTpmtAsymSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtAsymScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_ASYM_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtRsaSchemeMarshal function as declared in tss2/tss2_mu.h:1762
func Tss2MuTpmtRsaSchemeMarshal(src *TpmtRsaScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_RSA_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtRsaSchemeUnmarshal function as declared in tss2/tss2_mu.h:1769
func Tss2MuTpmtRsaSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtRsaScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_RSA_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtRsaDecryptMarshal function as declared in tss2/tss2_mu.h:1776
func Tss2MuTpmtRsaDecryptMarshal(src *TpmtRsaDecrypt, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_RSA_DECRYPT_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtRsaDecryptUnmarshal function as declared in tss2/tss2_mu.h:1783
func Tss2MuTpmtRsaDecryptUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtRsaDecrypt) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_RSA_DECRYPT_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtEccSchemeMarshal function as declared in tss2/tss2_mu.h:1790
func Tss2MuTpmtEccSchemeMarshal(src *TpmtEccScheme, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_ECC_SCHEME_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtEccSchemeUnmarshal function as declared in tss2/tss2_mu.h:1797
func Tss2MuTpmtEccSchemeUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtEccScheme) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_ECC_SCHEME_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSignatureMarshal function as declared in tss2/tss2_mu.h:1804
func Tss2MuTpmtSignatureMarshal(src *TpmtSignature, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_SIGNATURE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSignatureUnmarshal function as declared in tss2/tss2_mu.h:1811
func Tss2MuTpmtSignatureUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtSignature) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_SIGNATURE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSensitiveMarshal function as declared in tss2/tss2_mu.h:1818
func Tss2MuTpmtSensitiveMarshal(src *TpmtSensitive, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_SENSITIVE_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtSensitiveUnmarshal function as declared in tss2/tss2_mu.h:1825
func Tss2MuTpmtSensitiveUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtSensitive) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_SENSITIVE_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtPublicMarshal function as declared in tss2/tss2_mu.h:1832
func Tss2MuTpmtPublicMarshal(src *TpmtPublic, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_PUBLIC_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtPublicUnmarshal function as declared in tss2/tss2_mu.h:1839
func Tss2MuTpmtPublicUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtPublic) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_PUBLIC_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtPublicParmsMarshal function as declared in tss2/tss2_mu.h:1846
func Tss2MuTpmtPublicParmsMarshal(src *TpmtPublicParms, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_PUBLIC_PARMS_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtPublicParmsUnmarshal function as declared in tss2/tss2_mu.h:1853
func Tss2MuTpmtPublicParmsUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtPublicParms) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_PUBLIC_PARMS_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkCreationMarshal function as declared in tss2/tss2_mu.h:1860
func Tss2MuTpmtTkCreationMarshal(src *TpmtTkCreation, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_TK_CREATION_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkCreationUnmarshal function as declared in tss2/tss2_mu.h:1867
func Tss2MuTpmtTkCreationUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtTkCreation) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_TK_CREATION_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkVerifiedMarshal function as declared in tss2/tss2_mu.h:1874
func Tss2MuTpmtTkVerifiedMarshal(src *TpmtTkVerified, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_TK_VERIFIED_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkVerifiedUnmarshal function as declared in tss2/tss2_mu.h:1881
func Tss2MuTpmtTkVerifiedUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtTkVerified) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_TK_VERIFIED_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkAuthMarshal function as declared in tss2/tss2_mu.h:1888
func Tss2MuTpmtTkAuthMarshal(src *TpmtTkAuth, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_TK_AUTH_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkAuthUnmarshal function as declared in tss2/tss2_mu.h:1895
func Tss2MuTpmtTkAuthUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtTkAuth) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_TK_AUTH_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkHashcheckMarshal function as declared in tss2/tss2_mu.h:1902
func Tss2MuTpmtTkHashcheckMarshal(src *TpmtTkHashcheck, buffer []Uint8T, bufferSize SizeT, offset *SizeT) Tss2Rc {
	csrc, csrcAllocMap := src.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMT_TK_HASHCHECK_Marshal(csrc, cbuffer, cbufferSize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(csrcAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmtTkHashcheckUnmarshal function as declared in tss2/tss2_mu.h:1909
func Tss2MuTpmtTkHashcheckUnmarshal(buffer *Uint8T, bufferSize SizeT, offset *SizeT, dest *TpmtTkHashcheck) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	cbufferSize, cbufferSizeAllocMap := (C.size_t)(bufferSize), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cdest, cdestAllocMap := dest.PassRef()
	__ret := C.Tss2_MU_TPMT_TK_HASHCHECK_Unmarshal(cbuffer, cbufferSize, coffset, cdest)
	runtime.KeepAlive(cdestAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(cbufferSizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2HandleMarshal function as declared in tss2/tss2_mu.h:1915
func Tss2MuTpm2HandleMarshal(in Tpm2Handle, buffer []Uint8T, size SizeT, offset *SizeT) Tss2Rc {
	cin, cinAllocMap := (C.TPM2_HANDLE)(in), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_HANDLE_Marshal(cin, cbuffer, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cinAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2HandleUnmarshal function as declared in tss2/tss2_mu.h:1922
func Tss2MuTpm2HandleUnmarshal(buffer *Uint8T, size SizeT, offset *SizeT, out *Tpm2Handle) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cout, coutAllocMap := (*C.TPM2_HANDLE)(unsafe.Pointer(out)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_HANDLE_Unmarshal(cbuffer, csize, coffset, cout)
	runtime.KeepAlive(coutAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmiAlgHashMarshal function as declared in tss2/tss2_mu.h:1929
func Tss2MuTpmiAlgHashMarshal(in TpmiAlgHash, buffer []Uint8T, size SizeT, offset *SizeT) Tss2Rc {
	cin, cinAllocMap := (C.TPMI_ALG_HASH)(in), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMI_ALG_HASH_Marshal(cin, cbuffer, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cinAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmiAlgHashUnmarshal function as declared in tss2/tss2_mu.h:1936
func Tss2MuTpmiAlgHashUnmarshal(buffer *Uint8T, size SizeT, offset *SizeT, out *TpmiAlgHash) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cout, coutAllocMap := (*C.TPMI_ALG_HASH)(unsafe.Pointer(out)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMI_ALG_HASH_Unmarshal(cbuffer, csize, coffset, cout)
	runtime.KeepAlive(coutAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2SeMarshal function as declared in tss2/tss2_mu.h:1957
func Tss2MuTpm2SeMarshal(in Tpm2Se, buffer []Uint8T, size SizeT, offset *SizeT) Tss2Rc {
	cin, cinAllocMap := (C.TPM2_SE)(in), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_SE_Marshal(cin, cbuffer, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cinAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2SeUnmarshal function as declared in tss2/tss2_mu.h:1964
func Tss2MuTpm2SeUnmarshal(buffer *Uint8T, size SizeT, offset *SizeT, out *Tpm2Se) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cout, coutAllocMap := (*C.TPM2_SE)(unsafe.Pointer(out)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_SE_Unmarshal(cbuffer, csize, coffset, cout)
	runtime.KeepAlive(coutAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2NtMarshal function as declared in tss2/tss2_mu.h:1971
func Tss2MuTpm2NtMarshal(in Tpm2Nt, buffer []Uint8T, size SizeT, offset *SizeT) Tss2Rc {
	cin, cinAllocMap := (C.TPM2_NT)(in), cgoAllocsUnknown
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_NT_Marshal(cin, cbuffer, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cinAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpm2NtUnmarshal function as declared in tss2/tss2_mu.h:1978
func Tss2MuTpm2NtUnmarshal(buffer *Uint8T, size SizeT, offset *SizeT, out *Tpm2Nt) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cout, coutAllocMap := (*C.TPM2_NT)(unsafe.Pointer(out)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPM2_NT_Unmarshal(cbuffer, csize, coffset, cout)
	runtime.KeepAlive(coutAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEmptyMarshal function as declared in tss2/tss2_mu.h:1985
func Tss2MuTpmsEmptyMarshal(in *TpmsEmpty, buffer []Uint8T, size SizeT, offset *SizeT) Tss2Rc {
	cin, cinAllocMap := in.PassRef()
	cbuffer, cbufferAllocMap := copyPUint8TBytes((*sliceHeader)(unsafe.Pointer(&buffer)))
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	__ret := C.Tss2_MU_TPMS_EMPTY_Marshal(cin, cbuffer, csize, coffset)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	runtime.KeepAlive(cinAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2MuTpmsEmptyUnmarshal function as declared in tss2/tss2_mu.h:1992
func Tss2MuTpmsEmptyUnmarshal(buffer *Uint8T, size SizeT, offset *SizeT, out *TpmsEmpty) Tss2Rc {
	cbuffer, cbufferAllocMap := (*C.uint8_t)(unsafe.Pointer(buffer)), cgoAllocsUnknown
	csize, csizeAllocMap := (C.size_t)(size), cgoAllocsUnknown
	coffset, coffsetAllocMap := (*C.size_t)(unsafe.Pointer(offset)), cgoAllocsUnknown
	cout, coutAllocMap := out.PassRef()
	__ret := C.Tss2_MU_TPMS_EMPTY_Unmarshal(cbuffer, csize, coffset, cout)
	runtime.KeepAlive(coutAllocMap)
	runtime.KeepAlive(coffsetAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cbufferAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2RcDecode function as declared in tss2/tss2_rc.h:12
func Tss2RcDecode(rc Tss2Rc) string {
	crc, crcAllocMap := (C.TSS2_RC)(rc), cgoAllocsUnknown
	__ret := C.Tss2_RC_Decode(crc)
	runtime.KeepAlive(crcAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Tss2RcSethandler function as declared in tss2/tss2_rc.h:14
func Tss2RcSethandler(layer Uint8T, name []string, handler Tss2RcHandler) Tss2RcHandler {
	clayer, clayerAllocMap := (C.uint8_t)(layer), cgoAllocsUnknown
	cname, cnameAllocMap := copyPCharBytes((*sliceHeader)(unsafe.Pointer(&name)))
	chandler, chandlerAllocMap := *(**[0]byte)(unsafe.Pointer(&handler)), cgoAllocsUnknown
	__ret := C.Tss2_RC_SetHandler(clayer, cname, chandler)
	runtime.KeepAlive(chandlerAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(clayerAllocMap)
	__v := *NewTss2RcHandlerRef(unsafe.Pointer(&__ret))
	return __v
}

// Tss2TctiDeviceInit function as declared in tss2/tss2_tcti_device.h:15
func Tss2TctiDeviceInit(tcticontext *Tss2TctiContext, size *SizeT, conf string) Tss2Rc {
	ctcticontext, ctcticontextAllocMap := (*C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcticontext)), cgoAllocsUnknown
	csize, csizeAllocMap := (*C.size_t)(unsafe.Pointer(size)), cgoAllocsUnknown
	cconf, cconfAllocMap := unpackPCharString(conf)
	__ret := C.Tss2_Tcti_Device_Init(ctcticontext, csize, cconf)
	runtime.KeepAlive(cconfAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(ctcticontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2TctildrFinalize function as declared in tss2/tss2_tctildr.h:15
func Tss2TctildrFinalize(context **Tss2TctiContext) {
	ccontext, ccontextAllocMap := (**C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(context)), cgoAllocsUnknown
	C.Tss2_TctiLdr_Finalize(ccontext)
	runtime.KeepAlive(ccontextAllocMap)
}

// Tss2TctildrInitializeEx function as declared in tss2/tss2_tctildr.h:17
func Tss2TctildrInitializeEx(name string, conf string, context **Tss2TctiContext) Tss2Rc {
	cname, cnameAllocMap := unpackPCharString(name)
	cconf, cconfAllocMap := unpackPCharString(conf)
	ccontext, ccontextAllocMap := (**C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(context)), cgoAllocsUnknown
	__ret := C.Tss2_TctiLdr_Initialize_Ex(cname, cconf, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(cconfAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2TctildrInitialize function as declared in tss2/tss2_tctildr.h:21
func Tss2TctildrInitialize(nameconf string, context **Tss2TctiContext) Tss2Rc {
	cnameconf, cnameconfAllocMap := unpackPCharString(nameconf)
	ccontext, ccontextAllocMap := (**C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(context)), cgoAllocsUnknown
	__ret := C.Tss2_TctiLdr_Initialize(cnameconf, ccontext)
	runtime.KeepAlive(ccontextAllocMap)
	runtime.KeepAlive(cnameconfAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2TctildrGetinfo function as declared in tss2/tss2_tctildr.h:24
func Tss2TctildrGetinfo(name string, info **Tss2TctiInfo) Tss2Rc {
	cname, cnameAllocMap := unpackPCharString(name)
	cinfo, cinfoAllocMap := (**C.TSS2_TCTI_INFO)(unsafe.Pointer(info)), cgoAllocsUnknown
	__ret := C.Tss2_TctiLdr_GetInfo(cname, cinfo)
	runtime.KeepAlive(cinfoAllocMap)
	runtime.KeepAlive(cnameAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}

// Tss2TctildrFreeinfo function as declared in tss2/tss2_tctildr.h:27
func Tss2TctildrFreeinfo(info **Tss2TctiInfo) {
	cinfo, cinfoAllocMap := (**C.TSS2_TCTI_INFO)(unsafe.Pointer(info)), cgoAllocsUnknown
	C.Tss2_TctiLdr_FreeInfo(cinfo)
	runtime.KeepAlive(cinfoAllocMap)
}

// Tss2TctiMssimInit function as declared in tss2/tss2_tcti_mssim.h:31
func Tss2TctiMssimInit(tcticontext *Tss2TctiContext, size *SizeT, conf string) Tss2Rc {
	ctcticontext, ctcticontextAllocMap := (*C.TSS2_TCTI_CONTEXT)(unsafe.Pointer(tcticontext)), cgoAllocsUnknown
	csize, csizeAllocMap := (*C.size_t)(unsafe.Pointer(size)), cgoAllocsUnknown
	cconf, cconfAllocMap := unpackPCharString(conf)
	__ret := C.Tss2_Tcti_Mssim_Init(ctcticontext, csize, cconf)
	runtime.KeepAlive(cconfAllocMap)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(ctcticontextAllocMap)
	__v := (Tss2Rc)(__ret)
	return __v
}
